{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _map from \"lodash/map\";\nimport React, { useCallback } from 'react';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { runOnJS, useAnimatedReaction, useAnimatedStyle, useSharedValue, withSpring, withTiming } from 'react-native-reanimated';\nimport { useDidUpdate } from \"../../hooks\";\nimport { animationConfig } from \"./usePresenter\";\nimport View from \"../view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction SortableItem(props) {\n  var data = props.data,\n    id = props.id,\n    itemsOrder = props.itemsOrder,\n    onChange = props.onChange,\n    style = props.style,\n    getItemOrderById = props.getItemOrderById,\n    getOrderByPosition = props.getOrderByPosition,\n    getIdByItemOrder = props.getIdByItemOrder,\n    getTranslationByOrderChange = props.getTranslationByOrderChange,\n    updateItemLayout = props.updateItemLayout;\n  var initialIndex = useSharedValue(_map(data, 'id').indexOf(id));\n  var currIndex = useSharedValue(initialIndex.value);\n  var translateX = useSharedValue(0);\n  var translateY = useSharedValue(0);\n  var isDragging = useSharedValue(false);\n  var tempItemsOrder = useSharedValue(itemsOrder.value);\n  var tempTranslateX = useSharedValue(0);\n  var tempTranslateY = useSharedValue(0);\n  useDidUpdate(function () {\n    var newItemIndex = _map(data, 'id').indexOf(id);\n    initialIndex.value = newItemIndex;\n    currIndex.value = newItemIndex;\n    translateX.value = 0;\n    translateY.value = 0;\n  }, [data]);\n  useAnimatedReaction(function () {\n    var _f = function _f() {\n      return getItemOrderById(itemsOrder.value, id);\n    };\n    _f._closure = {\n      getItemOrderById: getItemOrderById,\n      itemsOrder: itemsOrder,\n      id: id\n    };\n    _f.asString = \"function _f(){const{getItemOrderById,itemsOrder,id}=jsThis._closure;{return getItemOrderById(itemsOrder.value,id);}}\";\n    _f.__workletHash = 14275708473502;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (76:22)\";\n    return _f;\n  }(), function () {\n    var _f = function _f(newOrder, prevOrder) {\n      if (prevOrder === null || newOrder === prevOrder) {\n        return;\n      }\n      currIndex.value = newOrder;\n      if (!isDragging.value) {\n        var translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n        translateX.value = withTiming(translation.x, animationConfig);\n        translateY.value = withTiming(translation.y, animationConfig);\n      }\n    };\n    _f._closure = {\n      currIndex: currIndex,\n      isDragging: isDragging,\n      getTranslationByOrderChange: getTranslationByOrderChange,\n      initialIndex: initialIndex,\n      translateX: translateX,\n      withTiming: withTiming,\n      animationConfig: animationConfig,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(newOrder,prevOrder){const{currIndex,isDragging,getTranslationByOrderChange,initialIndex,translateX,withTiming,animationConfig,translateY}=jsThis._closure;{if(prevOrder===null||newOrder===prevOrder){return;}currIndex.value=newOrder;if(!isDragging.value){const translation=getTranslationByOrderChange(currIndex.value,initialIndex.value);translateX.value=withTiming(translation.x,animationConfig);translateY.value=withTiming(translation.y,animationConfig);}}}\";\n    _f.__workletHash = 13157286075621;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (76:68)\";\n    return _f;\n  }(), []);\n  var onLayout = useCallback(function () {\n    var _f = function _f(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n      updateItemLayout({\n        width: width,\n        height: height\n      });\n    };\n    _f._closure = {\n      updateItemLayout: updateItemLayout\n    };\n    _f.asString = \"function _f(event){const{updateItemLayout}=jsThis._closure;{const{width:width,height:height}=event.nativeEvent.layout;updateItemLayout({width:width,height:height});}}\";\n    _f.__workletHash = 12208765018665;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (87:31)\";\n    return _f;\n  }(), []);\n  var dragOnLongPressGesture = Gesture.Pan().activateAfterLongPress(250).onStart(function () {\n    var _f = function _f() {\n      isDragging.value = true;\n      var translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n      translateX.value = translation.x;\n      translateY.value = translation.y;\n      tempTranslateX.value = translateX.value;\n      tempTranslateY.value = translateY.value;\n      tempItemsOrder.value = itemsOrder.value;\n    };\n    _f._closure = {\n      isDragging: isDragging,\n      getTranslationByOrderChange: getTranslationByOrderChange,\n      currIndex: currIndex,\n      initialIndex: initialIndex,\n      translateX: translateX,\n      translateY: translateY,\n      tempTranslateX: tempTranslateX,\n      tempTranslateY: tempTranslateY,\n      tempItemsOrder: tempItemsOrder,\n      itemsOrder: itemsOrder\n    };\n    _f.asString = \"function _f(){const{isDragging,getTranslationByOrderChange,currIndex,initialIndex,translateX,translateY,tempTranslateX,tempTranslateY,tempItemsOrder,itemsOrder}=jsThis._closure;{isDragging.value=true;const translation=getTranslationByOrderChange(currIndex.value,initialIndex.value);translateX.value=translation.x;translateY.value=translation.y;tempTranslateX.value=translateX.value;tempTranslateY.value=translateY.value;tempItemsOrder.value=itemsOrder.value;}}\";\n    _f.__workletHash = 3813191658333;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (99:83)\";\n    return _f;\n  }()).onUpdate(function () {\n    var _f = function _f(event) {\n      translateX.value = tempTranslateX.value + event.translationX;\n      translateY.value = tempTranslateY.value + event.translationY;\n      var oldOrder = getItemOrderById(itemsOrder.value, id);\n      var newOrder = getOrderByPosition(translateX.value, translateY.value) + initialIndex.value;\n      if (oldOrder !== newOrder) {\n        var itemIdToSwap = getIdByItemOrder(itemsOrder.value, newOrder);\n        if (itemIdToSwap !== undefined) {\n          var newItemsOrder = _toConsumableArray(itemsOrder.value);\n          newItemsOrder[newOrder] = id;\n          newItemsOrder[oldOrder] = itemIdToSwap;\n          itemsOrder.value = newItemsOrder;\n        }\n      }\n    };\n    _f._closure = {\n      translateX: translateX,\n      tempTranslateX: tempTranslateX,\n      translateY: translateY,\n      tempTranslateY: tempTranslateY,\n      getItemOrderById: getItemOrderById,\n      itemsOrder: itemsOrder,\n      id: id,\n      getOrderByPosition: getOrderByPosition,\n      initialIndex: initialIndex,\n      getIdByItemOrder: getIdByItemOrder\n    };\n    _f.asString = \"function _f(event){const{translateX,tempTranslateX,translateY,tempTranslateY,getItemOrderById,itemsOrder,id,getOrderByPosition,initialIndex,getIdByItemOrder}=jsThis._closure;{translateX.value=tempTranslateX.value+event.translationX;translateY.value=tempTranslateY.value+event.translationY;const oldOrder=getItemOrderById(itemsOrder.value,id);const newOrder=getOrderByPosition(translateX.value,translateY.value)+initialIndex.value;if(oldOrder!==newOrder){const itemIdToSwap=getIdByItemOrder(itemsOrder.value,newOrder);if(itemIdToSwap!==undefined){const newItemsOrder=[...itemsOrder.value];newItemsOrder[newOrder]=id;newItemsOrder[oldOrder]=itemIdToSwap;itemsOrder.value=newItemsOrder;}}}}\";\n    _f.__workletHash = 2887716227690;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (107:14)\";\n    return _f;\n  }()).onEnd(function () {\n    var _f = function _f() {\n      var translation = getTranslationByOrderChange(getItemOrderById(itemsOrder.value, id), getItemOrderById(tempItemsOrder.value, id));\n      translateX.value = withTiming(tempTranslateX.value + translation.x, animationConfig);\n      translateY.value = withTiming(tempTranslateY.value + translation.y, animationConfig);\n    };\n    _f._closure = {\n      getTranslationByOrderChange: getTranslationByOrderChange,\n      getItemOrderById: getItemOrderById,\n      itemsOrder: itemsOrder,\n      id: id,\n      tempItemsOrder: tempItemsOrder,\n      translateX: translateX,\n      withTiming: withTiming,\n      tempTranslateX: tempTranslateX,\n      animationConfig: animationConfig,\n      translateY: translateY,\n      tempTranslateY: tempTranslateY\n    };\n    _f.asString = \"function _f(){const{getTranslationByOrderChange,getItemOrderById,itemsOrder,id,tempItemsOrder,translateX,withTiming,tempTranslateX,animationConfig,translateY,tempTranslateY}=jsThis._closure;{const translation=getTranslationByOrderChange(getItemOrderById(itemsOrder.value,id),getItemOrderById(tempItemsOrder.value,id));translateX.value=withTiming(tempTranslateX.value+translation.x,animationConfig);translateY.value=withTiming(tempTranslateY.value+translation.y,animationConfig);}}\";\n    _f.__workletHash = 8302047091291;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (123:11)\";\n    return _f;\n  }()).onFinalize(function () {\n    var _f = function _f() {\n      if (isDragging.value) {\n        isDragging.value = false;\n        if (tempItemsOrder.value.toString() !== itemsOrder.value.toString()) {\n          runOnJS(onChange)();\n        }\n      }\n    };\n    _f._closure = {\n      isDragging: isDragging,\n      tempItemsOrder: tempItemsOrder,\n      itemsOrder: itemsOrder,\n      runOnJS: runOnJS,\n      onChange: onChange\n    };\n    _f.asString = \"function _f(){const{isDragging,tempItemsOrder,itemsOrder,runOnJS,onChange}=jsThis._closure;{if(isDragging.value){isDragging.value=false;if(tempItemsOrder.value.toString()!==itemsOrder.value.toString()){runOnJS(onChange)();}}}}\";\n    _f.__workletHash = 4031137160267;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (127:16)\";\n    return _f;\n  }());\n  var animatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var scale = withSpring(isDragging.value ? 1.1 : 1);\n      var zIndex = isDragging.value ? 100 : withTiming(0, animationConfig);\n      return {\n        zIndex: zIndex,\n        transform: [{\n          translateX: translateX.value\n        }, {\n          translateY: translateY.value\n        }, {\n          scale: scale\n        }]\n      };\n    };\n    _f._closure = {\n      withSpring: withSpring,\n      isDragging: isDragging,\n      withTiming: withTiming,\n      animationConfig: animationConfig,\n      translateX: translateX,\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{withSpring,isDragging,withTiming,animationConfig,translateX,translateY}=jsThis._closure;{const scale=withSpring(isDragging.value?1.1:1);const zIndex=isDragging.value?100:withTiming(0,animationConfig);return{zIndex:zIndex,transform:[{translateX:translateX.value},{translateY:translateY.value},{scale:scale}]};}}\";\n    _f.__workletHash = 8380921701476;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\SortableItem.js (135:41)\";\n    _f.__optimalization = 2;\n    return _f;\n  }());\n  return _jsx(View, {\n    reanimated: true,\n    style: [style, animatedStyle],\n    onLayout: onLayout,\n    children: _jsx(GestureDetector, {\n      gesture: dragOnLongPressGesture,\n      children: _jsx(View, {\n        children: props.children\n      })\n    })\n  });\n}\nexport default React.memo(SortableItem);","map":{"version":3,"names":["_map","React","useCallback","Gesture","GestureDetector","runOnJS","useAnimatedReaction","useAnimatedStyle","useSharedValue","withSpring","withTiming","useDidUpdate","animationConfig","View","SortableItem","props","data","id","itemsOrder","onChange","style","getItemOrderById","getOrderByPosition","getIdByItemOrder","getTranslationByOrderChange","updateItemLayout","initialIndex","indexOf","currIndex","value","translateX","translateY","isDragging","tempItemsOrder","tempTranslateX","tempTranslateY","newItemIndex","newOrder","prevOrder","translation","x","y","onLayout","event","nativeEvent","layout","width","height","dragOnLongPressGesture","Pan","activateAfterLongPress","onStart","onUpdate","translationX","translationY","oldOrder","itemIdToSwap","undefined","newItemsOrder","onEnd","onFinalize","toString","animatedStyle","scale","zIndex","transform","children","memo"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/sortableGridList/SortableItem.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport React, { useCallback } from 'react';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { runOnJS, useAnimatedReaction, useAnimatedStyle, useSharedValue, withSpring, withTiming } from 'react-native-reanimated';\nimport { useDidUpdate } from \"../../hooks\";\nimport { animationConfig } from \"./usePresenter\";\nimport View from \"../view\";\nfunction SortableItem(props) {\n  const {\n    data,\n    id,\n    itemsOrder,\n    onChange,\n    style,\n    getItemOrderById,\n    getOrderByPosition,\n    getIdByItemOrder,\n    getTranslationByOrderChange,\n    updateItemLayout\n  } = props;\n  const initialIndex = useSharedValue(_map(data, 'id').indexOf(id));\n  const currIndex = useSharedValue(initialIndex.value);\n  const translateX = useSharedValue(0);\n  const translateY = useSharedValue(0);\n  const isDragging = useSharedValue(false);\n  const tempItemsOrder = useSharedValue(itemsOrder.value);\n  const tempTranslateX = useSharedValue(0);\n  const tempTranslateY = useSharedValue(0);\n\n  // const dataManuallyChanged = useSharedValue(false);\n\n  useDidUpdate(() => {\n    // dataManuallyChanged.value = true;\n    const newItemIndex = _map(data, 'id').indexOf(id);\n    initialIndex.value = newItemIndex;\n    currIndex.value = newItemIndex;\n    translateX.value = 0;\n    translateY.value = 0;\n  }, [data]);\n\n  // useAnimatedReaction(() => itemsOrder.value,\n  //   (currItemsOrder, prevItemsOrder) => {\n  //     // Note: Unfortunately itemsOrder sharedValue is being initialized on each render\n  //     // Therefore I added this extra check here that compares current and previous values\n  //     // See open issue: https://github.com/software-mansion/react-native-reanimated/issues/3224\n  //     if (prevItemsOrder === null || currItemsOrder.join(',') === prevItemsOrder.join(',')) {\n  //       return;\n  //     } else {\n  //       const newOrder = getItemOrderById(currItemsOrder, id);\n  //       const prevOrder = getItemOrderById(prevItemsOrder, id);\n\n  //       /* In case the order of the item has returned back to its initial index we reset its position */\n  //       if (newOrder === initialIndex.value) {\n  //         /* Reset without an animation when the change is due to manual data change */\n  //         if (dataManuallyChanged.value) {\n  //           translateX.value = 0;\n  //           translateY.value = 0;\n  //           /* Reset with an animation when the change id due to user reordering */\n  //         } else {\n  //           translateX.value = withTiming(0, animationConfig);\n  //           translateY.value = withTiming(0, animationConfig);\n  //         }\n  //         dataManuallyChanged.value = false;\n  //         /* Handle an order change, animate item to its new position  */\n  //       } else if (newOrder !== prevOrder) {\n  //         // const translation = getTranslationByOrderChange(newOrder, prevOrder);\n  //         const translation = getTranslationByOrderChange(newOrder, initialIndex.value);\n  //         translateX.value = withTiming(/* translateX.value +  */translation.x, animationConfig);\n  //         translateY.value = withTiming(/* translateY.value +  */translation.y, animationConfig);\n  //         // translateX.value = withTiming(0, animationConfig);\n  //         // translateY.value = withTiming(0, animationConfig);\n  //       }\n  //     }\n  //   });\n\n  useAnimatedReaction(() => getItemOrderById(itemsOrder.value, id), (newOrder, prevOrder) => {\n    if (prevOrder === null || newOrder === prevOrder) {\n      return;\n    }\n    currIndex.value = newOrder;\n    if (!isDragging.value) {\n      const translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n      translateX.value = withTiming(translation.x, animationConfig);\n      translateY.value = withTiming(translation.y, animationConfig);\n    }\n  }, []);\n  const onLayout = useCallback(event => {\n    'worklet';\n\n    const {\n      width,\n      height\n    } = event.nativeEvent.layout;\n    updateItemLayout({\n      width,\n      height\n    });\n  }, []);\n  const dragOnLongPressGesture = Gesture.Pan().activateAfterLongPress(250).onStart(() => {\n    isDragging.value = true;\n    const translation = getTranslationByOrderChange(currIndex.value, initialIndex.value);\n    translateX.value = translation.x;\n    translateY.value = translation.y;\n    tempTranslateX.value = translateX.value;\n    tempTranslateY.value = translateY.value;\n    tempItemsOrder.value = itemsOrder.value;\n  }).onUpdate(event => {\n    translateX.value = tempTranslateX.value + event.translationX;\n    translateY.value = tempTranslateY.value + event.translationY;\n\n    // Swapping items\n    const oldOrder = getItemOrderById(itemsOrder.value, id);\n    const newOrder = getOrderByPosition(translateX.value, translateY.value) + initialIndex.value;\n    if (oldOrder !== newOrder) {\n      const itemIdToSwap = getIdByItemOrder(itemsOrder.value, newOrder);\n      if (itemIdToSwap !== undefined) {\n        const newItemsOrder = [...itemsOrder.value];\n        newItemsOrder[newOrder] = id;\n        newItemsOrder[oldOrder] = itemIdToSwap;\n        itemsOrder.value = newItemsOrder;\n      }\n    }\n  }).onEnd(() => {\n    const translation = getTranslationByOrderChange(getItemOrderById(itemsOrder.value, id), getItemOrderById(tempItemsOrder.value, id));\n    translateX.value = withTiming(tempTranslateX.value + translation.x, animationConfig);\n    translateY.value = withTiming(tempTranslateY.value + translation.y, animationConfig);\n  }).onFinalize(() => {\n    if (isDragging.value) {\n      isDragging.value = false;\n      if (tempItemsOrder.value.toString() !== itemsOrder.value.toString()) {\n        runOnJS(onChange)();\n      }\n    }\n  });\n  const animatedStyle = useAnimatedStyle(() => {\n    const scale = withSpring(isDragging.value ? 1.1 : 1);\n    const zIndex = isDragging.value ? 100 : withTiming(0, animationConfig);\n    return {\n      zIndex,\n      transform: [{\n        translateX: translateX.value\n      }, {\n        translateY: translateY.value\n      }, {\n        scale\n      }]\n    };\n  });\n  return <View reanimated style={[style, animatedStyle]} onLayout={onLayout}>\n      <GestureDetector gesture={dragOnLongPressGesture}>\n        <View>{props.children}</View>\n      </GestureDetector>\n    </View>;\n}\nexport default React.memo(SortableItem);"],"mappings":"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"},"metadata":{},"sourceType":"module"}