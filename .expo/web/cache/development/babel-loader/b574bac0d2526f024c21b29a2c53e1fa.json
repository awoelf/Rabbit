{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _Typography$text;\nvar _excluded = [\"inputStyle\", \"selectionColor\", \"title\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _map from \"lodash/map\";\nimport _isString from \"lodash/isString\";\nimport _get from \"lodash/get\";\nimport _size from \"lodash/size\";\nimport _debounce from \"lodash/debounce\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _invoke from \"lodash/invoke\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isNil from \"lodash/isNil\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport React, { Component } from 'react';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Colors, BorderRadiuses, ThemeManager, Typography, Spacings } from \"../../style\";\nimport Assets from \"../../assets\";\nimport { LogService } from \"../../services\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport TextFieldMigrator from \"../textField/TextFieldMigrator\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Chip from \"../chip\";\nimport Icon from \"../icon\";\nimport { getValidationBasedColor, getCounterTextColor, getCounterText, getChipDismissColor, isDisabled } from \"./Presenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GUTTER_SPACING = 8;\nvar ChipsInput = function (_Component) {\n  _inherits(ChipsInput, _Component);\n  var _super = _createSuper(ChipsInput);\n  function ChipsInput(props) {\n    var _this$input$current;\n    var _this;\n    _classCallCheck(this, ChipsInput);\n    _this = _super.call(this, props);\n    _this.input = React.createRef();\n    _this.scrollRef = React.createRef();\n    _this.addTag = function () {\n      var _this$scrollRef, _this$scrollRef$curre;\n      var _this$props = _this.props,\n        onCreateTag = _this$props.onCreateTag,\n        disableTagAdding = _this$props.disableTagAdding,\n        maxLength = _this$props.maxLength,\n        chipsProps = _this$props.chips;\n      var _this$state = _this.state,\n        value = _this$state.value,\n        chips = _this$state.chips;\n      if ((_this$scrollRef = _this.scrollRef) != null && (_this$scrollRef$curre = _this$scrollRef.current) != null && _this$scrollRef$curre.scrollToEnd) {\n        var _this$scrollRef2, _this$scrollRef2$curr;\n        (_this$scrollRef2 = _this.scrollRef) == null ? void 0 : (_this$scrollRef2$curr = _this$scrollRef2.current) == null ? void 0 : _this$scrollRef2$curr.scrollToEnd();\n      }\n      if (disableTagAdding) {\n        return;\n      }\n      if (_isNil(value) || _isEmpty(value.trim())) {\n        return;\n      }\n      if (maxLength && _this.state.chips.length >= maxLength) {\n        _this.setState({\n          value: ''\n        });\n        return;\n      }\n      var newChip = _isFunction(onCreateTag) ? onCreateTag(value) : chipsProps ? {\n        label: value\n      } : value;\n      var newChips = [].concat(_toConsumableArray(chips), [newChip]);\n      _this.setState({\n        value: '',\n        chips: newChips\n      });\n      _invoke(_this.props, 'onChangeTags', newChips, ChipsInput.onChangeTagsActions.ADDED, newChip);\n      _this.clear();\n    };\n    _this.markTagIndex = function (chipIndex) {\n      _this.setState({\n        chipIndexToRemove: chipIndex\n      });\n    };\n    _this.onChangeText = _debounce(function (value) {\n      _this.setState({\n        value: value,\n        chipIndexToRemove: undefined\n      });\n      _invoke(_this.props, 'onChangeText', value);\n    }, 0);\n    _this.removeTag = function () {\n      var _this$state2 = _this.state,\n        value = _this$state2.value,\n        chips = _this$state2.chips,\n        chipIndexToRemove = _this$state2.chipIndexToRemove;\n      var tagsCount = _size(chips);\n      var hasNoValue = _isEmpty(value);\n      var hasTags = tagsCount > 0;\n      var disableTagRemoval = _this.props.disableTagRemoval;\n      if (disableTagRemoval) {\n        return;\n      }\n      if (hasNoValue && hasTags && _isUndefined(chipIndexToRemove)) {\n        _this.setState({\n          chipIndexToRemove: tagsCount - 1\n        });\n      } else if (!_isUndefined(chipIndexToRemove)) {\n        _this.removeMarkedTag();\n      }\n    };\n    _this.onKeyPress = function (event) {\n      _invoke(_this.props, 'onKeyPress', event);\n      var keyCode = _get(event, 'nativeEvent.key');\n      var pressedBackspace = keyCode === Constants.backspaceKey;\n      if (pressedBackspace) {\n        _this.removeTag();\n      }\n    };\n    _this.getLabel = function (item) {\n      var getLabel = _this.props.getLabel;\n      if (getLabel) {\n        return getLabel(item);\n      }\n      if (_isString(item)) {\n        return item;\n      }\n      return _get(item, 'label');\n    };\n    _this.onFocus = function () {\n      _this.setState({\n        isFocused: true\n      });\n    };\n    _this.onBlur = function () {\n      _this.setState({\n        isFocused: false\n      });\n    };\n    _this.renderTag = function (tag, index) {\n      var _this$props2 = _this.props,\n        tagStyle = _this$props2.tagStyle,\n        renderTag = _this$props2.renderTag;\n      var chipIndexToRemove = _this.state.chipIndexToRemove;\n      var shouldMarkTag = chipIndexToRemove === index;\n      var markedTagStyle = tag.invalid ? styles.invalidMarkedTag : styles.tagMarked;\n      var defaultTagStyle = tag.invalid ? styles.invalidTag : styles.tag;\n      if (_isFunction(renderTag)) {\n        return renderTag(tag, index, shouldMarkTag, _this.getLabel(tag));\n      }\n      return _jsx(View, {\n        style: [defaultTagStyle, tagStyle, basicTagStyle, shouldMarkTag && markedTagStyle],\n        children: _this.renderLabel(tag, shouldMarkTag)\n      }, index);\n    };\n    _this.renderTagWrapper = function (tag, index) {\n      return _jsx(TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return _this.onTagPress(index);\n        },\n        accessibilityHint: !_this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined,\n        children: _this.renderTag(tag, index)\n      }, index);\n    };\n    _this.renderNewChip = function () {\n      var defaultChipProps = _this.props.defaultChipProps;\n      var _this$state3 = _this.state,\n        chipIndexToRemove = _this$state3.chipIndexToRemove,\n        chips = _this$state3.chips;\n      var disabled = isDisabled(_this.props);\n      return _map(chips, function (chip, index) {\n        var selected = chipIndexToRemove === index;\n        var dismissColor = getChipDismissColor(chip, selected, defaultChipProps);\n        return _jsx(View, {\n          center: true,\n          flexS: true,\n          \"marginT-2\": true,\n          \"marginB-2\": true,\n          children: _jsx(Chip, _objectSpread(_objectSpread(_objectSpread({\n            containerStyle: [styles.tag, chip.invalid && styles.invalidTag],\n            labelStyle: [styles.tagLabel, chip.invalid && styles.errorMessage, selected && !!chip.invalid && styles.errorMessageWhileMarked]\n          }, chip), defaultChipProps), {}, {\n            disabled: disabled,\n            \"marginR-s2\": true,\n            \"marginT-2\": true,\n            left: Assets.icons.x,\n            onPress: function onPress(_) {\n              return _this.onTagPress(index);\n            },\n            onDismiss: selected ? function () {\n              return _this.onTagPress(index);\n            } : undefined,\n            dismissColor: dismissColor,\n            dismissIcon: Assets.icons.xSmall,\n            dismissIconStyle: styles.dismissIconStyle\n          }), index)\n        });\n      });\n    };\n    _this.renderTitleText = function () {\n      var _this$props3 = _this.props,\n        title = _this$props3.title,\n        defaultChipProps = _this$props3.defaultChipProps;\n      var color = _this.state.isFocused ? getValidationBasedColor(_this.state.chips, defaultChipProps) : Colors.grey30;\n      return title && _jsx(Text, {\n        text70L: true,\n        color: color,\n        children: title\n      });\n    };\n    _this.renderChips = function () {\n      var _this$props4 = _this.props,\n        disableTagRemoval = _this$props4.disableTagRemoval,\n        chipsProps = _this$props4.chips;\n      var chips = _this.state.chips;\n      var renderFunction = disableTagRemoval ? _this.renderTag : _this.renderTagWrapper;\n      if (chipsProps) {\n        return _this.renderNewChip();\n      } else {\n        return _map(chips, function (tag, index) {\n          return _jsx(View, {\n            children: renderFunction(tag, index)\n          });\n        });\n      }\n    };\n    _this.renderUnderline = function () {\n      var _this$state4 = _this.state,\n        isFocused = _this$state4.isFocused,\n        chips = _this$state4.chips;\n      var defaultChipProps = _this.props.defaultChipProps;\n      var color = getValidationBasedColor(chips, defaultChipProps);\n      return _jsx(View, {\n        height: 1,\n        \"marginT-10\": true,\n        backgroundColor: isFocused ? color : Colors.grey50\n      });\n    };\n    _this.renderChipsContainer = function () {\n      var _this$props5 = _this.props,\n        maxHeight = _this$props5.maxHeight,\n        scrollViewProps = _this$props5.scrollViewProps;\n      var Container = maxHeight ? ScrollView : View;\n      return _jsxs(Container, _objectSpread(_objectSpread({\n        ref: _this.scrollRef,\n        showsVerticalScrollIndicator: false,\n        style: !maxHeight && styles.tagsList,\n        contentContainerStyle: styles.tagsList\n      }, scrollViewProps), {}, {\n        children: [_this.renderChips(), _this.renderTextInput()]\n      }));\n    };\n    _this.state = {\n      value: props.value,\n      chips: _cloneDeep(props.tags || props.chips) || [],\n      chipIndexToRemove: undefined,\n      initialChips: props.tags || props.chips,\n      isFocused: ((_this$input$current = _this.input.current) == null ? void 0 : _this$input$current.isFocused()) || false\n    };\n    LogService.componentDeprecationWarn({\n      oldComponent: 'ChipsInput',\n      newComponent: 'Incubator.ChipsInput'\n    });\n    return _this;\n  }\n  _createClass(ChipsInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Constants.isAndroid) {\n        var textInputHandle = findNodeHandle(this.input.current);\n        if (textInputHandle && NativeModules.TextInputDelKeyHandler) {\n          NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n        }\n      }\n    }\n  }, {\n    key: \"removeMarkedTag\",\n    value: function removeMarkedTag() {\n      var _this$state5 = this.state,\n        chips = _this$state5.chips,\n        chipIndexToRemove = _this$state5.chipIndexToRemove;\n      if (!_isUndefined(chipIndexToRemove)) {\n        var removedTag = chips[chipIndexToRemove];\n        chips.splice(chipIndexToRemove, 1);\n        this.setState({\n          chips: chips,\n          chipIndexToRemove: undefined\n        });\n        _invoke(this.props, 'onChangeTags', chips, ChipsInput.onChangeTagsActions.REMOVED, removedTag);\n      }\n    }\n  }, {\n    key: \"onTagPress\",\n    value: function onTagPress(index) {\n      var onTagPress = this.props.onTagPress;\n      var chipIndexToRemove = this.state.chipIndexToRemove;\n      if (onTagPress) {\n        onTagPress(index, chipIndexToRemove);\n        return;\n      }\n      if (chipIndexToRemove === index) {\n        this.removeMarkedTag();\n      } else {\n        this.markTagIndex(index);\n      }\n    }\n  }, {\n    key: \"isLastTagMarked\",\n    value: function isLastTagMarked() {\n      var _this$state6 = this.state,\n        chips = _this$state6.chips,\n        chipIndexToRemove = _this$state6.chipIndexToRemove;\n      var tagsCount = _size(chips);\n      var isLastTagMarked = chipIndexToRemove === tagsCount - 1;\n      return isLastTagMarked;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(tag, shouldMarkTag) {\n      var typography = this.props.modifiers.typography;\n      var label = this.getLabel(tag);\n      return _jsxs(View, {\n        row: true,\n        centerV: true,\n        children: [shouldMarkTag && _jsx(Icon, {\n          style: [styles.removeIcon, tag.invalid && styles.basicTagStyle && styles.invalidTagRemoveIcon],\n          source: Assets.icons.x\n        }), _jsx(Text, {\n          style: [tag.invalid ? shouldMarkTag ? styles.errorMessageWhileMarked : styles.errorMessage : styles.tagLabel, typography],\n          accessibilityLabel: label + \" tag\",\n          children: !tag.invalid && shouldMarkTag ? 'Remove' : label\n        })]\n      });\n    }\n  }, {\n    key: \"renderCharCounter\",\n    value: function renderCharCounter() {\n      var maxLength = this.props.maxLength;\n      var counter = this.state.chips.length;\n      if (maxLength) {\n        var color = getCounterTextColor(this.state.chips, this.props);\n        var counterText = getCounterText(counter, maxLength);\n        return _jsx(Text, {\n          color: color,\n          style: styles.label,\n          accessibilityLabel: counter + \" out of \" + maxLength + \" max chips\",\n          children: counterText\n        });\n      }\n    }\n  }, {\n    key: \"renderTextInput\",\n    value: function renderTextInput() {\n      var _this$props6 = this.props,\n        inputStyle = _this$props6.inputStyle,\n        selectionColor = _this$props6.selectionColor,\n        title = _this$props6.title,\n        others = _objectWithoutProperties(_this$props6, _excluded);\n      var value = this.state.value;\n      var isLastTagMarked = this.isLastTagMarked();\n      return _jsx(View, {\n        style: styles.inputWrapper,\n        children: _jsx(TextFieldMigrator, _objectSpread(_objectSpread({\n          ref: this.input,\n          text80: true,\n          blurOnSubmit: false\n        }, others), {}, {\n          maxLength: undefined,\n          title: this.props.chips ? undefined : title,\n          value: value,\n          onSubmitEditing: this.addTag,\n          onChangeText: this.onChangeText,\n          onKeyPress: this.onKeyPress,\n          enableErrors: false,\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          hideUnderline: true,\n          selectionColor: isLastTagMarked ? 'transparent' : selectionColor,\n          style: [inputStyle, styles.alignTextCenter],\n          containerStyle: {\n            flexGrow: 0\n          },\n          collapsable: false,\n          accessibilityHint: !this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined\n        }))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n        containerStyle = _this$props7.containerStyle,\n        hideUnderline = _this$props7.hideUnderline,\n        validationErrorMessage = _this$props7.validationErrorMessage,\n        leftElement = _this$props7.leftElement,\n        maxHeight = _this$props7.maxHeight,\n        chips = _this$props7.chips;\n      var chipIndexToRemove = this.state.chipIndexToRemove;\n      return _jsxs(View, {\n        style: [!hideUnderline && styles.withUnderline, containerStyle],\n        children: [!!chips && this.renderTitleText(), _jsxs(View, {\n          style: [styles.tagListContainer, {\n            maxHeight: maxHeight\n          }],\n          children: [leftElement, this.renderChipsContainer()]\n        }), !hideUnderline && this.renderUnderline(), this.renderCharCounter(), validationErrorMessage ? _jsx(View, {\n          children: _jsx(Text, {\n            style: [styles.errorMessage, !!chipIndexToRemove && styles.errorMessageWhileMarked],\n            children: validationErrorMessage\n          })\n        }) : null]\n      });\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var _this$input$current2;\n      (_this$input$current2 = this.input.current) == null ? void 0 : _this$input$current2.blur();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this$input$current3;\n      (_this$input$current3 = this.input.current) == null ? void 0 : _this$input$current3.focus();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this$input$current4;\n      (_this$input$current4 = this.input.current) == null ? void 0 : _this$input$current4.clear();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var tags = nextProps.tags,\n        chips = nextProps.chips;\n      if (tags && tags !== prevState.initialChips || chips && chips !== prevState.initialChips) {\n        return {\n          initialChips: nextProps.tags || nextProps.chips,\n          chips: nextProps.tags || nextProps.chips\n        };\n      }\n      return null;\n    }\n  }]);\n  return ChipsInput;\n}(Component);\nChipsInput.displayName = 'ChipsInput';\nChipsInput.onChangeTagsActions = {\n  ADDED: 'added',\n  REMOVED: 'removed'\n};\nexport { ChipsInput };\nexport default asBaseComponent(ChipsInput);\nvar basicTagStyle = {\n  borderRadius: BorderRadiuses.br100,\n  paddingVertical: 4.5,\n  paddingHorizontal: 12,\n  marginRight: GUTTER_SPACING,\n  marginVertical: GUTTER_SPACING / 2\n};\nvar styles = StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ThemeManager.dividerColor\n  },\n  tagsList: {\n    minHeight: 38,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  tagListContainer: {\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    flexWrap: 'nowrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  tag: {\n    borderWidth: 0,\n    paddingVertical: 5,\n    backgroundColor: Colors.$backgroundPrimaryHeavy\n  },\n  invalidTag: {\n    borderWidth: 1,\n    borderColor: Colors.red30,\n    backgroundColor: 'transparent'\n  },\n  basicTagStyle: _objectSpread({}, basicTagStyle),\n  invalidMarkedTag: {\n    borderColor: Colors.red10\n  },\n  tagMarked: {\n    backgroundColor: Colors.grey10\n  },\n  dismissIconStyle: {\n    width: 10,\n    height: 10,\n    marginRight: Spacings.s1\n  },\n  removeIcon: {\n    tintColor: Colors.white,\n    width: 10,\n    height: 10,\n    marginRight: 6\n  },\n  invalidTagRemoveIcon: {\n    tintColor: Colors.red10\n  },\n  tagLabel: _objectSpread(_objectSpread({}, Typography.text80), {}, {\n    color: Colors.white\n  }),\n  errorMessage: _objectSpread(_objectSpread({}, Typography.text80), {}, {\n    color: Colors.red30\n  }),\n  errorMessageWhileMarked: {\n    color: Colors.red10\n  },\n  label: _objectSpread({\n    marginTop: Spacings.s1,\n    alignSelf: 'flex-end',\n    height: (_Typography$text = Typography.text80) == null ? void 0 : _Typography$text.lineHeight\n  }, Typography.text80),\n  alignTextCenter: {\n    textAlignVertical: 'center'\n  }\n});","map":{"version":3,"names":["_map","_isString","_get","_size","_debounce","_isUndefined","_invoke","_isFunction","_isEmpty","_isNil","_cloneDeep","React","Component","Colors","BorderRadiuses","ThemeManager","Typography","Spacings","Assets","LogService","Constants","asBaseComponent","TextFieldMigrator","View","TouchableOpacity","Text","Chip","Icon","getValidationBasedColor","getCounterTextColor","getCounterText","getChipDismissColor","isDisabled","GUTTER_SPACING","ChipsInput","props","input","createRef","scrollRef","addTag","onCreateTag","disableTagAdding","maxLength","chipsProps","chips","state","value","current","scrollToEnd","trim","length","setState","newChip","label","newChips","onChangeTagsActions","ADDED","clear","markTagIndex","chipIndex","chipIndexToRemove","onChangeText","undefined","removeTag","tagsCount","hasNoValue","hasTags","disableTagRemoval","removeMarkedTag","onKeyPress","event","keyCode","pressedBackspace","backspaceKey","getLabel","item","onFocus","isFocused","onBlur","renderTag","tag","index","tagStyle","shouldMarkTag","markedTagStyle","invalid","styles","invalidMarkedTag","tagMarked","defaultTagStyle","invalidTag","basicTagStyle","renderLabel","renderTagWrapper","onTagPress","renderNewChip","defaultChipProps","disabled","chip","selected","dismissColor","tagLabel","errorMessage","errorMessageWhileMarked","icons","x","_","xSmall","dismissIconStyle","renderTitleText","title","color","grey30","renderChips","renderFunction","renderUnderline","grey50","renderChipsContainer","maxHeight","scrollViewProps","Container","ScrollView","tagsList","renderTextInput","tags","initialChips","componentDeprecationWarn","oldComponent","newComponent","isAndroid","textInputHandle","findNodeHandle","NativeModules","TextInputDelKeyHandler","register","removedTag","splice","REMOVED","isLastTagMarked","typography","modifiers","removeIcon","invalidTagRemoveIcon","counter","counterText","inputStyle","selectionColor","others","inputWrapper","alignTextCenter","flexGrow","containerStyle","hideUnderline","validationErrorMessage","leftElement","withUnderline","tagListContainer","renderCharCounter","blur","focus","nextProps","prevState","displayName","borderRadius","br100","paddingVertical","paddingHorizontal","marginRight","marginVertical","StyleSheet","create","borderBottomWidth","hairlineWidth","borderColor","dividerColor","minHeight","backgroundColor","flexDirection","flexWrap","minWidth","justifyContent","borderWidth","$backgroundPrimaryHeavy","red30","red10","grey10","width","height","s1","tintColor","white","text80","marginTop","alignSelf","lineHeight","textAlignVertical"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/chipsInput/index.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport _isString from \"lodash/isString\";\nimport _get from \"lodash/get\";\nimport _size from \"lodash/size\";\nimport _debounce from \"lodash/debounce\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _invoke from \"lodash/invoke\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isNil from \"lodash/isNil\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport React, { Component } from 'react';\nimport { NativeModules, StyleSheet, findNodeHandle, ScrollView } from 'react-native';\nimport { Colors, BorderRadiuses, ThemeManager, Typography, Spacings } from \"../../style\";\nimport Assets from \"../../assets\";\nimport { LogService } from \"../../services\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport TextFieldMigrator from \"../textField/TextFieldMigrator\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Chip from \"../chip\";\nimport Icon from \"../icon\";\nimport { getValidationBasedColor, getCounterTextColor, getCounterText, getChipDismissColor, isDisabled } from \"./Presenter\";\nconst GUTTER_SPACING = 8;\n/**\n * @description: Chips input component\n * @modifiers: Typography\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ChipsInput/ChipsInput.gif?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ChipsInputScreen.tsx\n * @extends: TextField\n */\nclass ChipsInput extends Component {\n  static displayName = 'ChipsInput';\n  static onChangeTagsActions = {\n    ADDED: 'added',\n    REMOVED: 'removed'\n  };\n  input = React.createRef();\n  scrollRef = React.createRef();\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n      chips: _cloneDeep(props.tags || props.chips) || [],\n      chipIndexToRemove: undefined,\n      initialChips: props.tags || props.chips,\n      isFocused: this.input.current?.isFocused() || false\n    };\n    LogService.componentDeprecationWarn({\n      oldComponent: 'ChipsInput',\n      newComponent: 'Incubator.ChipsInput'\n    });\n  }\n  componentDidMount() {\n    if (Constants.isAndroid) {\n      const textInputHandle = findNodeHandle(this.input.current);\n      if (textInputHandle && NativeModules.TextInputDelKeyHandler) {\n        NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n      }\n    }\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      tags,\n      chips\n    } = nextProps;\n    if (tags && tags !== prevState.initialChips || chips && chips !== prevState.initialChips) {\n      return {\n        initialChips: nextProps.tags || nextProps.chips,\n        chips: nextProps.tags || nextProps.chips\n      };\n    }\n    return null;\n  }\n  addTag = () => {\n    const {\n      onCreateTag,\n      disableTagAdding,\n      maxLength,\n      chips: chipsProps\n    } = this.props;\n    const {\n      value,\n      chips\n    } = this.state;\n    if (this.scrollRef?.current?.scrollToEnd) {\n      this.scrollRef?.current?.scrollToEnd();\n    }\n    if (disableTagAdding) {\n      return;\n    }\n    if (_isNil(value) || _isEmpty(value.trim())) {\n      return;\n    }\n    if (maxLength && this.state.chips.length >= maxLength) {\n      this.setState({\n        value: ''\n      });\n      return;\n    }\n    const newChip = _isFunction(onCreateTag) ? onCreateTag(value) : chipsProps ? {\n      label: value\n    } : value;\n    const newChips = [...chips, newChip];\n    this.setState({\n      value: '',\n      chips: newChips\n    });\n    _invoke(this.props, 'onChangeTags', newChips, ChipsInput.onChangeTagsActions.ADDED, newChip);\n    this.clear();\n  };\n  removeMarkedTag() {\n    const {\n      chips,\n      chipIndexToRemove\n    } = this.state;\n    if (!_isUndefined(chipIndexToRemove)) {\n      const removedTag = chips[chipIndexToRemove];\n      chips.splice(chipIndexToRemove, 1);\n      this.setState({\n        chips,\n        chipIndexToRemove: undefined\n      });\n      _invoke(this.props, 'onChangeTags', chips, ChipsInput.onChangeTagsActions.REMOVED, removedTag);\n    }\n  }\n  markTagIndex = chipIndex => {\n    this.setState({\n      chipIndexToRemove: chipIndex\n    });\n  };\n  onChangeText = _debounce(value => {\n    this.setState({\n      value,\n      chipIndexToRemove: undefined\n    });\n    _invoke(this.props, 'onChangeText', value);\n  }, 0);\n  onTagPress(index) {\n    const {\n      onTagPress\n    } = this.props;\n    const {\n      chipIndexToRemove\n    } = this.state;\n\n    // custom press handler\n    if (onTagPress) {\n      onTagPress(index, chipIndexToRemove);\n      return;\n    }\n\n    // default press handler\n    if (chipIndexToRemove === index) {\n      this.removeMarkedTag();\n    } else {\n      this.markTagIndex(index);\n    }\n  }\n  isLastTagMarked() {\n    const {\n      chips,\n      chipIndexToRemove\n    } = this.state;\n    const tagsCount = _size(chips);\n    const isLastTagMarked = chipIndexToRemove === tagsCount - 1;\n    return isLastTagMarked;\n  }\n  removeTag = () => {\n    const {\n      value,\n      chips,\n      chipIndexToRemove\n    } = this.state;\n    const tagsCount = _size(chips);\n    const hasNoValue = _isEmpty(value);\n    const hasTags = tagsCount > 0;\n    const {\n      disableTagRemoval\n    } = this.props;\n    if (disableTagRemoval) {\n      return;\n    }\n    if (hasNoValue && hasTags && _isUndefined(chipIndexToRemove)) {\n      this.setState({\n        chipIndexToRemove: tagsCount - 1\n      });\n    } else if (!_isUndefined(chipIndexToRemove)) {\n      this.removeMarkedTag();\n    }\n  };\n  onKeyPress = event => {\n    _invoke(this.props, 'onKeyPress', event);\n    const keyCode = _get(event, 'nativeEvent.key');\n    const pressedBackspace = keyCode === Constants.backspaceKey;\n    if (pressedBackspace) {\n      this.removeTag();\n    }\n  };\n  getLabel = item => {\n    const {\n      getLabel\n    } = this.props;\n    if (getLabel) {\n      return getLabel(item);\n    }\n    if (_isString(item)) {\n      return item;\n    }\n    return _get(item, 'label');\n  };\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n  onBlur = () => {\n    this.setState({\n      isFocused: false\n    });\n  };\n  renderLabel(tag, shouldMarkTag) {\n    const {\n      typography\n    } = this.props.modifiers;\n    const label = this.getLabel(tag);\n    return <View row centerV>\n        {shouldMarkTag && <Icon style={[styles.removeIcon, tag.invalid && styles.basicTagStyle && styles.invalidTagRemoveIcon]} source={Assets.icons.x} />}\n        <Text style={[tag.invalid ? shouldMarkTag ? styles.errorMessageWhileMarked : styles.errorMessage : styles.tagLabel, typography]} accessibilityLabel={`${label} tag`}>\n          {!tag.invalid && shouldMarkTag ? 'Remove' : label}\n        </Text>\n      </View>;\n  }\n  renderTag = (tag, index) => {\n    const {\n      tagStyle,\n      renderTag\n    } = this.props;\n    const {\n      chipIndexToRemove\n    } = this.state;\n    const shouldMarkTag = chipIndexToRemove === index;\n    const markedTagStyle = tag.invalid ? styles.invalidMarkedTag : styles.tagMarked;\n    const defaultTagStyle = tag.invalid ? styles.invalidTag : styles.tag;\n    if (_isFunction(renderTag)) {\n      return renderTag(tag, index, shouldMarkTag, this.getLabel(tag));\n    }\n    return <View key={index} style={[defaultTagStyle, tagStyle, basicTagStyle, shouldMarkTag && markedTagStyle]}>\n        {this.renderLabel(tag, shouldMarkTag)}\n      </View>;\n  };\n  renderTagWrapper = (tag, index) => {\n    return <TouchableOpacity key={index} activeOpacity={1} onPress={() => this.onTagPress(index)} accessibilityHint={!this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined}>\n        {this.renderTag(tag, index)}\n      </TouchableOpacity>;\n  };\n  renderNewChip = () => {\n    const {\n      defaultChipProps\n    } = this.props;\n    const {\n      chipIndexToRemove,\n      chips\n    } = this.state;\n    const disabled = isDisabled(this.props);\n    return _map(chips, (chip, index) => {\n      const selected = chipIndexToRemove === index;\n      const dismissColor = getChipDismissColor(chip, selected, defaultChipProps);\n      return <View center flexS marginT-2 marginB-2>\n          <Chip key={index} containerStyle={[styles.tag, chip.invalid && styles.invalidTag]} labelStyle={[styles.tagLabel, chip.invalid && styles.errorMessage, selected && !!chip.invalid && styles.errorMessageWhileMarked]} {...chip} {...defaultChipProps} disabled={disabled} marginR-s2 marginT-2 left={Assets.icons.x} onPress={_ => this.onTagPress(index)} onDismiss={selected ? () => this.onTagPress(index) : undefined} dismissColor={dismissColor} dismissIcon={Assets.icons.xSmall} dismissIconStyle={styles.dismissIconStyle} />\n        </View>;\n    });\n  };\n  renderTitleText = () => {\n    const {\n      title,\n      defaultChipProps\n    } = this.props;\n    const color = this.state.isFocused ? getValidationBasedColor(this.state.chips, defaultChipProps) : Colors.grey30;\n    return title && <Text text70L color={color}>{title}</Text>;\n  };\n  renderChips = () => {\n    const {\n      disableTagRemoval,\n      chips: chipsProps\n    } = this.props;\n    const {\n      chips\n    } = this.state;\n    const renderFunction = disableTagRemoval ? this.renderTag : this.renderTagWrapper;\n    if (chipsProps) {\n      return this.renderNewChip();\n    } else {\n      // The old way of creating the 'Chip' internally \n      return _map(chips, (tag, index) => {\n        return <View>\n            {renderFunction(tag, index)}\n          </View>;\n      });\n    }\n  };\n  renderCharCounter() {\n    const {\n      maxLength\n    } = this.props;\n    const counter = this.state.chips.length;\n    if (maxLength) {\n      const color = getCounterTextColor(this.state.chips, this.props);\n      const counterText = getCounterText(counter, maxLength);\n      return <Text color={color} style={styles.label} accessibilityLabel={`${counter} out of ${maxLength} max chips`}>\n          {counterText}\n        </Text>;\n    }\n  }\n  renderUnderline = () => {\n    const {\n      isFocused,\n      chips\n    } = this.state;\n    const {\n      defaultChipProps\n    } = this.props;\n    const color = getValidationBasedColor(chips, defaultChipProps);\n    return <View height={1} marginT-10 backgroundColor={isFocused ? color : Colors.grey50} />;\n  };\n  renderTextInput() {\n    const {\n      inputStyle,\n      selectionColor,\n      title,\n      ...others\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    const isLastTagMarked = this.isLastTagMarked();\n    return <View style={styles.inputWrapper}>\n        <TextFieldMigrator ref={this.input} text80 blurOnSubmit={false} {...others} maxLength={undefined} title={this.props.chips ? undefined : title} value={value} onSubmitEditing={this.addTag} onChangeText={this.onChangeText} onKeyPress={this.onKeyPress} enableErrors={false} onFocus={this.onFocus} onBlur={this.onBlur} hideUnderline selectionColor={isLastTagMarked ? 'transparent' : selectionColor} style={[inputStyle, styles.alignTextCenter]} containerStyle={{\n        flexGrow: 0\n      }} collapsable={false} accessibilityHint={!this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined} />\n      </View>;\n  }\n  renderChipsContainer = () => {\n    const {\n      maxHeight,\n      scrollViewProps\n    } = this.props;\n    const Container = maxHeight ? ScrollView : View;\n    return <Container\n    // @ts-expect-error\n    ref={this.scrollRef} showsVerticalScrollIndicator={false} style={!maxHeight && styles.tagsList} contentContainerStyle={styles.tagsList} {...scrollViewProps}>\n        {this.renderChips()}\n        {this.renderTextInput()}\n      </Container>;\n  };\n  render() {\n    const {\n      containerStyle,\n      hideUnderline,\n      validationErrorMessage,\n      leftElement,\n      maxHeight,\n      chips\n    } = this.props;\n    const {\n      chipIndexToRemove\n    } = this.state;\n    return <View style={[!hideUnderline && styles.withUnderline, containerStyle]}>\n        {!!chips && this.renderTitleText()}\n        <View style={[styles.tagListContainer, {\n        maxHeight\n      }]}>\n          {leftElement}\n          {this.renderChipsContainer()}\n        </View>\n        {!hideUnderline && this.renderUnderline()}\n        {this.renderCharCounter()}\n        {validationErrorMessage ? <View>\n              <Text style={[styles.errorMessage, !!chipIndexToRemove && styles.errorMessageWhileMarked]}>\n                {validationErrorMessage}\n              </Text>\n            </View> : null}\n      </View>;\n  }\n  blur() {\n    this.input.current?.blur();\n  }\n  focus() {\n    this.input.current?.focus();\n  }\n  clear() {\n    this.input.current?.clear();\n  }\n}\nexport { ChipsInput }; // For tests\nexport default asBaseComponent(ChipsInput);\nconst basicTagStyle = {\n  borderRadius: BorderRadiuses.br100,\n  paddingVertical: 4.5,\n  paddingHorizontal: 12,\n  marginRight: GUTTER_SPACING,\n  marginVertical: GUTTER_SPACING / 2\n};\nconst styles = StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ThemeManager.dividerColor\n  },\n  tagsList: {\n    minHeight: 38,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  tagListContainer: {\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    flexWrap: 'nowrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  tag: {\n    borderWidth: 0,\n    paddingVertical: 5,\n    backgroundColor: Colors.$backgroundPrimaryHeavy\n  },\n  invalidTag: {\n    borderWidth: 1,\n    borderColor: Colors.red30,\n    backgroundColor: 'transparent'\n  },\n  basicTagStyle: {\n    ...basicTagStyle\n  },\n  invalidMarkedTag: {\n    borderColor: Colors.red10\n  },\n  tagMarked: {\n    backgroundColor: Colors.grey10\n  },\n  dismissIconStyle: {\n    width: 10,\n    height: 10,\n    marginRight: Spacings.s1\n  },\n  removeIcon: {\n    tintColor: Colors.white,\n    width: 10,\n    height: 10,\n    marginRight: 6\n  },\n  invalidTagRemoveIcon: {\n    tintColor: Colors.red10\n  },\n  tagLabel: {\n    ...Typography.text80,\n    color: Colors.white\n  },\n  errorMessage: {\n    ...Typography.text80,\n    color: Colors.red30\n  },\n  errorMessageWhileMarked: {\n    color: Colors.red10\n  },\n  label: {\n    marginTop: Spacings.s1,\n    alignSelf: 'flex-end',\n    height: Typography.text80?.lineHeight,\n    ...Typography.text80\n  },\n  alignTextCenter: {\n    textAlignVertical: 'center'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}