{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"initialValue\", \"formatter\", \"containerStyle\", \"renderMaskedText\", \"onChangeText\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _isFunction from \"lodash/isFunction\";\nimport _identity from \"lodash/identity\";\nimport React, { useCallback, useEffect, useRef, useState, useImperativeHandle, forwardRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction MaskedInput(props, ref) {\n  var initialValue = props.initialValue,\n    _props$formatter = props.formatter,\n    formatter = _props$formatter === void 0 ? _identity : _props$formatter,\n    containerStyle = props.containerStyle,\n    renderMaskedText = props.renderMaskedText,\n    onChangeText = props.onChangeText,\n    others = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var inputRef = useRef();\n  var keyboardDidHideListener = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      isFocused: function isFocused() {\n        var _inputRef$current;\n        return (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.isFocused();\n      },\n      focus: focus,\n      blur: function blur() {\n        var _inputRef$current2;\n        return (_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.blur();\n      },\n      clear: function clear() {\n        var _inputRef$current3;\n        (_inputRef$current3 = inputRef.current) == null ? void 0 : _inputRef$current3.clear();\n        setValue('');\n        onChangeText == null ? void 0 : onChangeText('');\n      }\n    };\n  });\n  useEffect(function () {\n    if (initialValue !== value) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n  useEffect(function () {\n    keyboardDidHideListener.current = Keyboard.addListener('keyboardDidHide', function () {\n      var _inputRef$current4;\n      if ((_inputRef$current4 = inputRef.current) != null && _inputRef$current4.isFocused()) {\n        var _inputRef$current5;\n        (_inputRef$current5 = inputRef.current) == null ? void 0 : _inputRef$current5.blur();\n      }\n    });\n    return function () {\n      return keyboardDidHideListener.current.remove();\n    };\n  }, []);\n  var _onChangeText = useCallback(function (value) {\n    var _formatter;\n    var formattedValue = (_formatter = formatter(value)) != null ? _formatter : '';\n    setValue(formattedValue);\n    onChangeText == null ? void 0 : onChangeText(formattedValue);\n  }, [onChangeText, formatter]);\n  var focus = useCallback(function () {\n    var _inputRef$current6;\n    (_inputRef$current6 = inputRef.current) == null ? void 0 : _inputRef$current6.focus();\n  }, []);\n  var _renderMaskedText = function _renderMaskedText() {\n    if (_isFunction(renderMaskedText)) {\n      return renderMaskedText(value);\n    }\n    return _jsx(Text, {\n      children: value\n    });\n  };\n  return _jsxs(TouchableOpacity, {\n    style: containerStyle,\n    activeOpacity: 1,\n    onPress: focus,\n    children: [_jsx(TextInput, _objectSpread(_objectSpread({}, others), {}, {\n      value: value,\n      ref: inputRef,\n      style: styles.hiddenInput,\n      enableErrors: false,\n      hideUnderline: true,\n      placeholder: \"\",\n      caretHidden: true,\n      multiline: false,\n      onChangeText: _onChangeText\n    })), _jsx(View, {\n      style: styles.maskedInputWrapper,\n      children: _renderMaskedText()\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  hiddenInput: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    zIndex: 1,\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  }),\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});\nMaskedInput.displayName = 'MaskedInput';\nexport default forwardRef(MaskedInput);","map":{"version":3,"names":["_isFunction","_identity","React","useCallback","useEffect","useRef","useState","useImperativeHandle","forwardRef","View","Text","TouchableOpacity","MaskedInput","props","ref","initialValue","formatter","containerStyle","renderMaskedText","onChangeText","others","value","setValue","inputRef","keyboardDidHideListener","isFocused","current","focus","blur","clear","Keyboard","addListener","remove","_onChangeText","formattedValue","_renderMaskedText","styles","hiddenInput","maskedInputWrapper","StyleSheet","create","absoluteFillObject","zIndex","color","backgroundColor","height","undefined","displayName"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/maskedInput/new.js"],"sourcesContent":["import _isFunction from \"lodash/isFunction\";\nimport _identity from \"lodash/identity\";\nimport React, { useCallback, useEffect, useRef, useState, useImperativeHandle, forwardRef } from 'react';\nimport { StyleSheet, Keyboard, TextInput } from 'react-native';\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\n/**\n * @description: Mask Input to create custom looking inputs with custom formats\n * @gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.tsx\n */\nfunction MaskedInput(props, ref) {\n  const {\n    initialValue,\n    formatter = _identity,\n    containerStyle,\n    renderMaskedText,\n    onChangeText,\n    ...others\n  } = props;\n  const [value, setValue] = useState(initialValue);\n  const inputRef = useRef();\n  const keyboardDidHideListener = useRef();\n  useImperativeHandle(ref, () => {\n    return {\n      isFocused: () => inputRef.current?.isFocused(),\n      focus,\n      blur: () => inputRef.current?.blur(),\n      clear: () => {\n        inputRef.current?.clear();\n        setValue('');\n        // NOTE: This fixes an RN issue - when triggering imperative clear method, it doesn't call onChangeText\n        onChangeText?.('');\n      }\n    };\n  });\n  useEffect(() => {\n    if (initialValue !== value) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n  useEffect(() => {\n    keyboardDidHideListener.current = Keyboard.addListener('keyboardDidHide', () => {\n      if (inputRef.current?.isFocused()) {\n        inputRef.current?.blur();\n      }\n    });\n    return () => keyboardDidHideListener.current.remove();\n  }, []);\n  const _onChangeText = useCallback(value => {\n    const formattedValue = formatter(value) ?? '';\n    setValue(formattedValue);\n    onChangeText?.(formattedValue);\n  }, [onChangeText, formatter]);\n  const focus = useCallback(() => {\n    inputRef.current?.focus();\n  }, []);\n  const _renderMaskedText = () => {\n    if (_isFunction(renderMaskedText)) {\n      return renderMaskedText(value);\n    }\n    return <Text>{value}</Text>;\n  };\n  return <TouchableOpacity style={containerStyle} activeOpacity={1} onPress={focus}>\n      <TextInput {...others} value={value}\n    // @ts-expect-error\n    ref={inputRef} style={styles.hiddenInput} enableErrors={false} hideUnderline placeholder=\"\" caretHidden multiline={false} onChangeText={_onChangeText} />\n      <View style={styles.maskedInputWrapper}>{_renderMaskedText()}</View>\n    </TouchableOpacity>;\n}\nconst styles = StyleSheet.create({\n  hiddenInput: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1,\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  },\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});\nMaskedInput.displayName = 'MaskedInput';\nexport default forwardRef(MaskedInput);"],"mappings":"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"},"metadata":{},"sourceType":"module"}