{"ast":null,"code":"import React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { createGroupChannelListFragment, GroupChannelProps } from '@sendbird/uikit-react-native';\nimport { Text, View, Button, LoaderScreen } from 'react-native-ui-lib';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar test = GroupChannelProps;\nvar GroupChannelListFragment = createGroupChannelListFragment({\n  StatusLoading: function StatusLoading() {\n    return _jsx(LoaderScreen, {});\n  },\n  Header: function Header() {\n    return _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Butt\"\n      }), _jsx(Button, {\n        children: _jsx(Text, {\n          children: \"Hi\"\n        })\n      })]\n    });\n  }\n});\nvar ChannelList = function ChannelList() {\n  var navigation = useNavigation();\n  return _jsx(GroupChannelListFragment, {\n    onPressCreateChannel: function onPressCreateChannel(channelType) {\n      navigation.navigate('CreateChannel', {\n        channelType: channelType\n      });\n    },\n    onPressChannel: function onPressChannel(channel) {\n      navigation.navigate('Channel', {\n        channelUrl: channel.url\n      });\n    }\n  });\n};\nexport default ChannelList;","map":{"version":3,"names":["React","useNavigation","createGroupChannelListFragment","GroupChannelProps","Text","View","Button","LoaderScreen","test","GroupChannelListFragment","StatusLoading","Header","ChannelList","navigation","channelType","navigate","channel","channelUrl","url"],"sources":["C:/Users/Alex/Documents/development/Rabbit/src/screens/Message/ChannelList.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createGroupChannelListFragment, GroupChannelProps } from '@sendbird/uikit-react-native';\r\nimport { Text, View, Button, LoaderScreen } from 'react-native-ui-lib';\r\n\r\nconst test = GroupChannelProps;\r\n\r\nconst GroupChannelListFragment = createGroupChannelListFragment({\r\n  StatusLoading: () => {\r\n    return <LoaderScreen />;\r\n  },\r\n  Header: () => {\r\n    return (\r\n      <>\r\n        <Text>Butt</Text>\r\n        <Button>\r\n          <Text>Hi</Text>\r\n        </Button>\r\n      </>\r\n    );\r\n  },\r\n});\r\n\r\nconst ChannelList = () => {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <GroupChannelListFragment\r\n      onPressCreateChannel={(channelType) => {\r\n        // Navigate to GroupChannelCreate key function.\r\n        navigation.navigate('CreateChannel', { channelType });\r\n      }}\r\n      onPressChannel={(channel) => {\r\n        // Navigate to GroupChannel key function.\r\n        navigation.navigate('Channel', {\r\n          channelUrl: channel.url,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,8BAA8B,EAAEC,iBAAiB,QAAQ,8BAA8B;AAChG,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,YAAY,QAAQ,qBAAqB;AAAC;AAAA;AAAA;AAEvE,IAAMC,IAAI,GAAGL,iBAAiB;AAE9B,IAAMM,wBAAwB,GAAGP,8BAA8B,CAAC;EAC9DQ,aAAa,EAAE,yBAAM;IACnB,OAAO,KAAC,YAAY,KAAG;EACzB,CAAC;EACDC,MAAM,EAAE,kBAAM;IACZ,OACE;MAAA,WACE,KAAC,IAAI;QAAA,UAAC;MAAI,EAAO,EACjB,KAAC,MAAM;QAAA,UACL,KAAC,IAAI;UAAA,UAAC;QAAE;MAAO,EACR;IAAA,EACR;EAEP;AACF,CAAC,CAAC;AAEF,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EACxB,IAAMC,UAAU,GAAGZ,aAAa,EAAE;EAClC,OACE,KAAC,wBAAwB;IACvB,oBAAoB,EAAE,8BAACa,WAAW,EAAK;MAErCD,UAAU,CAACE,QAAQ,CAAC,eAAe,EAAE;QAAED,WAAW,EAAXA;MAAY,CAAC,CAAC;IACvD,CAAE;IACF,cAAc,EAAE,wBAACE,OAAO,EAAK;MAE3BH,UAAU,CAACE,QAAQ,CAAC,SAAS,EAAE;QAC7BE,UAAU,EAAED,OAAO,CAACE;MACtB,CAAC,CAAC;IACJ;EAAE,EACF;AAEN,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module"}