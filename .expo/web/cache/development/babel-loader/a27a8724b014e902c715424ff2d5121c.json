{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"renderItem\", \"numColumns\", \"itemSpacing\", \"maxItemWidth\", \"listPadding\", \"keepItemSize\", \"containerWidth\", \"contentContainerStyle\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useCallback } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useGridLayout from \"./useGridLayout\";\nimport View from \"../view\";\nimport { GridListProps, GridListBaseProps } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridList(props) {\n  var renderItem = props.renderItem,\n    numColumns = props.numColumns,\n    itemSpacing = props.itemSpacing,\n    maxItemWidth = props.maxItemWidth,\n    _props$listPadding = props.listPadding,\n    listPadding = _props$listPadding === void 0 ? 0 : _props$listPadding,\n    keepItemSize = props.keepItemSize,\n    containerWidth = props.containerWidth,\n    contentContainerStyle = props.contentContainerStyle,\n    others = _objectWithoutProperties(props, _excluded);\n  var _useGridLayout = useGridLayout({\n      numColumns: numColumns,\n      itemSpacing: itemSpacing,\n      maxItemWidth: maxItemWidth,\n      listPadding: listPadding,\n      keepItemSize: keepItemSize,\n      containerWidth: containerWidth,\n      contentContainerStyle: contentContainerStyle\n    }),\n    itemContainerStyle = _useGridLayout.itemContainerStyle,\n    numberOfColumns = _useGridLayout.numberOfColumns,\n    listContentStyle = _useGridLayout.listContentStyle;\n  var _renderItem = useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _jsx(View, {\n      style: itemContainerStyle,\n      children: renderItem == null ? void 0 : renderItem.apply(void 0, args)\n    });\n  }, [renderItem, itemContainerStyle]);\n  return _jsx(FlatList, _objectSpread(_objectSpread({}, others), {}, {\n    contentContainerStyle: listContentStyle,\n    renderItem: _renderItem,\n    numColumns: numberOfColumns\n  }), numberOfColumns);\n}\nexport { GridListBaseProps, GridListProps };\nexport default GridList;","map":{"version":3,"names":["React","useCallback","useGridLayout","View","GridListProps","GridListBaseProps","GridList","props","renderItem","numColumns","itemSpacing","maxItemWidth","listPadding","keepItemSize","containerWidth","contentContainerStyle","others","itemContainerStyle","numberOfColumns","listContentStyle","_renderItem","args"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/gridList/index.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { FlatList } from 'react-native';\nimport useGridLayout from \"./useGridLayout\";\nimport View from \"../view\";\nimport { GridListProps, GridListBaseProps } from \"./types\";\nfunction GridList(props) {\n  const {\n    renderItem,\n    numColumns,\n    itemSpacing,\n    maxItemWidth,\n    listPadding = 0,\n    keepItemSize,\n    containerWidth,\n    contentContainerStyle,\n    ...others\n  } = props;\n  const {\n    itemContainerStyle,\n    numberOfColumns,\n    listContentStyle\n  } = useGridLayout({\n    numColumns,\n    itemSpacing,\n    maxItemWidth,\n    listPadding,\n    keepItemSize,\n    containerWidth,\n    contentContainerStyle\n  });\n  const _renderItem = useCallback((...args) => {\n    // @ts-expect-error\n    return <View style={itemContainerStyle}>{renderItem?.(...args)}</View>;\n  }, [renderItem, itemContainerStyle]);\n  return <FlatList key={numberOfColumns} {...others} contentContainerStyle={listContentStyle} renderItem={_renderItem} numColumns={numberOfColumns} />;\n}\nexport { GridListBaseProps, GridListProps };\nexport default GridList;"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAAC;AAE3C,OAAOC,aAAa;AACpB,OAAOC,IAAI;AACX,SAASC,aAAa,EAAEC,iBAAiB;AAAkB;AAC3D,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB,IACEC,UAAU,GASRD,KAAK,CATPC,UAAU;IACVC,UAAU,GAQRF,KAAK,CARPE,UAAU;IACVC,WAAW,GAOTH,KAAK,CAPPG,WAAW;IACXC,YAAY,GAMVJ,KAAK,CANPI,YAAY;IAAA,qBAMVJ,KAAK,CALPK,WAAW;IAAXA,WAAW,mCAAG,CAAC;IACfC,YAAY,GAIVN,KAAK,CAJPM,YAAY;IACZC,cAAc,GAGZP,KAAK,CAHPO,cAAc;IACdC,qBAAqB,GAEnBR,KAAK,CAFPQ,qBAAqB;IAClBC,MAAM,4BACPT,KAAK;EACT,qBAIIL,aAAa,CAAC;MAChBO,UAAU,EAAVA,UAAU;MACVC,WAAW,EAAXA,WAAW;MACXC,YAAY,EAAZA,YAAY;MACZC,WAAW,EAAXA,WAAW;MACXC,YAAY,EAAZA,YAAY;MACZC,cAAc,EAAdA,cAAc;MACdC,qBAAqB,EAArBA;IACF,CAAC,CAAC;IAXAE,kBAAkB,kBAAlBA,kBAAkB;IAClBC,eAAe,kBAAfA,eAAe;IACfC,gBAAgB,kBAAhBA,gBAAgB;EAUlB,IAAMC,WAAW,GAAGnB,WAAW,CAAC,YAAa;IAAA,kCAAToB,IAAI;MAAJA,IAAI;IAAA;IAEtC,OAAO,KAAC,IAAI;MAAC,KAAK,EAAEJ,kBAAmB;MAAA,UAAET,UAAU,oBAAVA,UAAU,eAAMa,IAAI;IAAC,EAAQ;EACxE,CAAC,EAAE,CAACb,UAAU,EAAES,kBAAkB,CAAC,CAAC;EACpC,OAAO,KAAC,QAAQ,kCAA2BD,MAAM;IAAE,qBAAqB,EAAEG,gBAAiB;IAAC,UAAU,EAAEC,WAAY;IAAC,UAAU,EAAEF;EAAgB,IAA3HA,eAAe,CAA+G;AACtJ;AACA,SAASb,iBAAiB,EAAED,aAAa;AACzC,eAAeE,QAAQ"},"metadata":{},"sourceType":"module"}