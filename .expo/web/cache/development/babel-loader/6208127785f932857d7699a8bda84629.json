{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\", \"placeholderTextColor\", \"multiline\", \"numberOfLines\", \"expandable\", \"rightIconSource\", \"color\", \"placeholder\", \"helperText\"],\n  _excluded2 = [\"lineHeight\"],\n  _excluded3 = [\"style\", \"iconSource\", \"iconColor\", \"accessibilityLabel\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _get from \"lodash/get\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nimport _invoke from \"lodash/invoke\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport memoize from 'memoize-one';\nimport { Constants } from \"../../commons/new\";\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport BaseInput from \"../baseInput\";\nimport Modal from \"../modal\";\nimport TextArea from \"../textArea\";\nimport View from \"../view\";\nimport Image from \"../image\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar COLOR_BY_STATE = {\n  default: Colors.grey10,\n  focus: Colors.grey10,\n  error: Colors.grey10,\n  disabled: Colors.grey50\n};\nvar UNDERLINE_COLOR_BY_STATE = {\n  default: Colors.grey50,\n  focus: Colors.$outlinePrimary,\n  error: Colors.red30\n};\nvar PLACEHOLDER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  focus: Colors.$textPrimary\n};\nvar CHAR_COUNTER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  error: Colors.red30\n};\nvar LABEL_TYPOGRAPHY = Typography.text80;\nvar ICON_SIZE = 24;\nvar ICON_LEFT_PADDING = 6;\nvar FLOATING_PLACEHOLDER_SCALE = 0.875;\nvar TextField = function (_BaseInput) {\n  _inherits(TextField, _BaseInput);\n  var _super = _createSuper(TextField);\n  function TextField(props) {\n    var _this;\n    _classCallCheck(this, TextField);\n    _this = _super.call(this, props);\n    _this.onPlaceholderLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n      var translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n      _this.setState({\n        floatingPlaceholderTranslate: translate / FLOATING_PLACEHOLDER_SCALE\n      });\n    };\n    _this.toggleExpandableModal = function (value) {\n      _this.setState({\n        showExpandableModal: value\n      });\n      _invoke(_this.props, 'onToggleExpandableModal', value);\n    };\n    _this.updateFloatingPlaceholderState = function (withoutAnimation) {\n      if (withoutAnimation) {\n        _this.state.floatingPlaceholderState.setValue(_this.shouldFloatPlaceholder() ? 1 : 0);\n      } else {\n        Animated.spring(_this.state.floatingPlaceholderState, {\n          toValue: _this.shouldFloatPlaceholder() ? 1 : 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      }\n    };\n    _this.getPlaceholderText = memoize(function (placeholder, helperText) {\n      var text = _this.shouldFakePlaceholder() ? _this.shouldShowHelperText() ? helperText : ' ' : _this.shouldShowTopError() && _this.shouldShowHelperText() ? helperText : _this.getRequiredPlaceholder(placeholder);\n      return text;\n    });\n    _this.onPressRightButton = function () {\n      _invoke(_this.props, 'rightButtonProps.onPress');\n    };\n    _this.onDoneEditingExpandableInput = function () {\n      var expandableInputValue = _get(_this.expandableInput, 'state.value');\n      _this.setState({\n        value: expandableInputValue\n      });\n      _this.state.floatingPlaceholderState.setValue(expandableInputValue ? 1 : 0);\n      _invoke(_this.props, 'onChangeText', expandableInputValue);\n      _this.toggleExpandableModal(false);\n    };\n    _this.onKeyPress = function (event) {\n      _this.lastKey = event.nativeEvent.key;\n      _this.setCharCountColor(_this.lastKey);\n      _invoke(_this.props, 'onKeyPress', event);\n    };\n    _this.onChangeText = function (text) {\n      if (text === '' && _this.lastKey && _this.lastKey !== Constants.backspaceKey) {\n        return;\n      }\n      var _this$props = _this.props,\n        transformer = _this$props.transformer,\n        validateOnChange = _this$props.validateOnChange;\n      var transformedText = text;\n      if (_isFunction(transformer)) {\n        transformedText = transformer(text);\n      }\n      _invoke(_this.props, 'onChangeText', transformedText);\n      _this.setState({\n        value: transformedText\n      }, function () {\n        if (validateOnChange) {\n          setImmediate(_this.validate);\n        }\n      });\n    };\n    _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n      value: props.value,\n      floatingPlaceholderState: new Animated.Value(_this.shouldFloatPlaceholder(props.value) ? 1 : 0),\n      showExpandableModal: false,\n      floatingPlaceholderTranslate: 0,\n      charCountColor: CHAR_COUNTER_COLOR_BY_STATE.default\n    });\n    _this.generatePropsWarnings(props);\n    return _this;\n  }\n  _createClass(TextField, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      if (nextProps.value !== this.props.value) {\n        this.setState({\n          value: nextProps.value\n        }, function () {\n          _this2.updateFloatingPlaceholderState();\n          if (nextProps.validateOnChange) {\n            _this2.validate();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_prevProps, prevState) {\n      if (_isEmpty(prevState.value) !== _isEmpty(this.state.value) || prevState.focused !== this.state.focused) {\n        this.updateFloatingPlaceholderState();\n      }\n    }\n  }, {\n    key: \"generatePropsWarnings\",\n    value: function generatePropsWarnings(props) {\n      if (props.maxLength === 0) {\n        console.warn('Setting maxLength to zero will block typing in this input');\n      }\n      if (props.showCharacterCounter && !props.maxLength) {\n        console.warn('In order to use showCharacterCount please pass \\'maxLength\\' prop');\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps(), this.getTopPaddings());\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var _this$getThemeProps = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps.floatingPlaceholder,\n        placeholder = _this$getThemeProps.placeholder;\n      var accessibilityState = this.isDisabled() ? {\n        disabled: true\n      } : undefined;\n      var accessibilityLabel = floatingPlaceholder ? this.props.accessibilityLabel || placeholder : '';\n      if (this.isRequiredField()) {\n        accessibilityLabel = accessibilityLabel + \". Mandatory\";\n      }\n      return {\n        accessibilityLabel: accessibilityLabel,\n        accessibilityState: Constants.isIOS ? accessibilityState : undefined\n      };\n    }\n  }, {\n    key: \"getStateColor\",\n    value: function getStateColor() {\n      var colorProp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var focused = this.state.focused;\n      var error = this.getErrorMessage();\n      var _this$getThemeProps2 = this.getThemeProps(),\n        disabledColor = _this$getThemeProps2.disabledColor;\n      if (_isString(colorProp)) {\n        return colorProp || Colors.grey10;\n      } else if (_isPlainObject(colorProp)) {\n        var mergedColorState = _objectSpread(_objectSpread({}, COLOR_BY_STATE), colorProp);\n        if (this.isDisabled()) {\n          return disabledColor || mergedColorState.disabled;\n        } else if (error) {\n          return mergedColorState.error;\n        } else if (focused) {\n          return mergedColorState.focus;\n        } else {\n          return mergedColorState.default;\n        }\n      }\n      return colorProp || Colors.grey10;\n    }\n  }, {\n    key: \"getCharCount\",\n    value: function getCharCount() {\n      var value = this.state.value;\n      if (value) {\n        return value.length;\n      }\n      return 0;\n    }\n  }, {\n    key: \"setCharCountColor\",\n    value: function setCharCountColor(key) {\n      this.maxReached = key === Constants.backspaceKey ? false : this.isCounterLimit();\n      var color = this.state.focused && this.maxReached ? CHAR_COUNTER_COLOR_BY_STATE.error : CHAR_COUNTER_COLOR_BY_STATE.default;\n      if (color !== this.state.charCountColor) {\n        this.setState({\n          charCountColor: color\n        });\n      }\n    }\n  }, {\n    key: \"getCharCountColor\",\n    value: function getCharCountColor() {\n      var charCountColor = this.state.charCountColor;\n      var _this$getThemeProps3 = this.getThemeProps(),\n        disabledColor = _this$getThemeProps3.disabledColor;\n      return this.isDisabled() && disabledColor ? disabledColor : charCountColor;\n    }\n  }, {\n    key: \"getTopPaddings\",\n    value: function getTopPaddings() {\n      return this.shouldFakePlaceholder() ? this.shouldShowTopError() ? undefined : 25 : undefined;\n    }\n  }, {\n    key: \"getTopErrorsPosition\",\n    value: function getTopErrorsPosition() {\n      return !this.props.title && this.shouldShowTopError() ? {\n        top: Constants.isIOS ? -25 : -27\n      } : undefined;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return this.props.editable === false;\n    }\n  }, {\n    key: \"isCounterLimit\",\n    value: function isCounterLimit() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n        maxLength = _this$getThemeProps4.maxLength;\n      var counter = this.getCharCount();\n      return counter === 0 ? false : maxLength <= counter;\n    }\n  }, {\n    key: \"hasText\",\n    value: function hasText(value) {\n      return !_isEmpty(value || this.state.value);\n    }\n  }, {\n    key: \"shouldShowHelperText\",\n    value: function shouldShowHelperText() {\n      var focused = this.state.focused;\n      var helperText = this.props.helperText;\n      return focused && helperText;\n    }\n  }, {\n    key: \"shouldFloatOnFocus\",\n    value: function shouldFloatOnFocus() {\n      var focused = this.state.focused;\n      var _this$getThemeProps5 = this.getThemeProps(),\n        floatOnFocus = _this$getThemeProps5.floatOnFocus;\n      return focused && floatOnFocus;\n    }\n  }, {\n    key: \"shouldFloatPlaceholder\",\n    value: function shouldFloatPlaceholder(text) {\n      return this.hasText(text) || this.shouldShowHelperText() || this.shouldFloatOnFocus();\n    }\n  }, {\n    key: \"shouldFakePlaceholder\",\n    value: function shouldFakePlaceholder() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps6.floatingPlaceholder,\n        centered = _this$getThemeProps6.centered,\n        leadingIcon = _this$getThemeProps6.leadingIcon,\n        prefix = _this$getThemeProps6.prefix;\n      return !leadingIcon && !prefix && Boolean(floatingPlaceholder && !centered && !this.shouldShowTopError());\n    }\n  }, {\n    key: \"shouldShowError\",\n    value: function shouldShowError() {\n      var _this$getThemeProps7 = this.getThemeProps(),\n        enableErrors = _this$getThemeProps7.enableErrors;\n      var error = this.getErrorMessage();\n      return enableErrors && error;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage() {\n      var _this$props2, _this$state;\n      return ((_this$props2 = this.props) == null ? void 0 : _this$props2.error) || ((_this$state = this.state) == null ? void 0 : _this$state.error);\n    }\n  }, {\n    key: \"shouldShowTopError\",\n    value: function shouldShowTopError() {\n      var _this$getThemeProps8 = this.getThemeProps(),\n        useTopErrors = _this$getThemeProps8.useTopErrors;\n      return this.shouldShowError() && useTopErrors;\n    }\n  }, {\n    key: \"shouldDisplayRightButton\",\n    value: function shouldDisplayRightButton() {\n      var _this$getThemeProps9 = this.getThemeProps(),\n        rightButtonProps = _this$getThemeProps9.rightButtonProps,\n        expandable = _this$getThemeProps9.expandable;\n      return !expandable && rightButtonProps && rightButtonProps.iconSource;\n    }\n  }, {\n    key: \"shouldRenderTitle\",\n    value: function shouldRenderTitle() {\n      var _this$getThemeProps10 = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps10.floatingPlaceholder,\n        title = _this$getThemeProps10.title;\n      return !floatingPlaceholder && title;\n    }\n  }, {\n    key: \"renderPlaceholder\",\n    value: function renderPlaceholder() {\n      var _this$state2 = this.state,\n        floatingPlaceholderState = _this$state2.floatingPlaceholderState,\n        floatingPlaceholderTranslate = _this$state2.floatingPlaceholderTranslate;\n      var _this$getThemeProps11 = this.getThemeProps(),\n        placeholder = _this$getThemeProps11.placeholder,\n        placeholderTextColor = _this$getThemeProps11.placeholderTextColor,\n        floatingPlaceholderColor = _this$getThemeProps11.floatingPlaceholderColor,\n        floatingPlaceholderStyle = _this$getThemeProps11.floatingPlaceholderStyle;\n      var typography = this.getTypography();\n      var placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n      if (this.shouldFakePlaceholder()) {\n        return _jsx(View, {\n          absF: true,\n          left: true,\n          children: _jsx(Animated.Text, {\n            pointerEvents: \"none\",\n            numberOfLines: 1,\n            suppressHighlighting: true,\n            accessible: false,\n            onLayout: this.onPlaceholderLayout,\n            style: [this.styles.placeholder, this.getTopErrorsPosition(), typography, {\n              lineHeight: undefined\n            }, {\n              transform: [{\n                scale: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, FLOATING_PLACEHOLDER_SCALE]\n                })\n              }, {\n                translateY: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [25, 0]\n                })\n              }, {\n                translateX: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0, -floatingPlaceholderTranslate]\n                })\n              }],\n              color: this.shouldFloatPlaceholder() ? this.getStateColor(floatingPlaceholderColor || PLACEHOLDER_COLOR_BY_STATE) : placeholderColor\n            }, floatingPlaceholderStyle],\n            children: this.getRequiredPlaceholder(placeholder)\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderPrefix\",\n    value: function renderPrefix() {\n      var _this$props3 = this.props,\n        prefix = _this$props3.prefix,\n        prefixStyle = _this$props3.prefixStyle;\n      if (prefix) {\n        var typography = this.getTypography();\n        return _jsx(Text, {\n          style: [this.styles.prefix, typography, {\n            lineHeight: undefined\n          }, prefixStyle],\n          children: prefix\n        });\n      }\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$getThemeProps12 = this.getThemeProps(),\n        title = _this$getThemeProps12.title,\n        titleColor = _this$getThemeProps12.titleColor,\n        titleStyle = _this$getThemeProps12.titleStyle;\n      var color = this.getStateColor(titleColor || PLACEHOLDER_COLOR_BY_STATE);\n      if (this.shouldRenderTitle()) {\n        return _jsx(Text, {\n          style: [{\n            color: color\n          }, this.styles.topLabel, this.styles.label, titleStyle],\n          children: title\n        });\n      }\n    }\n  }, {\n    key: \"renderCharCounter\",\n    value: function renderCharCounter() {\n      var _this$getThemeProps13 = this.getThemeProps(),\n        maxLength = _this$getThemeProps13.maxLength,\n        showCharacterCounter = _this$getThemeProps13.showCharacterCounter;\n      if (maxLength && showCharacterCounter) {\n        var counter = this.getCharCount();\n        var color = this.getCharCountColor();\n        return _jsxs(Text, {\n          style: [{\n            color: color\n          }, this.styles.bottomLabel, this.styles.label],\n          accessibilityLabel: counter + \" out of \" + maxLength + \" max characters\",\n          children: [counter, \" / \", maxLength]\n        });\n      }\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(visible) {\n      var _this$getThemeProps14 = this.getThemeProps(),\n        enableErrors = _this$getThemeProps14.enableErrors,\n        useTopErrors = _this$getThemeProps14.useTopErrors,\n        errorColor = _this$getThemeProps14.errorColor;\n      var textColor = errorColor ? {\n        color: errorColor\n      } : undefined;\n      var positionStyle = useTopErrors ? this.styles.topLabel : this.styles.bottomLabel;\n      var error = this.getErrorMessage();\n      if (visible && enableErrors) {\n        return _jsx(Text, {\n          style: [this.styles.errorMessage, this.styles.label, positionStyle, textColor],\n          accessible: !_isEmpty(error) && !useTopErrors,\n          children: error\n        });\n      }\n    }\n  }, {\n    key: \"renderExpandableModal\",\n    value: function renderExpandableModal() {\n      var _this3 = this;\n      var _this$getThemeProps15 = this.getThemeProps(),\n        renderExpandable = _this$getThemeProps15.renderExpandable,\n        topBarProps = _this$getThemeProps15.topBarProps;\n      var showExpandableModal = this.state.showExpandableModal;\n      if (_isFunction(renderExpandable) && showExpandableModal) {\n        return renderExpandable(this.getThemeProps(), this.state);\n      }\n      var textInputProps = TextField.extractOwnProps(this.props, ['error', 'testID']);\n      return _jsxs(Modal, {\n        animationType: 'slide',\n        visible: showExpandableModal,\n        onRequestClose: function onRequestClose() {\n          return _this3.toggleExpandableModal(false);\n        },\n        children: [_jsx(Modal.TopBar, _objectSpread(_objectSpread({}, topBarProps), {}, {\n          onCancel: function onCancel() {\n            return _this3.toggleExpandableModal(false);\n          },\n          onDone: this.onDoneEditingExpandableInput\n        })), _jsx(View, {\n          style: this.styles.expandableModalContent,\n          children: _jsx(TextArea, _objectSpread(_objectSpread({\n            ref: function ref(textarea) {\n              _this3.expandableInput = textarea;\n            }\n          }, textInputProps), {}, {\n            value: this.state.value\n          }))\n        })]\n      });\n    }\n  }, {\n    key: \"renderExpandableInput\",\n    value: function renderExpandableInput() {\n      var _this4 = this;\n      var _this$getThemeProps16 = this.getThemeProps(),\n        renderExpandableInput = _this$getThemeProps16.renderExpandableInput,\n        testID = _this$getThemeProps16.testID;\n      if (_isFunction(renderExpandableInput)) {\n        return renderExpandableInput(this.getThemeProps(), this.toggleExpandableModal);\n      }\n      return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n        style: this.styles.expandableInput,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return !_this4.isDisabled() && _this4.toggleExpandableModal(true);\n        },\n        testID: testID + \".expandable\"\n      }, this.getAccessibilityInfo()), {}, {\n        children: this.renderTextInput()\n      }));\n    }\n  }, {\n    key: \"renderTextInput\",\n    value: function renderTextInput() {\n      var _this5 = this;\n      var value = this.state.value;\n      var _this$getThemeProps17 = this.getThemeProps(),\n        style = _this$getThemeProps17.style,\n        placeholderTextColor = _this$getThemeProps17.placeholderTextColor,\n        multiline = _this$getThemeProps17.multiline,\n        numberOfLines = _this$getThemeProps17.numberOfLines,\n        expandable = _this$getThemeProps17.expandable,\n        rightIconSource = _this$getThemeProps17.rightIconSource,\n        color = _this$getThemeProps17.color,\n        placeholder = _this$getThemeProps17.placeholder,\n        helperText = _this$getThemeProps17.helperText,\n        others = _objectWithoutProperties(_this$getThemeProps17, _excluded);\n      var typography = this.getTypography();\n      var lineHeight = typography.lineHeight,\n        typographyStyle = _objectWithoutProperties(typography, _excluded2);\n      var textColor = this.getStateColor(color || this.extractColorValue());\n      var hasRightElement = this.shouldDisplayRightButton() || rightIconSource;\n      var shouldUseMultiline = multiline;\n      var inputStyle = [hasRightElement && this.styles.rightElement, this.styles.input, _objectSpread({}, typographyStyle), expandable && {\n        maxHeight: lineHeight * (Constants.isAndroid ? 3 : 3.3)\n      }, Constants.isRTL && {\n        minHeight: lineHeight + 3\n      }, Constants.isIOS && shouldUseMultiline && {\n        paddingTop: 0\n      }, {\n        color: textColor\n      }, style];\n      var placeholderText = this.getPlaceholderText(placeholder, helperText);\n      var placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n      var isEditable = !this.isDisabled() && !expandable;\n      return _jsx(RNTextInput, _objectSpread(_objectSpread(_objectSpread({}, this.getAccessibilityInfo()), {}, {\n        pointerEvents: expandable ? 'none' : undefined\n      }, others), {}, {\n        value: value,\n        placeholder: placeholderText,\n        placeholderTextColor: placeholderColor,\n        underlineColorAndroid: \"transparent\",\n        style: inputStyle,\n        multiline: shouldUseMultiline,\n        numberOfLines: numberOfLines,\n        onKeyPress: this.onKeyPress,\n        onChangeText: this.onChangeText,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        ref: function ref(input) {\n          _this5.input = input;\n        },\n        editable: isEditable\n      }));\n    }\n  }, {\n    key: \"renderRightButton\",\n    value: function renderRightButton() {\n      if (this.shouldDisplayRightButton()) {\n        var _this$getThemeProps18 = this.getThemeProps(),\n          rightButtonProps = _this$getThemeProps18.rightButtonProps;\n        var style = rightButtonProps.style,\n          iconSource = rightButtonProps.iconSource,\n          iconColor = rightButtonProps.iconColor,\n          accessibilityLabel = rightButtonProps.accessibilityLabel,\n          others = _objectWithoutProperties(rightButtonProps, _excluded3);\n        return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, others), {}, {\n          accessibilityLabel: accessibilityLabel,\n          style: [this.styles.rightButton, this.getTopErrorsPosition(), style],\n          onPress: this.onPressRightButton,\n          children: _jsx(Image, {\n            pointerEvents: \"none\",\n            source: iconSource,\n            resizeMode: 'contain',\n            style: [this.styles.rightButtonImage, {\n              tintColor: iconColor || Colors.$iconPrimary\n            }]\n          })\n        }));\n      }\n    }\n  }, {\n    key: \"renderRightIcon\",\n    value: function renderRightIcon() {\n      var _this$getThemeProps19 = this.getThemeProps(),\n        rightIconSource = _this$getThemeProps19.rightIconSource,\n        rightIconStyle = _this$getThemeProps19.rightIconStyle;\n      if (rightIconSource) {\n        return _jsx(View, {\n          style: [this.styles.rightButton, this.getTopErrorsPosition()],\n          pointerEvents: \"none\",\n          children: _jsx(Image, {\n            source: rightIconSource,\n            resizeMode: 'center',\n            style: [this.styles.rightButtonImage, rightIconStyle]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps20 = this.getThemeProps(),\n        expandable = _this$getThemeProps20.expandable,\n        containerStyle = _this$getThemeProps20.containerStyle,\n        underlineColor = _this$getThemeProps20.underlineColor,\n        useTopErrors = _this$getThemeProps20.useTopErrors,\n        hideUnderline = _this$getThemeProps20.hideUnderline,\n        leadingIcon = _this$getThemeProps20.leadingIcon;\n      var underlineStateColor = this.getStateColor(underlineColor || UNDERLINE_COLOR_BY_STATE);\n      return _jsxs(View, {\n        style: [this.styles.container, containerStyle],\n        collapsable: false,\n        children: [this.shouldShowTopError() ? this.renderError(useTopErrors) : this.renderTitle(), _jsxs(View, {\n          style: [this.styles.innerContainer, hideUnderline && this.styles.innerContainerWithoutUnderline, {\n            borderColor: underlineStateColor\n          }, {\n            paddingTop: this.getTopPaddings()\n          }],\n          children: [leadingIcon && _jsx(Image, _objectSpread(_objectSpread({}, leadingIcon), {}, {\n            style: [this.styles.leadingIcon, leadingIcon.style]\n          })), this.renderPrefix(), this.renderPlaceholder(), expandable ? this.renderExpandableInput() : this.renderTextInput(), this.renderRightButton(), this.renderRightIcon(), expandable && this.renderExpandableModal()]\n        }), !_isUndefined(this.getErrorMessage()) && useTopErrors && _jsx(View, {\n          style: this.styles.accessibilityDummyErrorMessage,\n          accessible: true,\n          accessibilityLabel: this.getErrorMessage()\n        }), _jsxs(View, {\n          row: true,\n          children: [_jsx(View, {\n            flex: true,\n            children: this.renderError(!useTopErrors)\n          }), this.renderCharCounter()]\n        })]\n      });\n    }\n  }]);\n  return TextField;\n}(BaseInput);\nTextField.displayName = 'TextField';\nTextField.propTypes = _objectSpread(_objectSpread(_objectSpread({}, TextInputPropTypes), BaseInput.propTypes), {}, {\n  floatingPlaceholder: PropTypes.bool,\n  floatingPlaceholderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  floatingPlaceholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  helperText: PropTypes.string,\n  hideUnderline: PropTypes.bool,\n  underlineColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  disabledColor: PropTypes.string,\n  centered: PropTypes.bool,\n  error: PropTypes.string,\n  enableErrors: PropTypes.bool,\n  errorColor: PropTypes.string,\n  expandable: PropTypes.bool,\n  renderExpandableInput: PropTypes.elementType,\n  renderExpandable: PropTypes.elementType,\n  onToggleExpandableModal: PropTypes.func,\n  topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n  transformer: PropTypes.func,\n  prefix: PropTypes.string,\n  prefixStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  title: PropTypes.string,\n  titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  showCharacterCounter: PropTypes.bool,\n  floatOnFocus: PropTypes.bool,\n  useTopErrors: PropTypes.bool,\n  rightIconSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  rightIconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  rightButtonProps: PropTypes.shape({\n    iconSource: ImagePropTypes.source,\n    iconColor: PropTypes.string,\n    onPress: PropTypes.func,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    accessibilityLabel: PropTypes.string\n  }),\n  leadingIcon: PropTypes.shape(ImagePropTypes)\n});\nTextField.defaultProps = {\n  enableErrors: true,\n  validateOnBlur: true\n};\nexport { TextField as default };\nfunction createStyles(_ref) {\n  var centered = _ref.centered,\n    multiline = _ref.multiline;\n  var rightItemTopPadding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var itemTopPadding = Constants.isIOS ? rightItemTopPadding - 3 : rightItemTopPadding - 1;\n  return StyleSheet.create({\n    container: {},\n    innerContainer: {\n      flexDirection: 'row',\n      justifyContent: centered ? 'center' : undefined,\n      borderBottomWidth: 1,\n      borderColor: Colors.grey70,\n      paddingBottom: Constants.isIOS ? 10 : 5\n    },\n    innerContainerWithoutUnderline: {\n      borderBottomWidth: 0,\n      paddingBottom: 0\n    },\n    input: {\n      flexGrow: 1,\n      textAlign: centered ? 'center' : Constants.isRTL ? 'right' : 'left',\n      backgroundColor: 'transparent',\n      padding: 0,\n      borderColor: 'transparent',\n      borderWidth: Constants.isAndroid ? 1 : undefined\n    },\n    expandableInput: {\n      flexGrow: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    expandableModalContent: {\n      flex: 1,\n      paddingTop: 15,\n      paddingHorizontal: 20\n    },\n    prefix: {\n      color: Colors.grey30,\n      marginRight: Spacings.s1,\n      textAlignVertical: 'center'\n    },\n    placeholder: {\n      textAlign: 'left'\n    },\n    errorMessage: {\n      color: Colors.red30,\n      textAlign: centered ? 'center' : 'left'\n    },\n    topLabel: {\n      marginBottom: Constants.isIOS ? multiline ? 1 : 5 : 7\n    },\n    bottomLabel: {\n      marginTop: 9\n    },\n    label: _objectSpread(_objectSpread({}, LABEL_TYPOGRAPHY), {}, {\n      height: LABEL_TYPOGRAPHY.lineHeight\n    }),\n    rightElement: {\n      paddingRight: ICON_SIZE + ICON_LEFT_PADDING\n    },\n    rightButton: {\n      position: 'absolute',\n      right: 0,\n      alignSelf: 'flex-start',\n      paddingTop: itemTopPadding\n    },\n    rightButtonImage: {\n      width: ICON_SIZE,\n      height: ICON_SIZE\n    },\n    leadingIcon: {\n      alignSelf: 'center'\n    },\n    accessibilityDummyErrorMessage: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: 1,\n      height: 1\n    }\n  });\n}","map":{"version":3,"names":["_get","_isUndefined","_isFunction","_isPlainObject","_isString","_invoke","_isEmpty","PropTypes","React","TextInputPropTypes","ImagePropTypes","memoize","Constants","Colors","Typography","Spacings","BaseInput","Modal","TextArea","View","Image","Text","TouchableOpacity","COLOR_BY_STATE","default","grey10","focus","error","disabled","grey50","UNDERLINE_COLOR_BY_STATE","$outlinePrimary","red30","PLACEHOLDER_COLOR_BY_STATE","grey30","$textPrimary","CHAR_COUNTER_COLOR_BY_STATE","LABEL_TYPOGRAPHY","text80","ICON_SIZE","ICON_LEFT_PADDING","FLOATING_PLACEHOLDER_SCALE","TextField","props","onPlaceholderLayout","event","width","nativeEvent","layout","translate","setState","floatingPlaceholderTranslate","toggleExpandableModal","value","showExpandableModal","updateFloatingPlaceholderState","withoutAnimation","state","floatingPlaceholderState","setValue","shouldFloatPlaceholder","Animated","spring","toValue","duration","useNativeDriver","start","getPlaceholderText","placeholder","helperText","text","shouldFakePlaceholder","shouldShowHelperText","shouldShowTopError","getRequiredPlaceholder","onPressRightButton","onDoneEditingExpandableInput","expandableInputValue","expandableInput","onKeyPress","lastKey","key","setCharCountColor","onChangeText","backspaceKey","transformer","validateOnChange","transformedText","setImmediate","validate","Value","charCountColor","generatePropsWarnings","nextProps","_prevProps","prevState","focused","maxLength","console","warn","showCharacterCounter","styles","createStyles","getThemeProps","getTopPaddings","floatingPlaceholder","accessibilityState","isDisabled","undefined","accessibilityLabel","isRequiredField","isIOS","colorProp","getErrorMessage","disabledColor","mergedColorState","length","maxReached","isCounterLimit","color","title","top","editable","counter","getCharCount","floatOnFocus","hasText","shouldFloatOnFocus","centered","leadingIcon","prefix","Boolean","enableErrors","useTopErrors","shouldShowError","rightButtonProps","expandable","iconSource","placeholderTextColor","floatingPlaceholderColor","floatingPlaceholderStyle","typography","getTypography","placeholderColor","getStateColor","getTopErrorsPosition","lineHeight","transform","scale","interpolate","inputRange","outputRange","translateY","translateX","prefixStyle","titleColor","titleStyle","shouldRenderTitle","topLabel","label","getCharCountColor","bottomLabel","visible","errorColor","textColor","positionStyle","errorMessage","renderExpandable","topBarProps","textInputProps","extractOwnProps","expandableModalContent","textarea","renderExpandableInput","testID","getAccessibilityInfo","renderTextInput","style","multiline","numberOfLines","rightIconSource","others","typographyStyle","extractColorValue","hasRightElement","shouldDisplayRightButton","shouldUseMultiline","inputStyle","rightElement","input","maxHeight","isAndroid","isRTL","minHeight","paddingTop","placeholderText","isEditable","onChange","onFocus","onBlur","iconColor","rightButton","rightButtonImage","tintColor","$iconPrimary","rightIconStyle","containerStyle","underlineColor","hideUnderline","underlineStateColor","container","renderError","renderTitle","innerContainer","innerContainerWithoutUnderline","borderColor","renderPrefix","renderPlaceholder","renderRightButton","renderRightIcon","renderExpandableModal","accessibilityDummyErrorMessage","renderCharCounter","displayName","propTypes","bool","oneOfType","string","object","number","array","elementType","onToggleExpandableModal","func","shape","TopBar","source","onPress","defaultProps","validateOnBlur","rightItemTopPadding","itemTopPadding","StyleSheet","create","flexDirection","justifyContent","borderBottomWidth","grey70","paddingBottom","flexGrow","textAlign","backgroundColor","padding","borderWidth","alignItems","flex","paddingHorizontal","marginRight","s1","textAlignVertical","marginBottom","marginTop","height","paddingRight","position","right","alignSelf","bottom","left"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/textField/index.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nimport _invoke from \"lodash/invoke\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Animated, TextInput as RNTextInput } from 'react-native';\nimport { TextInputPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport memoize from 'memoize-one';\nimport { Constants } from \"../../commons/new\";\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport BaseInput from \"../baseInput\";\nimport Modal from \"../modal\";\nimport TextArea from \"../textArea\";\nimport View from \"../view\";\nimport Image from \"../image\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nconst COLOR_BY_STATE = {\n  default: Colors.grey10,\n  focus: Colors.grey10,\n  error: Colors.grey10,\n  disabled: Colors.grey50\n};\nconst UNDERLINE_COLOR_BY_STATE = {\n  default: Colors.grey50,\n  focus: Colors.$outlinePrimary,\n  error: Colors.red30\n};\nconst PLACEHOLDER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  focus: Colors.$textPrimary\n};\nconst CHAR_COUNTER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  error: Colors.red30\n};\nconst LABEL_TYPOGRAPHY = Typography.text80;\nconst ICON_SIZE = 24;\nconst ICON_LEFT_PADDING = 6;\nconst FLOATING_PLACEHOLDER_SCALE = 0.875;\n\n/**\n * @description: A wrapper for TextInput component with extra functionality like floating placeholder and validations (This is an uncontrolled component)\n * @modifiers: Typography\n * @extends: TextInput\n * @extendsLink: https://reactnative.dev/docs/textinput\n * @gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen/BasicTextFieldScreen.js\n */\nexport default class TextField extends BaseInput {\n  static displayName = 'TextField';\n  static propTypes = {\n    ...TextInputPropTypes,\n    ...BaseInput.propTypes,\n    /**\n     * should placeholder have floating behavior\n     */\n    floatingPlaceholder: PropTypes.bool,\n    /**\n     * floating placeholder color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    floatingPlaceholderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * Custom style for floating placeholder\n     */\n    floatingPlaceholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * This text will appear as a placeholder when the textInput becomes focused, only when passing floatingPlaceholder\n     * as well (NOT for expandable textInputs)\n     */\n    helperText: PropTypes.string,\n    /**\n     * hide text input underline, by default false\n     */\n    hideUnderline: PropTypes.bool,\n    /**\n     * underline color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    underlineColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * the color of all text when the input is disabled (if undefined will not apply color)\n     */\n    disabledColor: PropTypes.string,\n    /**\n     * should text input be align to center\n     */\n    centered: PropTypes.bool,\n    /**\n     * input error message, should be empty if no error exists\n     */\n    error: PropTypes.string,\n    /**\n     * should the input component support error messages\n     */\n    enableErrors: PropTypes.bool,\n    /**\n     * input error message's text color\n     */\n    errorColor: PropTypes.string,\n    /**\n     * should the input expand to another text area modal\n     */\n    expandable: PropTypes.bool,\n    /**\n     * Render custom expandable input (requires expandable to be true)\n     */\n    renderExpandableInput: PropTypes.elementType,\n    /**\n     * allow custom rendering of expandable content when clicking on the input (useful for pickers)\n     * accept props and state as params, ex. (props, state) => {...}\n     * use toggleExpandableModal(false) method to toggle off the expandable content\n     */\n    renderExpandable: PropTypes.elementType,\n    /**\n     * Callback for the modal toggle. Pass with renderExpandable to control the modal toggle\n     */\n    onToggleExpandableModal: PropTypes.func,\n    /**\n     * The picker modal top bar props\n     */\n    topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n    /**\n     * transform function executed on value and return transformed value\n     */\n    transformer: PropTypes.func,\n    /**\n     * Pass to render a prefix text as part of the input (doesn't work with floatingPlaceholder)\n     */\n    prefix: PropTypes.string,\n    /**\n     * The prefix style\n     */\n    prefixStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Fixed title that will displayed above the input (note: floatingPlaceholder MUST be 'false')\n     */\n    title: PropTypes.string,\n    /**\n     * The title's color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * Additional styles for the title (not including 'color')\n     */\n    titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * should the input display a character counter (only when passing 'maxLength')\n     */\n    showCharacterCounter: PropTypes.bool,\n    /**\n     * should float the placeholder when focused (instead of when typing)\n     */\n    floatOnFocus: PropTypes.bool,\n    /**\n     * should the errors be displayed at the top\n     */\n    useTopErrors: PropTypes.bool,\n    /**\n     * Icon asset source for showing on the right side, appropriate for dropdown icon and such\n     */\n    rightIconSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Pass to style the right icon source\n     */\n    rightIconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Props for the right button {iconSource, onPress, style}\n     */\n    rightButtonProps: PropTypes.shape({\n      iconSource: ImagePropTypes.source,\n      iconColor: PropTypes.string,\n      onPress: PropTypes.func,\n      style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n      accessibilityLabel: PropTypes.string\n    }),\n    /**\n     * Pass to render a leading icon to the TextInput value. Accepts Image props (doesn't work with floatingPlaceholder)\n     */\n    leadingIcon: PropTypes.shape(ImagePropTypes)\n  };\n  static defaultProps = {\n    enableErrors: true,\n    validateOnBlur: true\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      value: props.value,\n      // for floatingPlaceholder functionality\n      floatingPlaceholderState: new Animated.Value(this.shouldFloatPlaceholder(props.value) ? 1 : 0),\n      showExpandableModal: false,\n      floatingPlaceholderTranslate: 0,\n      charCountColor: CHAR_COUNTER_COLOR_BY_STATE.default\n    };\n    this.generatePropsWarnings(props);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({\n        value: nextProps.value\n      }, () => {\n        this.updateFloatingPlaceholderState();\n        if (nextProps.validateOnChange) {\n          this.validate();\n        }\n      });\n    }\n  }\n  componentDidUpdate(_prevProps, prevState) {\n    if (_isEmpty(prevState.value) !== _isEmpty(this.state.value) || prevState.focused !== this.state.focused) {\n      this.updateFloatingPlaceholderState();\n    }\n  }\n  onPlaceholderLayout = event => {\n    const {\n      width\n    } = event.nativeEvent.layout;\n    const translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n    this.setState({\n      floatingPlaceholderTranslate: translate / FLOATING_PLACEHOLDER_SCALE\n    });\n  };\n\n  /** Actions */\n  generatePropsWarnings(props) {\n    if (props.maxLength === 0) {\n      console.warn('Setting maxLength to zero will block typing in this input');\n    }\n    if (props.showCharacterCounter && !props.maxLength) {\n      console.warn('In order to use showCharacterCount please pass \\'maxLength\\' prop');\n    }\n  }\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps(), this.getTopPaddings());\n  }\n  getAccessibilityInfo() {\n    const {\n      floatingPlaceholder,\n      placeholder\n    } = this.getThemeProps();\n    const accessibilityState = this.isDisabled() ? {\n      disabled: true\n    } : undefined;\n    let accessibilityLabel = floatingPlaceholder ? this.props.accessibilityLabel || placeholder : '';\n    if (this.isRequiredField()) {\n      accessibilityLabel = `${accessibilityLabel}. Mandatory`;\n    }\n    return {\n      accessibilityLabel,\n      // on Android accessibilityStates cause issues with expandable input\n      accessibilityState: Constants.isIOS ? accessibilityState : undefined\n    };\n  }\n  toggleExpandableModal = value => {\n    this.setState({\n      showExpandableModal: value\n    });\n    _invoke(this.props, 'onToggleExpandableModal', value);\n  };\n  updateFloatingPlaceholderState = withoutAnimation => {\n    if (withoutAnimation) {\n      this.state.floatingPlaceholderState.setValue(this.shouldFloatPlaceholder() ? 1 : 0);\n    } else {\n      Animated.spring(this.state.floatingPlaceholderState, {\n        toValue: this.shouldFloatPlaceholder() ? 1 : 0,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  getPlaceholderText = memoize((placeholder, helperText) => {\n    // HACK: passing whitespace instead of undefined. Issue fixed in RN56\n    const text = this.shouldFakePlaceholder() ? this.shouldShowHelperText() ? helperText : ' ' : this.shouldShowTopError() && this.shouldShowHelperText() ? helperText : this.getRequiredPlaceholder(placeholder);\n    return text;\n  });\n  getStateColor(colorProp = {}) {\n    const {\n      focused\n    } = this.state;\n    const error = this.getErrorMessage();\n    const {\n      disabledColor\n    } = this.getThemeProps();\n    if (_isString(colorProp)) {\n      return colorProp || Colors.grey10;\n    } else if (_isPlainObject(colorProp)) {\n      const mergedColorState = {\n        ...COLOR_BY_STATE,\n        ...colorProp\n      };\n      if (this.isDisabled()) {\n        return disabledColor || mergedColorState.disabled;\n      } else if (error) {\n        return mergedColorState.error;\n      } else if (focused) {\n        return mergedColorState.focus;\n      } else {\n        return mergedColorState.default;\n      }\n    }\n    return colorProp || Colors.grey10;\n  }\n  getCharCount() {\n    const {\n      value\n    } = this.state;\n    if (value) {\n      return value.length;\n    }\n    return 0;\n  }\n  setCharCountColor(key) {\n    this.maxReached = key === Constants.backspaceKey ? false : this.isCounterLimit();\n    const color = this.state.focused && this.maxReached ? CHAR_COUNTER_COLOR_BY_STATE.error : CHAR_COUNTER_COLOR_BY_STATE.default;\n    if (color !== this.state.charCountColor) {\n      this.setState({\n        charCountColor: color\n      });\n    }\n  }\n  getCharCountColor() {\n    const {\n      charCountColor\n    } = this.state;\n    const {\n      disabledColor\n    } = this.getThemeProps();\n    return this.isDisabled() && disabledColor ? disabledColor : charCountColor;\n  }\n  getTopPaddings() {\n    return this.shouldFakePlaceholder() ? this.shouldShowTopError() ? undefined : 25 : undefined;\n  }\n  getTopErrorsPosition() {\n    return !this.props.title && this.shouldShowTopError() ? {\n      top: Constants.isIOS ? -25 : -27\n    } : undefined;\n  }\n  isDisabled() {\n    return this.props.editable === false;\n  }\n  isCounterLimit() {\n    const {\n      maxLength\n    } = this.getThemeProps();\n    const counter = this.getCharCount();\n    return counter === 0 ? false : maxLength <= counter;\n  }\n  hasText(value) {\n    return !_isEmpty(value || this.state.value);\n  }\n  shouldShowHelperText() {\n    const {\n      focused\n    } = this.state;\n    const {\n      helperText\n    } = this.props;\n    return focused && helperText;\n  }\n  shouldFloatOnFocus() {\n    const {\n      focused\n    } = this.state;\n    const {\n      floatOnFocus\n    } = this.getThemeProps();\n    return focused && floatOnFocus;\n  }\n  shouldFloatPlaceholder(text) {\n    return this.hasText(text) || this.shouldShowHelperText() || this.shouldFloatOnFocus();\n  }\n  shouldFakePlaceholder() {\n    const {\n      floatingPlaceholder,\n      centered,\n      leadingIcon,\n      prefix\n    } = this.getThemeProps();\n    return !leadingIcon && !prefix && Boolean(floatingPlaceholder && !centered && !this.shouldShowTopError());\n  }\n  shouldShowError() {\n    const {\n      enableErrors\n    } = this.getThemeProps();\n    const error = this.getErrorMessage();\n    return enableErrors && error;\n  }\n  getErrorMessage() {\n    return this.props?.error || this.state?.error;\n  }\n  shouldShowTopError() {\n    const {\n      useTopErrors\n    } = this.getThemeProps();\n    return this.shouldShowError() && useTopErrors;\n  }\n  shouldDisplayRightButton() {\n    const {\n      rightButtonProps,\n      expandable\n    } = this.getThemeProps();\n    return !expandable && rightButtonProps && rightButtonProps.iconSource;\n  }\n  shouldRenderTitle() {\n    const {\n      floatingPlaceholder,\n      title\n    } = this.getThemeProps();\n    return !floatingPlaceholder && title;\n  }\n  onPressRightButton = () => {\n    _invoke(this.props, 'rightButtonProps.onPress');\n  };\n\n  /** Renders */\n  renderPlaceholder() {\n    const {\n      floatingPlaceholderState,\n      floatingPlaceholderTranslate\n    } = this.state;\n    const {\n      placeholder,\n      placeholderTextColor,\n      floatingPlaceholderColor,\n      floatingPlaceholderStyle\n    } = this.getThemeProps();\n    const typography = this.getTypography();\n    const placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n    if (this.shouldFakePlaceholder()) {\n      return <View absF left>\n          <Animated.Text pointerEvents=\"none\" numberOfLines={1} suppressHighlighting accessible={false} onLayout={this.onPlaceholderLayout} style={[this.styles.placeholder, this.getTopErrorsPosition(), typography,\n        // TODO: we need to exclude completely any dependency on line height\n        // in this component since it always breaks alignments\n        {\n          lineHeight: undefined\n        }, {\n          transform: [{\n            scale: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, FLOATING_PLACEHOLDER_SCALE]\n            })\n          }, {\n            translateY: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [25, 0]\n            })\n          }, {\n            translateX: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, -floatingPlaceholderTranslate]\n            })\n          }],\n          color: this.shouldFloatPlaceholder() ? this.getStateColor(floatingPlaceholderColor || PLACEHOLDER_COLOR_BY_STATE) : placeholderColor\n        }, floatingPlaceholderStyle]}>\n            {this.getRequiredPlaceholder(placeholder)}\n          </Animated.Text>\n        </View>;\n    }\n  }\n  renderPrefix() {\n    const {\n      prefix,\n      prefixStyle\n    } = this.props;\n    if (prefix) {\n      const typography = this.getTypography();\n      return <Text style={[this.styles.prefix, typography, {\n        lineHeight: undefined\n      }, prefixStyle]}>{prefix}</Text>;\n    }\n  }\n  renderTitle() {\n    const {\n      title,\n      titleColor,\n      titleStyle\n    } = this.getThemeProps();\n    const color = this.getStateColor(titleColor || PLACEHOLDER_COLOR_BY_STATE);\n    if (this.shouldRenderTitle()) {\n      return <Text style={[{\n        color\n      }, this.styles.topLabel, this.styles.label, titleStyle]}>{title}</Text>;\n    }\n  }\n  renderCharCounter() {\n    const {\n      maxLength,\n      showCharacterCounter\n    } = this.getThemeProps();\n    if (maxLength && showCharacterCounter) {\n      const counter = this.getCharCount();\n      const color = this.getCharCountColor();\n      return <Text style={[{\n        color\n      }, this.styles.bottomLabel, this.styles.label]} accessibilityLabel={`${counter} out of ${maxLength} max characters`}>\n          {counter} / {maxLength}\n        </Text>;\n    }\n  }\n  renderError(visible) {\n    const {\n      enableErrors,\n      useTopErrors,\n      errorColor\n    } = this.getThemeProps();\n    const textColor = errorColor ? {\n      color: errorColor\n    } : undefined;\n    const positionStyle = useTopErrors ? this.styles.topLabel : this.styles.bottomLabel;\n    const error = this.getErrorMessage();\n    if (visible && enableErrors) {\n      return <Text style={[this.styles.errorMessage, this.styles.label, positionStyle, textColor]} accessible={!_isEmpty(error) && !useTopErrors}>\n          {error}\n        </Text>;\n    }\n  }\n  renderExpandableModal() {\n    const {\n      renderExpandable,\n      topBarProps\n    } = this.getThemeProps();\n    const {\n      showExpandableModal\n    } = this.state;\n    if (_isFunction(renderExpandable) && showExpandableModal) {\n      return renderExpandable(this.getThemeProps(), this.state);\n    }\n    const textInputProps = TextField.extractOwnProps(this.props, ['error', 'testID']);\n    return <Modal animationType={'slide'} visible={showExpandableModal} onRequestClose={() => this.toggleExpandableModal(false)}>\n        <Modal.TopBar {...topBarProps} onCancel={() => this.toggleExpandableModal(false)} onDone={this.onDoneEditingExpandableInput} />\n        <View style={this.styles.expandableModalContent}>\n          <TextArea ref={textarea => {\n          this.expandableInput = textarea;\n        }} {...textInputProps} value={this.state.value} />\n        </View>\n      </Modal>;\n  }\n  renderExpandableInput() {\n    const {\n      renderExpandableInput,\n      testID\n    } = this.getThemeProps();\n    if (_isFunction(renderExpandableInput)) {\n      return renderExpandableInput(this.getThemeProps(), this.toggleExpandableModal);\n    }\n    return <TouchableOpacity style={this.styles.expandableInput} activeOpacity={1} onPress={() => !this.isDisabled() && this.toggleExpandableModal(true)} testID={`${testID}.expandable`}\n    // {...this.extractAccessibilityProps()}\n    {...this.getAccessibilityInfo()}>\n        {this.renderTextInput()}\n      </TouchableOpacity>;\n  }\n  renderTextInput() {\n    const {\n      value\n    } = this.state; // value set on state for floatingPlaceholder functionality\n    const {\n      style,\n      placeholderTextColor,\n      multiline,\n      // hideUnderline,\n      numberOfLines,\n      expandable,\n      rightIconSource,\n      color,\n      placeholder,\n      helperText,\n      ...others\n    } = this.getThemeProps();\n    const typography = this.getTypography();\n    const {\n      lineHeight,\n      ...typographyStyle\n    } = typography;\n    const textColor = this.getStateColor(color || this.extractColorValue());\n    const hasRightElement = this.shouldDisplayRightButton() || rightIconSource;\n    const shouldUseMultiline = multiline /*  || expandable */;\n\n    const inputStyle = [hasRightElement && this.styles.rightElement, this.styles.input,\n    // hideUnderline && this.styles.inputWithoutUnderline,\n    {\n      ...typographyStyle\n    },\n    // Constants.isAndroid && {lineHeight},\n    expandable && {\n      maxHeight: lineHeight * (Constants.isAndroid ? 3 : 3.3)\n    }, Constants.isRTL && {\n      minHeight: lineHeight + 3\n    }, Constants.isIOS && shouldUseMultiline && {\n      paddingTop: 0\n    },\n    // fix for iOS topPadding in multiline TextInput\n    {\n      color: textColor\n    }, style];\n    const placeholderText = this.getPlaceholderText(placeholder, helperText);\n    const placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n    const isEditable = !this.isDisabled() && !expandable;\n    return <RNTextInput {...this.getAccessibilityInfo()} pointerEvents={expandable ? 'none' : undefined} {...others} value={value} placeholder={placeholderText} placeholderTextColor={placeholderColor} underlineColorAndroid=\"transparent\" style={inputStyle} multiline={shouldUseMultiline} numberOfLines={numberOfLines} onKeyPress={this.onKeyPress} onChangeText={this.onChangeText} onChange={this.onChange} onFocus={this.onFocus} onBlur={this.onBlur} ref={input => {\n      this.input = input;\n    }} editable={isEditable} />;\n  }\n  renderRightButton() {\n    if (this.shouldDisplayRightButton()) {\n      const {\n        rightButtonProps\n      } = this.getThemeProps();\n      const {\n        style,\n        iconSource,\n        iconColor,\n        accessibilityLabel,\n        ...others\n      } = rightButtonProps;\n      return <TouchableOpacity {...others} accessibilityLabel={accessibilityLabel} style={[this.styles.rightButton, this.getTopErrorsPosition(), style]} onPress={this.onPressRightButton}>\n          <Image pointerEvents=\"none\" source={iconSource} resizeMode={'contain'} style={[this.styles.rightButtonImage, {\n          tintColor: iconColor || Colors.$iconPrimary\n        }]} />\n        </TouchableOpacity>;\n    }\n  }\n  renderRightIcon() {\n    const {\n      rightIconSource,\n      rightIconStyle\n    } = this.getThemeProps();\n    if (rightIconSource) {\n      return <View style={[this.styles.rightButton, this.getTopErrorsPosition()]} pointerEvents=\"none\">\n          <Image source={rightIconSource} resizeMode={'center'} style={[this.styles.rightButtonImage, rightIconStyle]} />\n        </View>;\n    }\n  }\n  render() {\n    const {\n      expandable,\n      containerStyle,\n      underlineColor,\n      useTopErrors,\n      hideUnderline,\n      leadingIcon\n    } = this.getThemeProps();\n    const underlineStateColor = this.getStateColor(underlineColor || UNDERLINE_COLOR_BY_STATE);\n    return <View style={[this.styles.container, containerStyle]} collapsable={false}>\n        {this.shouldShowTopError() ? this.renderError(useTopErrors) : this.renderTitle()}\n\n        <View style={[this.styles.innerContainer, hideUnderline && this.styles.innerContainerWithoutUnderline, {\n        borderColor: underlineStateColor\n      }, {\n        paddingTop: this.getTopPaddings()\n      }]}>\n          {leadingIcon && <Image {...leadingIcon} style={[this.styles.leadingIcon, leadingIcon.style]} />}\n          {this.renderPrefix()}\n          {this.renderPlaceholder()}\n          {expandable ? this.renderExpandableInput() : this.renderTextInput()}\n          {this.renderRightButton()}\n          {this.renderRightIcon()}\n          {expandable && this.renderExpandableModal()}\n        </View>\n\n        {!_isUndefined(this.getErrorMessage()) && useTopErrors && <View style={this.styles.accessibilityDummyErrorMessage} accessible accessibilityLabel={this.getErrorMessage()} />}\n\n        <View row>\n          <View flex>{this.renderError(!useTopErrors)}</View>\n          {this.renderCharCounter()}\n        </View>\n      </View>;\n  }\n\n  /** Events */\n  onDoneEditingExpandableInput = () => {\n    const expandableInputValue = _get(this.expandableInput, 'state.value');\n    this.setState({\n      value: expandableInputValue\n    });\n    this.state.floatingPlaceholderState.setValue(expandableInputValue ? 1 : 0);\n    _invoke(this.props, 'onChangeText', expandableInputValue);\n    this.toggleExpandableModal(false);\n  };\n  onKeyPress = event => {\n    this.lastKey = event.nativeEvent.key;\n    this.setCharCountColor(this.lastKey);\n    _invoke(this.props, 'onKeyPress', event);\n  };\n  onChangeText = text => {\n    // when character count exceeds maxLength text will be empty string.\n    // HACK: To avoid setting state value to '' we check the source of that deletion\n    if (text === '' && this.lastKey && this.lastKey !== Constants.backspaceKey) {\n      return;\n    }\n    const {\n      transformer,\n      validateOnChange\n    } = this.props;\n    let transformedText = text;\n    if (_isFunction(transformer)) {\n      transformedText = transformer(text);\n    }\n    _invoke(this.props, 'onChangeText', transformedText);\n    this.setState({\n      value: transformedText\n    }, () => {\n      if (validateOnChange) {\n        setImmediate(this.validate);\n      }\n    });\n  };\n}\nfunction createStyles({\n  centered,\n  multiline\n}, rightItemTopPadding = 0) {\n  const itemTopPadding = Constants.isIOS ? rightItemTopPadding - 3 : rightItemTopPadding - 1;\n  return StyleSheet.create({\n    container: {},\n    innerContainer: {\n      // flexGrow: 1, // create bugs with lineHeight\n      flexDirection: 'row',\n      justifyContent: centered ? 'center' : undefined,\n      borderBottomWidth: 1,\n      borderColor: Colors.grey70,\n      paddingBottom: Constants.isIOS ? 10 : 5\n    },\n    innerContainerWithoutUnderline: {\n      borderBottomWidth: 0,\n      paddingBottom: 0\n    },\n    input: {\n      flexGrow: 1,\n      textAlign: centered ? 'center' : Constants.isRTL ? 'right' : 'left',\n      backgroundColor: 'transparent',\n      // marginBottom: Constants.isIOS ? 10 : 5,\n      padding: 0,\n      // for Android\n      // textAlignVertical: 'top', // for Android\n      borderColor: 'transparent',\n      // borderColor & borderWidth is a fix for collapsing issue on Android\n      borderWidth: Constants.isAndroid ? 1 : undefined // for Android\n    },\n\n    expandableInput: {\n      flexGrow: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    // inputWithoutUnderline: {\n    //   marginBottom: undefined\n    // },\n    expandableModalContent: {\n      flex: 1,\n      paddingTop: 15,\n      paddingHorizontal: 20\n    },\n    prefix: {\n      color: Colors.grey30,\n      marginRight: Spacings.s1,\n      textAlignVertical: 'center'\n    },\n    placeholder: {\n      textAlign: 'left'\n    },\n    errorMessage: {\n      color: Colors.red30,\n      textAlign: centered ? 'center' : 'left'\n    },\n    topLabel: {\n      marginBottom: Constants.isIOS ? multiline ? 1 : 5 : 7\n    },\n    bottomLabel: {\n      marginTop: 9\n    },\n    label: {\n      ...LABEL_TYPOGRAPHY,\n      height: LABEL_TYPOGRAPHY.lineHeight\n    },\n    rightElement: {\n      paddingRight: ICON_SIZE + ICON_LEFT_PADDING\n    },\n    rightButton: {\n      position: 'absolute',\n      right: 0,\n      alignSelf: 'flex-start',\n      paddingTop: itemTopPadding\n    },\n    rightButtonImage: {\n      width: ICON_SIZE,\n      height: ICON_SIZE\n    },\n    leadingIcon: {\n      alignSelf: 'center'\n    },\n    accessibilityDummyErrorMessage: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: 1,\n      height: 1\n    }\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}