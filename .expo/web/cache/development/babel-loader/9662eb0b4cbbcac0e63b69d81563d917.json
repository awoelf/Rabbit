{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onPress\", \"disabled\", \"style\", \"testID\", \"animateLayout\", \"modifiers\", \"forwardedRef\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _forEach from \"lodash/forEach\";\nimport _isEqual from \"lodash/isEqual\";\nimport React, { PureComponent } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { asBaseComponent, forwardRef, Constants } from \"../../commons/new\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE } from \"./ButtonConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n  var _super = _createSuper(Button);\n  function Button(props) {\n    var _this;\n    _classCallCheck(this, Button);\n    _this = _super.call(this, props);\n    _this.state = {\n      size: undefined\n    };\n    _this.styles = createStyles();\n    _this.onLayout = function (event) {\n      var height = event.nativeEvent.layout.height;\n      if (_this.props.round) {\n        var width = event.nativeEvent.layout.width;\n        var size = height >= width ? height : width;\n        _this.setState({\n          size: size\n        });\n      }\n      if (Constants.isAndroid && Platform.Version <= 17) {\n        _this.setState({\n          borderRadius: height / 2\n        });\n      }\n    };\n    return _this;\n  }\n  _createClass(Button, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.animateLayout && !_isEqual(prevProps, this.props)) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n      }\n    }\n  }, {\n    key: \"isOutline\",\n    get: function get() {\n      var _this$props = this.props,\n        outline = _this$props.outline,\n        outlineColor = _this$props.outlineColor;\n      return Boolean(outline || outlineColor);\n    }\n  }, {\n    key: \"isLink\",\n    get: function get() {\n      var _this$props2 = this.props,\n        link = _this$props2.link,\n        hyperlink = _this$props2.hyperlink;\n      return link || hyperlink;\n    }\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      return !this.isOutline && !this.isLink;\n    }\n  }, {\n    key: \"isIconButton\",\n    get: function get() {\n      var _this$props3 = this.props,\n        iconSource = _this$props3.iconSource,\n        label = _this$props3.label;\n      return iconSource && !label;\n    }\n  }, {\n    key: \"getBackgroundColor\",\n    value: function getBackgroundColor() {\n      var _this$props4 = this.props,\n        disabled = _this$props4.disabled,\n        outline = _this$props4.outline,\n        disabledBackgroundColor = _this$props4.disabledBackgroundColor,\n        backgroundColor = _this$props4.backgroundColor,\n        modifiers = _this$props4.modifiers;\n      var modifiersBackgroundColor = modifiers.backgroundColor;\n      if (!outline && !this.isLink) {\n        if (disabled) {\n          return disabledBackgroundColor || Colors.$backgroundDisabled;\n        }\n        return backgroundColor || modifiersBackgroundColor || Colors.$backgroundPrimaryHeavy;\n      }\n      return 'transparent';\n    }\n  }, {\n    key: \"getActiveBackgroundColor\",\n    value: function getActiveBackgroundColor() {\n      var getActiveBackgroundColor = this.props.getActiveBackgroundColor;\n      if (getActiveBackgroundColor) {\n        return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n      }\n    }\n  }, {\n    key: \"getLabelColor\",\n    value: function getLabelColor() {\n      var _this$props5 = this.props,\n        linkColor = _this$props5.linkColor,\n        outline = _this$props5.outline,\n        outlineColor = _this$props5.outlineColor,\n        disabled = _this$props5.disabled,\n        propsColor = _this$props5.color,\n        backgroundColor = _this$props5.backgroundColor,\n        modifiers = _this$props5.modifiers;\n      var modifiersColor = modifiers.color;\n      var isLink = this.isLink;\n      var color = Colors.$textDefaultLight;\n      if (isLink) {\n        color = linkColor || Colors.$textPrimary;\n      } else if (outline) {\n        color = outlineColor || Colors.$textPrimary;\n      } else if (this.isIconButton) {\n        color = backgroundColor === 'transparent' ? undefined : Colors.$iconDefaultLight;\n      }\n      if (disabled && (isLink || outline)) {\n        return Colors.$textDisabled;\n      }\n      color = propsColor || modifiersColor || color;\n      return color;\n    }\n  }, {\n    key: \"getLabelSizeStyle\",\n    value: function getLabelSizeStyle() {\n      var size = this.props.size || DEFAULT_SIZE;\n      var LABEL_STYLE_BY_SIZE = {};\n      LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = Typography.text80;\n      LABEL_STYLE_BY_SIZE[Button.sizes.small] = Typography.text80;\n      LABEL_STYLE_BY_SIZE[Button.sizes.medium] = Typography.text80;\n      LABEL_STYLE_BY_SIZE[Button.sizes.large] = undefined;\n      var labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n      return labelSizeStyle;\n    }\n  }, {\n    key: \"getContainerSizeStyle\",\n    value: function getContainerSizeStyle() {\n      var _this$props6 = this.props,\n        outline = _this$props6.outline,\n        avoidMinWidth = _this$props6.avoidMinWidth,\n        avoidInnerPadding = _this$props6.avoidInnerPadding,\n        round = _this$props6.round,\n        propsSize = _this$props6.size,\n        propsOutlineWidth = _this$props6.outlineWidth;\n      var size = propsSize || DEFAULT_SIZE;\n      var outlineWidth = propsOutlineWidth || 1;\n      var CONTAINER_STYLE_BY_SIZE = {};\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.XSMALL\n      } : {\n        paddingVertical: PADDINGS.XSMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n        minWidth: MIN_WIDTH.XSMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.SMALL\n      } : {\n        paddingVertical: PADDINGS.SMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n        minWidth: MIN_WIDTH.SMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.MEDIUM\n      } : {\n        paddingVertical: PADDINGS.MEDIUM,\n        paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n        minWidth: MIN_WIDTH.MEDIUM\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.LARGE\n      } : {\n        paddingVertical: PADDINGS.LARGE,\n        paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n        minWidth: MIN_WIDTH.LARGE\n      };\n      if (outline) {\n        _forEach(CONTAINER_STYLE_BY_SIZE, function (style) {\n          if (round) {\n            style.padding -= outlineWidth;\n          } else {\n            style.paddingVertical -= outlineWidth;\n            style.paddingHorizontal -= outlineWidth;\n          }\n        });\n      }\n      var containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n      if (this.isLink || this.isIconButton && !round) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n        containerSizeStyle.minWidth = undefined;\n      }\n      if (avoidMinWidth) {\n        containerSizeStyle.minWidth = undefined;\n      }\n      if (avoidInnerPadding) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n      }\n      return containerSizeStyle;\n    }\n  }, {\n    key: \"getOutlineStyle\",\n    value: function getOutlineStyle() {\n      var _this$props7 = this.props,\n        outline = _this$props7.outline,\n        outlineColor = _this$props7.outlineColor,\n        outlineWidth = _this$props7.outlineWidth,\n        disabled = _this$props7.disabled;\n      var outlineStyle;\n      if ((outline || outlineColor) && !this.isLink) {\n        outlineStyle = {\n          borderWidth: outlineWidth || 1,\n          borderColor: outlineColor || Colors.$outlinePrimary\n        };\n        if (disabled) {\n          outlineStyle.borderColor = Colors.$outlineDisabled;\n        }\n      }\n      return outlineStyle;\n    }\n  }, {\n    key: \"getBorderRadiusStyle\",\n    value: function getBorderRadiusStyle() {\n      var _this$props8 = this.props,\n        fullWidth = _this$props8.fullWidth,\n        propsBorderRadius = _this$props8.borderRadius,\n        modifiers = _this$props8.modifiers;\n      var modifiersBorderRadius = modifiers.borderRadius;\n      if (this.isLink || fullWidth || propsBorderRadius === 0) {\n        return {\n          borderRadius: 0\n        };\n      }\n      var borderRadius = propsBorderRadius || modifiersBorderRadius || BorderRadiuses.br100;\n      return {\n        borderRadius: borderRadius\n      };\n    }\n  }, {\n    key: \"getShadowStyle\",\n    value: function getShadowStyle() {\n      var backgroundColor = this.getBackgroundColor();\n      var enableShadow = this.props.enableShadow;\n      if (enableShadow) {\n        return [this.styles.shadowStyle, {\n          shadowColor: backgroundColor\n        }];\n      }\n    }\n  }, {\n    key: \"getIconStyle\",\n    value: function getIconStyle() {\n      var _this$props9 = this.props,\n        disabled = _this$props9.disabled,\n        propsIconStyle = _this$props9.iconStyle,\n        iconOnRight = _this$props9.iconOnRight,\n        propsSize = _this$props9.size;\n      var size = propsSize || DEFAULT_SIZE;\n      var iconStyle = {\n        tintColor: this.getLabelColor()\n      };\n      var marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n      if (!this.isIconButton) {\n        if (iconOnRight) {\n          iconStyle.marginLeft = marginSide;\n        } else {\n          iconStyle.marginRight = marginSide;\n        }\n      }\n      if (disabled && !this.isFilled) {\n        iconStyle.tintColor = Colors.$iconDisabled;\n      }\n      return [iconStyle, propsIconStyle];\n    }\n  }, {\n    key: \"getAnimationDirectionStyle\",\n    value: function getAnimationDirectionStyle() {\n      var animateTo = this.props.animateTo;\n      var style;\n      switch (animateTo) {\n        case 'left':\n          style = {\n            alignSelf: 'flex-start'\n          };\n          break;\n        case 'right':\n          style = {\n            alignSelf: 'flex-end'\n          };\n          break;\n        default:\n          break;\n      }\n      return style;\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props10 = this.props,\n        iconSource = _this$props10.iconSource,\n        supportRTL = _this$props10.supportRTL,\n        testID = _this$props10.testID;\n      if (iconSource) {\n        var iconStyle = this.getIconStyle();\n        if (typeof iconSource === 'function') {\n          return iconSource(iconStyle);\n        } else {\n          return _jsx(Image, {\n            source: iconSource,\n            supportRTL: supportRTL,\n            style: iconStyle,\n            testID: testID + \".icon\"\n          });\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this$props11 = this.props,\n        label = _this$props11.label,\n        labelStyle = _this$props11.labelStyle,\n        labelProps = _this$props11.labelProps,\n        hyperlink = _this$props11.hyperlink,\n        testID = _this$props11.testID,\n        modifiers = _this$props11.modifiers;\n      var color = this.getLabelColor();\n      var labelSizeStyle = this.getLabelSizeStyle();\n      var typography = modifiers.typography;\n      if (label) {\n        return _jsx(Text, _objectSpread(_objectSpread({\n          style: [this.styles.text, !!color && {\n            color: color\n          }, labelSizeStyle, typography, labelStyle],\n          underline: hyperlink,\n          numberOfLines: 1,\n          testID: testID + \".label\"\n        }, labelProps), {}, {\n          children: label\n        }));\n      }\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props12 = this.props,\n        onPress = _this$props12.onPress,\n        disabled = _this$props12.disabled,\n        style = _this$props12.style,\n        testID = _this$props12.testID,\n        animateLayout = _this$props12.animateLayout,\n        modifiers = _this$props12.modifiers,\n        forwardedRef = _this$props12.forwardedRef,\n        others = _objectWithoutProperties(_this$props12, _excluded);\n      var shadowStyle = this.getShadowStyle();\n      var margins = modifiers.margins,\n        paddings = modifiers.paddings;\n      var backgroundColor = this.getBackgroundColor();\n      var outlineStyle = this.getOutlineStyle();\n      var containerSizeStyle = this.getContainerSizeStyle();\n      var borderRadiusStyle = this.getBorderRadiusStyle();\n      return _jsxs(TouchableOpacity, _objectSpread(_objectSpread({\n        row: true,\n        centerV: true,\n        style: [this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, this.isLink && this.styles.innerContainerLink, shadowStyle, margins, paddings, {\n          backgroundColor: backgroundColor\n        }, borderRadiusStyle, outlineStyle, style],\n        activeOpacity: 0.6,\n        activeBackgroundColor: this.getActiveBackgroundColor(),\n        onLayout: this.onLayout,\n        onPress: onPress,\n        disabled: disabled,\n        testID: testID\n      }, others), {}, {\n        ref: forwardedRef,\n        children: [this.props.children, this.props.iconOnRight ? this.renderLabel() : this.renderIcon(), this.props.iconOnRight ? this.renderIcon() : this.renderLabel()]\n      }));\n    }\n  }]);\n  return Button;\n}(PureComponent);\nButton.displayName = 'Button';\nButton.defaultProps = DEFAULT_PROPS;\nButton.sizes = ButtonSize;\nButton.animationDirection = ButtonAnimationDirection;\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: _objectSpread({\n      backgroundColor: 'transparent',\n      flexDirection: 'row'\n    }, Typography.text70)\n  });\n}\nexport { Button };\nvar modifiersOptions = {\n  paddings: true,\n  margins: true,\n  borderRadius: true,\n  backgroundColor: true,\n  typography: true,\n  color: true\n};\nexport default asBaseComponent(forwardRef(Button), {\n  modifiersOptions: modifiersOptions\n});","map":{"version":3,"names":["_forEach","_isEqual","React","PureComponent","asBaseComponent","forwardRef","Constants","Colors","Typography","BorderRadiuses","TouchableOpacity","Text","Image","ButtonSize","ButtonAnimationDirection","ButtonProps","DEFAULT_PROPS","PADDINGS","HORIZONTAL_PADDINGS","MIN_WIDTH","DEFAULT_SIZE","Button","props","state","size","undefined","styles","createStyles","onLayout","event","height","nativeEvent","layout","round","width","setState","isAndroid","Platform","Version","borderRadius","prevProps","animateLayout","LayoutAnimation","configureNext","Presets","easeInEaseOut","outline","outlineColor","Boolean","link","hyperlink","isOutline","isLink","iconSource","label","disabled","disabledBackgroundColor","backgroundColor","modifiers","modifiersBackgroundColor","$backgroundDisabled","$backgroundPrimaryHeavy","getActiveBackgroundColor","getBackgroundColor","linkColor","propsColor","color","modifiersColor","$textDefaultLight","$textPrimary","isIconButton","$iconDefaultLight","$textDisabled","LABEL_STYLE_BY_SIZE","sizes","xSmall","text80","small","medium","large","labelSizeStyle","avoidMinWidth","avoidInnerPadding","propsSize","propsOutlineWidth","outlineWidth","CONTAINER_STYLE_BY_SIZE","padding","XSMALL","paddingVertical","paddingHorizontal","minWidth","SMALL","MEDIUM","LARGE","style","containerSizeStyle","outlineStyle","borderWidth","borderColor","$outlinePrimary","$outlineDisabled","fullWidth","propsBorderRadius","modifiersBorderRadius","br100","enableShadow","shadowStyle","shadowColor","propsIconStyle","iconStyle","iconOnRight","tintColor","getLabelColor","marginSide","includes","marginLeft","marginRight","isFilled","$iconDisabled","animateTo","alignSelf","supportRTL","testID","getIconStyle","labelStyle","labelProps","getLabelSizeStyle","typography","text","onPress","forwardedRef","others","getShadowStyle","margins","paddings","getOutlineStyle","getContainerSizeStyle","borderRadiusStyle","getBorderRadiusStyle","container","getAnimationDirectionStyle","innerContainerLink","children","renderLabel","renderIcon","displayName","defaultProps","animationDirection","StyleSheet","create","justifyContent","alignItems","br0","shadowOffset","shadowOpacity","shadowRadius","elevation","flexDirection","text70","modifiersOptions"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/button/index.js"],"sourcesContent":["import _forEach from \"lodash/forEach\";\nimport _isEqual from \"lodash/isEqual\";\nimport React, { PureComponent } from 'react';\nimport { Platform, StyleSheet, LayoutAnimation } from 'react-native';\nimport { asBaseComponent, forwardRef, Constants } from \"../../commons/new\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE } from \"./ButtonConstants\";\nclass Button extends PureComponent {\n  static displayName = 'Button';\n  static defaultProps = DEFAULT_PROPS;\n  static sizes = ButtonSize;\n  static animationDirection = ButtonAnimationDirection;\n\n  // This redundant constructor for some reason fix tests :/\n  // eslint-disable-next-line\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    size: undefined\n  };\n  styles = createStyles();\n  componentDidUpdate(prevProps) {\n    if (this.props.animateLayout && !_isEqual(prevProps, this.props)) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n  }\n\n  // This method will be called more than once in case of layout change!\n  onLayout = event => {\n    const height = event.nativeEvent.layout.height;\n    if (this.props.round) {\n      const width = event.nativeEvent.layout.width;\n      const size = height >= width ? height : width;\n      this.setState({\n        size\n      });\n    }\n    if (Constants.isAndroid && Platform.Version <= 17) {\n      this.setState({\n        borderRadius: height / 2\n      });\n    }\n  };\n  get isOutline() {\n    const {\n      outline,\n      outlineColor\n    } = this.props;\n    return Boolean(outline || outlineColor);\n  }\n  get isLink() {\n    const {\n      link,\n      hyperlink\n    } = this.props;\n    return link || hyperlink;\n  }\n  get isFilled() {\n    return !this.isOutline && !this.isLink;\n  }\n  get isIconButton() {\n    const {\n      iconSource,\n      label\n    } = this.props;\n    return iconSource && !label;\n  }\n  getBackgroundColor() {\n    const {\n      disabled,\n      outline,\n      disabledBackgroundColor,\n      backgroundColor,\n      modifiers\n    } = this.props;\n    const {\n      backgroundColor: modifiersBackgroundColor\n    } = modifiers;\n    if (!outline && !this.isLink) {\n      if (disabled) {\n        return disabledBackgroundColor || Colors.$backgroundDisabled;\n      }\n      return backgroundColor || modifiersBackgroundColor || Colors.$backgroundPrimaryHeavy;\n    }\n    return 'transparent';\n  }\n  getActiveBackgroundColor() {\n    const {\n      getActiveBackgroundColor\n    } = this.props;\n    if (getActiveBackgroundColor) {\n      return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n    }\n  }\n  getLabelColor() {\n    const {\n      linkColor,\n      outline,\n      outlineColor,\n      disabled,\n      color: propsColor,\n      backgroundColor,\n      modifiers\n    } = this.props;\n    const {\n      color: modifiersColor\n    } = modifiers;\n    const isLink = this.isLink;\n    let color = Colors.$textDefaultLight;\n    if (isLink) {\n      color = linkColor || Colors.$textPrimary;\n    } else if (outline) {\n      color = outlineColor || Colors.$textPrimary;\n    } else if (this.isIconButton) {\n      color = backgroundColor === 'transparent' ? undefined : Colors.$iconDefaultLight;\n    }\n    if (disabled && (isLink || outline)) {\n      return Colors.$textDisabled;\n    }\n    color = propsColor || modifiersColor || color;\n    return color;\n  }\n  getLabelSizeStyle() {\n    const size = this.props.size || DEFAULT_SIZE;\n    const LABEL_STYLE_BY_SIZE = {};\n    LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = Typography.text80;\n    LABEL_STYLE_BY_SIZE[Button.sizes.small] = Typography.text80;\n    LABEL_STYLE_BY_SIZE[Button.sizes.medium] = Typography.text80;\n    LABEL_STYLE_BY_SIZE[Button.sizes.large] = undefined;\n    const labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n    return labelSizeStyle;\n  }\n  getContainerSizeStyle() {\n    const {\n      outline,\n      avoidMinWidth,\n      avoidInnerPadding,\n      round,\n      size: propsSize,\n      outlineWidth: propsOutlineWidth\n    } = this.props;\n    const size = propsSize || DEFAULT_SIZE;\n    const outlineWidth = propsOutlineWidth || 1;\n    const CONTAINER_STYLE_BY_SIZE = {};\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.XSMALL\n    } : {\n      paddingVertical: PADDINGS.XSMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n      minWidth: MIN_WIDTH.XSMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.SMALL\n    } : {\n      paddingVertical: PADDINGS.SMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n      minWidth: MIN_WIDTH.SMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.MEDIUM\n    } : {\n      paddingVertical: PADDINGS.MEDIUM,\n      paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n      minWidth: MIN_WIDTH.MEDIUM\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.LARGE\n    } : {\n      paddingVertical: PADDINGS.LARGE,\n      paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n      minWidth: MIN_WIDTH.LARGE\n    };\n    if (outline) {\n      _forEach(CONTAINER_STYLE_BY_SIZE, style => {\n        if (round) {\n          style.padding -= outlineWidth; // eslint-disable-line\n        } else {\n          style.paddingVertical -= outlineWidth; // eslint-disable-line\n          style.paddingHorizontal -= outlineWidth; // eslint-disable-line\n        }\n      });\n    }\n\n    const containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n    if (this.isLink || this.isIconButton && !round) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n      containerSizeStyle.minWidth = undefined;\n    }\n    if (avoidMinWidth) {\n      containerSizeStyle.minWidth = undefined;\n    }\n    if (avoidInnerPadding) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n    }\n    return containerSizeStyle;\n  }\n  getOutlineStyle() {\n    const {\n      outline,\n      outlineColor,\n      outlineWidth,\n      disabled\n    } = this.props;\n    let outlineStyle;\n    if ((outline || outlineColor) && !this.isLink) {\n      outlineStyle = {\n        borderWidth: outlineWidth || 1,\n        borderColor: outlineColor || Colors.$outlinePrimary\n      };\n      if (disabled) {\n        outlineStyle.borderColor = Colors.$outlineDisabled;\n      }\n    }\n    return outlineStyle;\n  }\n  getBorderRadiusStyle() {\n    const {\n      fullWidth,\n      borderRadius: propsBorderRadius,\n      modifiers\n    } = this.props;\n    const {\n      borderRadius: modifiersBorderRadius\n    } = modifiers;\n    if (this.isLink || fullWidth || propsBorderRadius === 0) {\n      return {\n        borderRadius: 0\n      };\n    }\n    const borderRadius = propsBorderRadius || modifiersBorderRadius || BorderRadiuses.br100;\n    return {\n      borderRadius\n    };\n  }\n  getShadowStyle() {\n    const backgroundColor = this.getBackgroundColor();\n    const {\n      enableShadow\n    } = this.props;\n    if (enableShadow) {\n      return [this.styles.shadowStyle, {\n        shadowColor: backgroundColor\n      }];\n    }\n  }\n  getIconStyle() {\n    const {\n      disabled,\n      iconStyle: propsIconStyle,\n      iconOnRight,\n      size: propsSize\n    } = this.props;\n    const size = propsSize || DEFAULT_SIZE;\n    const iconStyle = {\n      tintColor: this.getLabelColor()\n    };\n    const marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n    if (!this.isIconButton) {\n      if (iconOnRight) {\n        iconStyle.marginLeft = marginSide;\n      } else {\n        iconStyle.marginRight = marginSide;\n      }\n    }\n    if (disabled && !this.isFilled) {\n      iconStyle.tintColor = Colors.$iconDisabled;\n    }\n    return [iconStyle, propsIconStyle];\n  }\n  getAnimationDirectionStyle() {\n    const {\n      animateTo\n    } = this.props;\n    let style;\n    switch (animateTo) {\n      case 'left':\n        style = {\n          alignSelf: 'flex-start'\n        };\n        break;\n      case 'right':\n        style = {\n          alignSelf: 'flex-end'\n        };\n        break;\n      default:\n        // 'center' is the default\n        break;\n    }\n    return style;\n  }\n  renderIcon() {\n    const {\n      iconSource,\n      supportRTL,\n      testID\n    } = this.props;\n    if (iconSource) {\n      const iconStyle = this.getIconStyle();\n      if (typeof iconSource === 'function') {\n        return iconSource(iconStyle);\n      } else {\n        return <Image source={iconSource} supportRTL={supportRTL} style={iconStyle} testID={`${testID}.icon`} />;\n      }\n    }\n    return null;\n  }\n  renderLabel() {\n    const {\n      label,\n      labelStyle,\n      labelProps,\n      hyperlink,\n      testID,\n      modifiers\n    } = this.props;\n    const color = this.getLabelColor();\n    const labelSizeStyle = this.getLabelSizeStyle();\n    const {\n      typography\n    } = modifiers;\n    if (label) {\n      return <Text style={[this.styles.text, !!color && {\n        color\n      }, labelSizeStyle, typography, labelStyle]} underline={hyperlink} numberOfLines={1} testID={`${testID}.label`} {...labelProps}>\n          {label}\n        </Text>;\n    }\n    return null;\n  }\n  render() {\n    const {\n      onPress,\n      disabled,\n      style,\n      testID,\n      animateLayout,\n      modifiers,\n      forwardedRef,\n      ...others\n    } = this.props;\n    const shadowStyle = this.getShadowStyle();\n    const {\n      margins,\n      paddings\n    } = modifiers;\n    const backgroundColor = this.getBackgroundColor();\n    const outlineStyle = this.getOutlineStyle();\n    const containerSizeStyle = this.getContainerSizeStyle();\n    const borderRadiusStyle = this.getBorderRadiusStyle();\n    return <TouchableOpacity row centerV style={[this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, this.isLink && this.styles.innerContainerLink, shadowStyle, margins, paddings, {\n      backgroundColor\n    }, borderRadiusStyle, outlineStyle, style]} activeOpacity={0.6} activeBackgroundColor={this.getActiveBackgroundColor()} onLayout={this.onLayout} onPress={onPress} disabled={disabled} testID={testID} {...others} ref={forwardedRef}>\n        {this.props.children}\n        {this.props.iconOnRight ? this.renderLabel() : this.renderIcon()}\n        {this.props.iconOnRight ? this.renderIcon() : this.renderLabel()}\n      </TouchableOpacity>;\n  }\n}\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: {\n      backgroundColor: 'transparent',\n      flexDirection: 'row',\n      ...Typography.text70\n    }\n  });\n}\nexport { Button }; // For tests\n\nconst modifiersOptions = {\n  paddings: true,\n  margins: true,\n  borderRadius: true,\n  backgroundColor: true,\n  typography: true,\n  color: true\n};\nexport default asBaseComponent(forwardRef(Button), {\n  modifiersOptions\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}