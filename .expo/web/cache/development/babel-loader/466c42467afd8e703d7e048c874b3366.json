{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Constants } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Thumb from \"./Thumb\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TRACK_SIZE = 6;\nvar THUMB_SIZE = 24;\nvar SHADOW_RADIUS = 4;\nvar DEFAULT_COLOR = Colors.$backgroundDisabled;\nvar ACTIVE_COLOR = Colors.$backgroundPrimaryHeavy;\nvar INACTIVE_COLOR = Colors.$backgroundNeutralMedium;\nvar MIN_RANGE_GAP = 4;\nvar defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  thumbHitSlop: {\n    top: 10,\n    bottom: 10,\n    left: 24,\n    right: 24\n  },\n  useGap: true\n};\nvar Slider = function (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n  var _super = _createSuper(Slider);\n  function Slider(props) {\n    var _this;\n    _classCallCheck(this, Slider);\n    _this = _super.call(this, props);\n    _this.thumb = React.createRef();\n    _this.minThumb = React.createRef();\n    _this.minTrack = React.createRef();\n    _this._minTrackStyles = {};\n    _this._x = 0;\n    _this._x_min = 0;\n    _this.lastDx = 0;\n    _this.initialValue = _this.getRoundedValue(_this.getInitialValue());\n    _this.minInitialValue = _this.getRoundedValue(_this.props.initialMinimumValue || _this.props.minimumValue);\n    _this.lastValue = _this.initialValue;\n    _this.lastMinValue = _this.minInitialValue;\n    _this._thumbStyles = {};\n    _this._minThumbStyles = {\n      left: _this.minInitialValue\n    };\n    _this.initialThumbSize = {\n      width: THUMB_SIZE,\n      height: THUMB_SIZE\n    };\n    _this.handleMoveShouldSetPanResponder = function () {\n      return true;\n    };\n    _this.handlePanResponderGrant = function () {\n      _this.lastDx = 0;\n      _this.onSeekStart();\n    };\n    _this.handlePanResponderMove = function (_e, gestureState) {\n      var disabled = _this.props.disabled;\n      if (disabled) {\n        return;\n      }\n      var dx = gestureState.dx * (Constants.isRTL && !_this.disableRTL ? -1 : 1);\n      _this.update(dx - _this.lastDx);\n      _this.lastDx = dx;\n    };\n    _this.handlePanResponderEnd = function () {\n      _this.bounceToStep();\n      _this.onSeekEnd();\n    };\n    _this.setActiveThumb = function (ref) {\n      _this.activeThumbRef = ref;\n    };\n    _this.updateTrackStepAndStyle = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var _this$props = _this.props,\n        step = _this$props.step,\n        useRange = _this$props.useRange;\n      var trackSize = _this.state.trackSize;\n      var newX = Constants.isRTL && !_this.disableRTL ? trackSize.width - nativeEvent.locationX : nativeEvent.locationX;\n      if (useRange) {\n        var _this$_minThumbStyles, _this$_minThumbStyles2;\n        if (_this.isDefaultThumbActive() && (_this$_minThumbStyles = _this._minThumbStyles) != null && _this$_minThumbStyles.left && newX < ((_this$_minThumbStyles2 = _this._minThumbStyles) == null ? void 0 : _this$_minThumbStyles2.left)) {\n          _this.setActiveThumb(_this.minThumb);\n        } else if (!_this.isDefaultThumbActive() && _this._thumbStyles.left && newX > _this._thumbStyles.left) {\n          _this.setActiveThumb(_this.thumb);\n        }\n      }\n      _this.set_x(newX);\n      if (!useRange) {\n        _this.updateValue(_this.get_x());\n      }\n      if (step > 0) {\n        _this.bounceToStep();\n      } else {\n        _this.moveTo(_this.get_x());\n      }\n    };\n    _this.shouldForceLTR = Constants.isRTL && _this.disableRTL;\n    _this.isDefaultThumbActive = function () {\n      return _this.activeThumbRef === _this.thumb;\n    };\n    _this.onOrientationChanged = function () {\n      _this.initialValue = _this.lastValue;\n      _this.minInitialValue = _this.lastMinValue;\n      _this.setState({\n        measureCompleted: false\n      });\n    };\n    _this.onRangeChange = function (value) {\n      if (_this.isDefaultThumbActive()) {\n        _this.lastValue = value;\n      } else {\n        _this.lastMinValue = value;\n      }\n      var values = {\n        min: _this.lastMinValue,\n        max: _this.lastValue\n      };\n      if (Constants.isRTL && _this.props.disableRTL) {\n        var maximumValue = _this.props.maximumValue;\n        values = {\n          min: maximumValue - _this.lastValue,\n          max: maximumValue - _this.lastMinValue\n        };\n      }\n      _this.props.onRangeChange == null ? void 0 : _this.props.onRangeChange(values);\n    };\n    _this.onValueChange = function (value) {\n      _this.lastValue = value;\n      _this.props.onValueChange == null ? void 0 : _this.props.onValueChange(value);\n    };\n    _this.onContainerLayout = function (nativeEvent) {\n      _this.handleMeasure('containerSize', nativeEvent);\n    };\n    _this.onTrackLayout = function (nativeEvent) {\n      _this.setState({\n        measureCompleted: false\n      });\n      _this.handleMeasure('trackSize', nativeEvent);\n    };\n    _this.onThumbLayout = function (nativeEvent) {\n      _this.handleMeasure('thumbSize', nativeEvent);\n    };\n    _this.handleTrackPress = function (event) {\n      if (_this.props.disabled) {\n        return;\n      }\n      _this.onSeekStart();\n      _this.updateTrackStepAndStyle(event);\n      _this.onSeekEnd();\n    };\n    _this.handleMeasure = function (name, _ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      var _nativeEvent$layout = nativeEvent.layout,\n        width = _nativeEvent$layout.width,\n        height = _nativeEvent$layout.height;\n      var size = {\n        width: width,\n        height: height\n      };\n      var currentSize = _this[name];\n      if (currentSize && width === currentSize.width && height === currentSize.height) {\n        return;\n      }\n      _this[name] = size;\n      if (_this.containerSize && _this.thumbSize && _this.trackSize) {\n        _this.setState({\n          containerSize: _this.containerSize,\n          trackSize: _this.trackSize,\n          thumbSize: _this.thumbSize\n        }, function () {\n          _this.setState({\n            measureCompleted: true\n          });\n        });\n      }\n    };\n    _this.onAccessibilityAction = function (event) {\n      var _this$props2 = _this.props,\n        maximumValue = _this$props2.maximumValue,\n        minimumValue = _this$props2.minimumValue,\n        step = _this$props2.step;\n      var value = _this.getValueForX(_this._x);\n      var newValue;\n      switch (event.nativeEvent.actionName) {\n        case 'increment':\n          newValue = value !== maximumValue ? value + step : value;\n          break;\n        case 'decrement':\n          newValue = value !== minimumValue ? value - step : value;\n          break;\n        default:\n          newValue = value;\n          break;\n      }\n      _this._x = _this.getXForValue(newValue);\n      _this.updateValue(_this._x);\n      _this.moveTo(_this._x);\n      AccessibilityInfo.announceForAccessibility == null ? void 0 : AccessibilityInfo.announceForAccessibility(\"New value \" + newValue);\n    };\n    _this.onMinTouchStart = function () {\n      _this.setActiveThumb(_this.minThumb);\n    };\n    _this.onTouchStart = function () {\n      _this.setActiveThumb(_this.thumb);\n    };\n    _this.getThumbProps = function () {\n      var _this$props3 = _this.props,\n        thumbStyle = _this$props3.thumbStyle,\n        activeThumbStyle = _this$props3.activeThumbStyle,\n        disableActiveStyling = _this$props3.disableActiveStyling,\n        disabled = _this$props3.disabled,\n        thumbTintColor = _this$props3.thumbTintColor,\n        thumbHitSlop = _this$props3.thumbHitSlop;\n      return {\n        disabled: disabled,\n        thumbTintColor: thumbTintColor,\n        thumbStyle: thumbStyle,\n        activeThumbStyle: activeThumbStyle,\n        disableActiveStyling: disableActiveStyling,\n        thumbHitSlop: thumbHitSlop,\n        onLayout: _this.onThumbLayout\n      };\n    };\n    _this.renderMinThumb = function () {\n      return _jsx(Thumb, _objectSpread(_objectSpread({}, _this.getThumbProps()), {}, {\n        ref: _this.minThumb,\n        onTouchStart: _this.onMinTouchStart\n      }, _this.panResponder.panHandlers));\n    };\n    _this.renderThumb = function () {\n      return _jsx(Thumb, _objectSpread(_objectSpread({}, _this.getThumbProps()), {}, {\n        ref: _this.thumb,\n        onTouchStart: _this.onTouchStart\n      }, _this.panResponder.panHandlers));\n    };\n    _this.activeThumbRef = _this.thumb;\n    _this.didMount = false;\n    _this.state = {\n      containerSize: {\n        width: 0,\n        height: 0\n      },\n      trackSize: {\n        width: 0,\n        height: 0\n      },\n      thumbSize: {\n        width: 0,\n        height: 0\n      },\n      thumbActiveAnimation: new Animated.Value(1),\n      measureCompleted: false\n    };\n    _this.checkProps(props);\n    _this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: _this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: _this.handlePanResponderGrant,\n      onPanResponderMove: _this.handlePanResponderMove,\n      onPanResponderRelease: _this.handlePanResponderEnd,\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderEnd: function onPanResponderEnd() {\n        return true;\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n        return false;\n      }\n    });\n    return _this;\n  }\n  _createClass(Slider, [{\n    key: \"reset\",\n    value: function reset() {\n      var _this$props$onReset, _this$props4;\n      this.lastValue = this.initialValue;\n      this.lastMinValue = this.minInitialValue;\n      this.lastDx = 0;\n      this.setActiveThumb(this.thumb);\n      this.set_x(this.getXForValue(this.initialValue));\n      this.moveTo(this._x);\n      if (this.props.useRange) {\n        this.setActiveThumb(this.minThumb);\n        this.set_x(this.getXForValue(this.minInitialValue));\n        this.moveMinTo(this._x_min);\n      }\n      (_this$props$onReset = (_this$props4 = this.props).onReset) == null ? void 0 : _this$props$onReset.call(_this$props4);\n    }\n  }, {\n    key: \"getInitialValue\",\n    value: function getInitialValue() {\n      var _this$props5 = this.props,\n        useRange = _this$props5.useRange,\n        initialMaximumValue = _this$props5.initialMaximumValue,\n        value = _this$props5.value,\n        maximumValue = _this$props5.maximumValue;\n      return useRange ? initialMaximumValue || maximumValue : value;\n    }\n  }, {\n    key: \"checkProps\",\n    value: function checkProps(props) {\n      if (props.minimumValue >= props.maximumValue) {\n        console.warn('Slider minimumValue must be lower than maximumValue');\n      }\n      if (props.value < props.minimumValue || props.value > props.maximumValue) {\n        console.warn('Slider value is not in range');\n      }\n    }\n  }, {\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var disabled = this.props.disabled;\n      return _objectSpread({\n        accessibilityLabel: 'Slider',\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityStates: disabled ? ['disabled'] : [],\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }]\n      }, extractAccessibilityProps(this.props));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props6 = this.props,\n        useRange = _this$props6.useRange,\n        value = _this$props6.value,\n        initialMinimumValue = _this$props6.initialMinimumValue;\n      if (!useRange && prevProps.value !== value) {\n        this.initialValue = this.getRoundedValue(value);\n        this._x = this.getXForValue(this.initialValue);\n        this.moveTo(this._x);\n      }\n      if (prevState.measureCompleted !== this.state.measureCompleted) {\n        this.initialThumbSize = this.state.thumbSize;\n        this._x = this.getXForValue(this.initialValue);\n        this._x_min = this.getXForValue(this.minInitialValue);\n        this.moveTo(this._x);\n        if (useRange && initialMinimumValue) {\n          this.moveMinTo(this._x_min);\n        }\n        this.didMount = true;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n    }\n  }, {\n    key: \"get_x\",\n    value: function get_x() {\n      if (this.isDefaultThumbActive()) {\n        return this._x;\n      } else {\n        return this._x_min;\n      }\n    }\n  }, {\n    key: \"set_x\",\n    value: function set_x(x) {\n      if (this.isDefaultThumbActive()) {\n        this._x = x;\n      } else {\n        this._x_min = x;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dx) {\n      var x = this.get_x();\n      x += dx;\n      x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n      this.set_x(x);\n      this.moveTo(x);\n      if (!this.props.useRange) {\n        this.updateValue(x);\n      }\n    }\n  }, {\n    key: \"bounceToStep\",\n    value: function bounceToStep() {\n      if (this.props.step > 0) {\n        var value = this.getValueForX(this.get_x());\n        var roundedValue = this.getRoundedValue(value);\n        var x = this.getXForValue(roundedValue);\n        this.set_x(x);\n        this.moveTo(x);\n      }\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(x) {\n      var value = this.getValueForX(x);\n      if (this.props.useRange) {\n        this.onRangeChange(value);\n      } else {\n        this.onValueChange(value);\n      }\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x) {\n      if (this.isDefaultThumbActive()) {\n        if (this.thumb.current) {\n          var _this$minTrack$curren;\n          var _this$props7 = this.props,\n            useRange = _this$props7.useRange,\n            useGap = _this$props7.useGap;\n          var _this$state = this.state,\n            trackSize = _this$state.trackSize,\n            thumbSize = _this$state.thumbSize;\n          var nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n          var _x = this.shouldForceLTR ? trackSize.width - x : x;\n          var left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width;\n          if (useRange) {\n            var _this$_minThumbStyles3;\n            var minThumbPosition = (_this$_minThumbStyles3 = this._minThumbStyles) == null ? void 0 : _this$_minThumbStyles3.left;\n            if (useGap && left > minThumbPosition + thumbSize.width + MIN_RANGE_GAP || !useGap && left >= minThumbPosition) {\n              this._thumbStyles.left = left;\n              var width = left - minThumbPosition;\n              this._minTrackStyles.width = width;\n              if (this.didMount) {\n                this.updateValue(x);\n              }\n            }\n          } else {\n            this._thumbStyles.left = left;\n            this._minTrackStyles.width = Math.min(trackSize.width, x);\n          }\n          this.thumb.current.setNativeProps(this._thumbStyles);\n          (_this$minTrack$curren = this.minTrack.current) == null ? void 0 : _this$minTrack$curren.setNativeProps(this._minTrackStyles);\n        }\n      } else {\n        this.moveMinTo(x);\n      }\n    }\n  }, {\n    key: \"moveMinTo\",\n    value: function moveMinTo(x) {\n      var useGap = this.props.useGap;\n      var _this$state2 = this.state,\n        trackSize = _this$state2.trackSize,\n        thumbSize = _this$state2.thumbSize;\n      if (this.minThumb.current) {\n        var _this$_thumbStyles;\n        var nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n        var _x = this.shouldForceLTR ? nonOverlappingTrackWidth - x : x;\n        var left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width;\n        var maxThumbPosition = (_this$_thumbStyles = this._thumbStyles) == null ? void 0 : _this$_thumbStyles.left;\n        if (useGap && left < maxThumbPosition - thumbSize.width - MIN_RANGE_GAP || !useGap && left <= maxThumbPosition) {\n          var _this$minThumb$curren, _this$minTrack$curren2;\n          this._minThumbStyles.left = left;\n          this._minTrackStyles.width = maxThumbPosition - x;\n          this._minTrackStyles.left = x;\n          (_this$minThumb$curren = this.minThumb.current) == null ? void 0 : _this$minThumb$curren.setNativeProps(this._minThumbStyles);\n          (_this$minTrack$curren2 = this.minTrack.current) == null ? void 0 : _this$minTrack$curren2.setNativeProps(this._minTrackStyles);\n          if (this.didMount) {\n            this.updateValue(x);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"disableRTL\",\n    get: function get() {\n      var _this$props8 = this.props,\n        disableRTL = _this$props8.disableRTL,\n        useRange = _this$props8.useRange;\n      if (useRange) {\n        return false;\n      }\n      return disableRTL;\n    }\n  }, {\n    key: \"getRoundedValue\",\n    value: function getRoundedValue(value) {\n      var step = this.props.step;\n      var v = this.getValueInRange(value);\n      return step > 0 ? Math.round(v / step) * step : v;\n    }\n  }, {\n    key: \"getValueInRange\",\n    value: function getValueInRange(value) {\n      var _this$props9 = this.props,\n        minimumValue = _this$props9.minimumValue,\n        maximumValue = _this$props9.maximumValue;\n      var v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n      return v;\n    }\n  }, {\n    key: \"getXForValue\",\n    value: function getXForValue(value) {\n      var minimumValue = this.props.minimumValue;\n      var range = this.getRange();\n      var relativeValue = minimumValue - value;\n      var v = minimumValue < 0 ? Math.abs(relativeValue) : value - minimumValue;\n      var ratio = v / range;\n      var x = ratio * this.state.trackSize.width;\n      return x;\n    }\n  }, {\n    key: \"getValueForX\",\n    value: function getValueForX(x) {\n      var _this$props10 = this.props,\n        maximumValue = _this$props10.maximumValue,\n        minimumValue = _this$props10.minimumValue,\n        step = _this$props10.step;\n      var ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n      var range = this.getRange();\n      if (step) {\n        return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round(ratio * range / step) * step));\n      } else {\n        return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n      }\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var _this$props11 = this.props,\n        minimumValue = _this$props11.minimumValue,\n        maximumValue = _this$props11.maximumValue;\n      var range = maximumValue - minimumValue;\n      return range;\n    }\n  }, {\n    key: \"onSeekStart\",\n    value: function onSeekStart() {\n      var _this$props$onSeekSta, _this$props12;\n      (_this$props$onSeekSta = (_this$props12 = this.props).onSeekStart) == null ? void 0 : _this$props$onSeekSta.call(_this$props12);\n    }\n  }, {\n    key: \"onSeekEnd\",\n    value: function onSeekEnd() {\n      var _this$props$onSeekEnd, _this$props13;\n      (_this$props$onSeekEnd = (_this$props13 = this.props).onSeekEnd) == null ? void 0 : _this$props$onSeekEnd.call(_this$props13);\n    }\n  }, {\n    key: \"renderTrack\",\n    value: function renderTrack() {\n      var _this$props14 = this.props,\n        trackStyle = _this$props14.trackStyle,\n        renderTrack = _this$props14.renderTrack,\n        disabled = _this$props14.disabled,\n        _this$props14$minimum = _this$props14.minimumTrackTintColor,\n        minimumTrackTintColor = _this$props14$minimum === void 0 ? ACTIVE_COLOR : _this$props14$minimum,\n        _this$props14$maximum = _this$props14.maximumTrackTintColor,\n        maximumTrackTintColor = _this$props14$maximum === void 0 ? DEFAULT_COLOR : _this$props14$maximum;\n      return _isFunction(renderTrack) ? _jsx(View, {\n        style: [styles.track, {\n          backgroundColor: maximumTrackTintColor\n        }, trackStyle],\n        onLayout: this.onTrackLayout,\n        children: renderTrack()\n      }) : _jsxs(View, {\n        children: [_jsx(View, {\n          style: [styles.track, trackStyle, {\n            backgroundColor: disabled ? INACTIVE_COLOR : maximumTrackTintColor\n          }],\n          onLayout: this.onTrackLayout\n        }), _jsx(View, {\n          ref: this.minTrack,\n          style: [styles.track, trackStyle, styles.minimumTrack, this.shouldForceLTR && styles.trackDisableRTL, {\n            backgroundColor: disabled ? DEFAULT_COLOR : minimumTrackTintColor\n          }]\n        })]\n      });\n    }\n  }, {\n    key: \"renderRangeThumb\",\n    value: function renderRangeThumb() {\n      var _this$props15 = this.props,\n        useRange = _this$props15.useRange,\n        useGap = _this$props15.useGap;\n      if (useRange) {\n        if (useGap) {\n          return this.renderMinThumb();\n        }\n        return _jsx(View, {\n          style: {\n            zIndex: this.isDefaultThumbActive() ? 0 : 1,\n            top: '-50%'\n          },\n          children: this.renderMinThumb()\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props16 = this.props,\n        containerStyle = _this$props16.containerStyle,\n        testID = _this$props16.testID;\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: [styles.container, containerStyle],\n        onLayout: this.onContainerLayout,\n        onAccessibilityAction: this.onAccessibilityAction,\n        testID: testID\n      }, this.getAccessibilityProps()), {}, {\n        children: [this.renderTrack(), _jsx(View, {\n          style: styles.touchArea,\n          onTouchEnd: this.handleTrackPress\n        }), this.renderRangeThumb(), this.renderThumb()]\n      }));\n    }\n  }]);\n  return Slider;\n}(PureComponent);\nSlider.displayName = 'Slider';\nSlider.defaultProps = defaultProps;\nexport { Slider as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: THUMB_SIZE + SHADOW_RADIUS,\n    justifyContent: 'center'\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n    overflow: 'hidden'\n  },\n  minimumTrack: {\n    position: 'absolute'\n  },\n  trackDisableRTL: {\n    right: 0\n  },\n  touchArea: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'transparent'\n  })\n});","map":{"version":3,"names":["_isFunction","React","PureComponent","Constants","Colors","View","Thumb","extractAccessibilityProps","TRACK_SIZE","THUMB_SIZE","SHADOW_RADIUS","DEFAULT_COLOR","$backgroundDisabled","ACTIVE_COLOR","$backgroundPrimaryHeavy","INACTIVE_COLOR","$backgroundNeutralMedium","MIN_RANGE_GAP","defaultProps","value","minimumValue","maximumValue","step","thumbHitSlop","top","bottom","left","right","useGap","Slider","props","thumb","createRef","minThumb","minTrack","_minTrackStyles","_x","_x_min","lastDx","initialValue","getRoundedValue","getInitialValue","minInitialValue","initialMinimumValue","lastValue","lastMinValue","_thumbStyles","_minThumbStyles","initialThumbSize","width","height","handleMoveShouldSetPanResponder","handlePanResponderGrant","onSeekStart","handlePanResponderMove","_e","gestureState","disabled","dx","isRTL","disableRTL","update","handlePanResponderEnd","bounceToStep","onSeekEnd","setActiveThumb","ref","activeThumbRef","updateTrackStepAndStyle","nativeEvent","useRange","trackSize","state","newX","locationX","isDefaultThumbActive","set_x","updateValue","get_x","moveTo","shouldForceLTR","onOrientationChanged","setState","measureCompleted","onRangeChange","values","min","max","onValueChange","onContainerLayout","handleMeasure","onTrackLayout","onThumbLayout","handleTrackPress","event","name","layout","size","currentSize","containerSize","thumbSize","onAccessibilityAction","getValueForX","newValue","actionName","getXForValue","AccessibilityInfo","announceForAccessibility","onMinTouchStart","onTouchStart","getThumbProps","thumbStyle","activeThumbStyle","disableActiveStyling","thumbTintColor","onLayout","renderMinThumb","panResponder","panHandlers","renderThumb","didMount","thumbActiveAnimation","Animated","Value","checkProps","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onStartShouldSetPanResponder","onPanResponderEnd","onPanResponderTerminationRequest","moveMinTo","onReset","initialMaximumValue","console","warn","accessibilityLabel","accessible","accessibilityRole","accessibilityStates","accessibilityActions","label","prevProps","prevState","dimensionsChangeListener","addDimensionsEventListener","removeDimensionsEventListener","x","Math","roundedValue","current","nonOverlappingTrackWidth","minThumbPosition","setNativeProps","maxThumbPosition","v","getValueInRange","round","range","getRange","relativeValue","abs","ratio","trackStyle","renderTrack","minimumTrackTintColor","maximumTrackTintColor","styles","track","backgroundColor","minimumTrack","trackDisableRTL","zIndex","containerStyle","testID","container","getAccessibilityProps","touchArea","renderRangeThumb","displayName","StyleSheet","justifyContent","borderRadius","overflow","position","absoluteFillObject"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/slider/index.js"],"sourcesContent":["import _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, PanResponder, AccessibilityInfo, Animated } from 'react-native';\nimport { Constants } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Thumb from \"./Thumb\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nconst TRACK_SIZE = 6;\nconst THUMB_SIZE = 24;\nconst SHADOW_RADIUS = 4;\nconst DEFAULT_COLOR = Colors.$backgroundDisabled;\nconst ACTIVE_COLOR = Colors.$backgroundPrimaryHeavy;\nconst INACTIVE_COLOR = Colors.$backgroundNeutralMedium;\nconst MIN_RANGE_GAP = 4;\nconst defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  thumbHitSlop: {\n    top: 10,\n    bottom: 10,\n    left: 24,\n    right: 24\n  },\n  useGap: true\n};\n\n/**\n * @description: A Slider component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Slider/Slider.gif?raw=true\n */\nexport default class Slider extends PureComponent {\n  static displayName = 'Slider';\n  static defaultProps = defaultProps;\n  thumb = React.createRef();\n  minThumb = React.createRef();\n  minTrack = React.createRef();\n  _minTrackStyles = {};\n  _x = 0;\n  _x_min = 0;\n  lastDx = 0;\n  initialValue = this.getRoundedValue(this.getInitialValue());\n  minInitialValue = this.getRoundedValue(this.props.initialMinimumValue || this.props.minimumValue);\n  lastValue = this.initialValue;\n  lastMinValue = this.minInitialValue;\n  _thumbStyles = {};\n  _minThumbStyles = {\n    left: this.minInitialValue\n  };\n  initialThumbSize = {\n    width: THUMB_SIZE,\n    height: THUMB_SIZE\n  };\n  constructor(props) {\n    super(props);\n    this.activeThumbRef = this.thumb;\n    this.didMount = false;\n    this.state = {\n      containerSize: {\n        width: 0,\n        height: 0\n      },\n      trackSize: {\n        width: 0,\n        height: 0\n      },\n      thumbSize: {\n        width: 0,\n        height: 0\n      },\n      thumbActiveAnimation: new Animated.Value(1),\n      measureCompleted: false\n    };\n    this.checkProps(props);\n    this.panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this.handlePanResponderGrant,\n      onPanResponderMove: this.handlePanResponderMove,\n      onPanResponderRelease: this.handlePanResponderEnd,\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderEnd: () => true,\n      onPanResponderTerminationRequest: () => false\n    });\n  }\n  reset() {\n    // NOTE: used with ref\n    this.lastValue = this.initialValue;\n    this.lastMinValue = this.minInitialValue;\n    this.lastDx = 0;\n    this.setActiveThumb(this.thumb);\n    this.set_x(this.getXForValue(this.initialValue));\n    this.moveTo(this._x);\n    if (this.props.useRange) {\n      this.setActiveThumb(this.minThumb);\n      this.set_x(this.getXForValue(this.minInitialValue));\n      this.moveMinTo(this._x_min);\n    }\n    this.props.onReset?.();\n  }\n  getInitialValue() {\n    const {\n      useRange,\n      initialMaximumValue,\n      value,\n      maximumValue\n    } = this.props;\n    return useRange ? initialMaximumValue || maximumValue : value;\n  }\n  checkProps(props) {\n    if (props.minimumValue >= props.maximumValue) {\n      console.warn('Slider minimumValue must be lower than maximumValue');\n    }\n    if (props.value < props.minimumValue || props.value > props.maximumValue) {\n      console.warn('Slider value is not in range');\n    }\n  }\n  getAccessibilityProps() {\n    const {\n      disabled\n    } = this.props;\n    return {\n      accessibilityLabel: 'Slider',\n      accessible: true,\n      accessibilityRole: 'adjustable',\n      accessibilityStates: disabled ? ['disabled'] : [],\n      accessibilityActions: [{\n        name: 'increment',\n        label: 'increment'\n      }, {\n        name: 'decrement',\n        label: 'decrement'\n      }],\n      ...extractAccessibilityProps(this.props)\n    };\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      useRange,\n      value,\n      initialMinimumValue\n    } = this.props;\n    if (!useRange && prevProps.value !== value) {\n      this.initialValue = this.getRoundedValue(value);\n\n      // set position for new value\n      this._x = this.getXForValue(this.initialValue);\n      this.moveTo(this._x);\n    }\n    if (prevState.measureCompleted !== this.state.measureCompleted) {\n      this.initialThumbSize = this.state.thumbSize; // for thumb enlargement\n\n      // set initial position\n      this._x = this.getXForValue(this.initialValue);\n      this._x_min = this.getXForValue(this.minInitialValue);\n      this.moveTo(this._x);\n      if (useRange && initialMinimumValue) {\n        this.moveMinTo(this._x_min);\n      }\n      this.didMount = true;\n    }\n  }\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n  }\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n  }\n\n  /* Gesture Recognizer */\n\n  handleMoveShouldSetPanResponder = () => {\n    return true;\n  };\n  handlePanResponderGrant = () => {\n    this.lastDx = 0;\n    this.onSeekStart();\n  };\n  handlePanResponderMove = (_e, gestureState) => {\n    const {\n      disabled\n    } = this.props;\n    if (disabled) {\n      return;\n    }\n    // dx = accumulated distance since touch start\n    const dx = gestureState.dx * (Constants.isRTL && !this.disableRTL ? -1 : 1);\n    this.update(dx - this.lastDx);\n    this.lastDx = dx;\n  };\n  handlePanResponderEnd = () => {\n    this.bounceToStep();\n    this.onSeekEnd();\n  };\n\n  /* Actions */\n\n  setActiveThumb = ref => {\n    this.activeThumbRef = ref;\n  };\n  get_x() {\n    if (this.isDefaultThumbActive()) {\n      return this._x;\n    } else {\n      return this._x_min;\n    }\n  }\n  set_x(x) {\n    if (this.isDefaultThumbActive()) {\n      this._x = x;\n    } else {\n      this._x_min = x;\n    }\n  }\n  update(dx) {\n    // calc x in range (instead of: this._x += dx)\n    let x = this.get_x();\n    x += dx;\n    x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n    this.set_x(x);\n    this.moveTo(x);\n    if (!this.props.useRange) {\n      this.updateValue(x);\n    }\n  }\n  bounceToStep() {\n    if (this.props.step > 0) {\n      const value = this.getValueForX(this.get_x());\n      const roundedValue = this.getRoundedValue(value);\n      const x = this.getXForValue(roundedValue);\n      this.set_x(x);\n      this.moveTo(x);\n    }\n  }\n  updateValue(x) {\n    const value = this.getValueForX(x);\n    if (this.props.useRange) {\n      this.onRangeChange(value);\n    } else {\n      this.onValueChange(value);\n    }\n  }\n  moveTo(x) {\n    if (this.isDefaultThumbActive()) {\n      if (this.thumb.current) {\n        const {\n          useRange,\n          useGap\n        } = this.props;\n        const {\n          trackSize,\n          thumbSize\n        } = this.state;\n        const nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n        const _x = this.shouldForceLTR ? trackSize.width - x : x; // adjust for RTL\n        const left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width; // do not render above prefix\\suffix icon\\text\n\n        if (useRange) {\n          const minThumbPosition = this._minThumbStyles?.left;\n          if (useGap && left > minThumbPosition + thumbSize.width + MIN_RANGE_GAP || !useGap && left >= minThumbPosition) {\n            this._thumbStyles.left = left;\n            const width = left - minThumbPosition;\n            this._minTrackStyles.width = width;\n            if (this.didMount) {\n              this.updateValue(x);\n            }\n          }\n        } else {\n          this._thumbStyles.left = left;\n          this._minTrackStyles.width = Math.min(trackSize.width, x);\n        }\n        this.thumb.current.setNativeProps(this._thumbStyles);\n        this.minTrack.current?.setNativeProps(this._minTrackStyles);\n      }\n    } else {\n      this.moveMinTo(x);\n    }\n  }\n  moveMinTo(x) {\n    const {\n      useGap\n    } = this.props;\n    const {\n      trackSize,\n      thumbSize\n    } = this.state;\n    if (this.minThumb.current) {\n      const nonOverlappingTrackWidth = trackSize.width - this.initialThumbSize.width;\n      const _x = this.shouldForceLTR ? nonOverlappingTrackWidth - x : x; // adjust for RTL\n      const left = trackSize.width === 0 ? _x : _x * nonOverlappingTrackWidth / trackSize.width; // do not render above prefix\\suffix icon\\text\n\n      const maxThumbPosition = this._thumbStyles?.left;\n      if (useGap && left < maxThumbPosition - thumbSize.width - MIN_RANGE_GAP || !useGap && left <= maxThumbPosition) {\n        this._minThumbStyles.left = left;\n        this._minTrackStyles.width = maxThumbPosition - x;\n        this._minTrackStyles.left = x;\n        this.minThumb.current?.setNativeProps(this._minThumbStyles);\n        this.minTrack.current?.setNativeProps(this._minTrackStyles);\n        if (this.didMount) {\n          this.updateValue(x);\n        }\n      }\n    }\n  }\n  updateTrackStepAndStyle = ({\n    nativeEvent\n  }) => {\n    const {\n      step,\n      useRange\n    } = this.props;\n    const {\n      trackSize\n    } = this.state;\n    const newX = Constants.isRTL && !this.disableRTL ? trackSize.width - nativeEvent.locationX : nativeEvent.locationX;\n    if (useRange) {\n      if (this.isDefaultThumbActive() && this._minThumbStyles?.left && newX < this._minThumbStyles?.left) {\n        // new x is smaller then min but the active thumb is the max\n        this.setActiveThumb(this.minThumb);\n      } else if (!this.isDefaultThumbActive() && this._thumbStyles.left && newX > this._thumbStyles.left) {\n        // new x is bigger then max but the active thumb is the min\n        this.setActiveThumb(this.thumb);\n      }\n    }\n    this.set_x(newX);\n    if (!useRange) {\n      this.updateValue(this.get_x());\n    }\n    if (step > 0) {\n      this.bounceToStep();\n    } else {\n      this.moveTo(this.get_x());\n    }\n  };\n\n  /** Values */\n\n  get disableRTL() {\n    const {\n      disableRTL,\n      useRange\n    } = this.props;\n    if (useRange) {\n      // block forceRTL on range slider\n      return false;\n    }\n    return disableRTL;\n  }\n  shouldForceLTR = Constants.isRTL && this.disableRTL;\n  isDefaultThumbActive = () => {\n    return this.activeThumbRef === this.thumb;\n  };\n  getRoundedValue(value) {\n    const {\n      step\n    } = this.props;\n    const v = this.getValueInRange(value);\n    return step > 0 ? Math.round(v / step) * step : v;\n  }\n  getValueInRange(value) {\n    const {\n      minimumValue,\n      maximumValue\n    } = this.props;\n    const v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n    return v;\n  }\n  getXForValue(value) {\n    const {\n      minimumValue\n    } = this.props;\n    const range = this.getRange();\n    const relativeValue = minimumValue - value;\n    const v = minimumValue < 0 ? Math.abs(relativeValue) : value - minimumValue; // for negatives\n    const ratio = v / range;\n    const x = ratio * this.state.trackSize.width;\n    return x;\n  }\n  getValueForX(x) {\n    const {\n      maximumValue,\n      minimumValue,\n      step\n    } = this.props;\n    const ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n    const range = this.getRange();\n    if (step) {\n      return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round(ratio * range / step) * step));\n    } else {\n      return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n    }\n  }\n  getRange() {\n    const {\n      minimumValue,\n      maximumValue\n    } = this.props;\n    const range = maximumValue - minimumValue;\n    return range;\n  }\n\n  /* Events */\n\n  onOrientationChanged = () => {\n    this.initialValue = this.lastValue;\n    this.minInitialValue = this.lastMinValue;\n    this.setState({\n      measureCompleted: false\n    });\n  };\n  onRangeChange = value => {\n    if (this.isDefaultThumbActive()) {\n      this.lastValue = value;\n    } else {\n      this.lastMinValue = value;\n    }\n    let values = {\n      min: this.lastMinValue,\n      max: this.lastValue\n    };\n    if (Constants.isRTL && this.props.disableRTL) {\n      // forceRTL for range slider\n      const {\n        maximumValue\n      } = this.props;\n      values = {\n        min: maximumValue - this.lastValue,\n        max: maximumValue - this.lastMinValue\n      };\n    }\n    this.props.onRangeChange?.(values);\n  };\n  onValueChange = value => {\n    this.lastValue = value;\n    this.props.onValueChange?.(value);\n  };\n  onSeekStart() {\n    this.props.onSeekStart?.();\n  }\n  onSeekEnd() {\n    this.props.onSeekEnd?.();\n  }\n  onContainerLayout = nativeEvent => {\n    this.handleMeasure('containerSize', nativeEvent);\n  };\n  onTrackLayout = nativeEvent => {\n    this.setState({\n      measureCompleted: false\n    });\n    this.handleMeasure('trackSize', nativeEvent);\n  };\n  onThumbLayout = nativeEvent => {\n    this.handleMeasure('thumbSize', nativeEvent);\n  };\n  handleTrackPress = event => {\n    if (this.props.disabled) {\n      return;\n    }\n    this.onSeekStart();\n    this.updateTrackStepAndStyle(event);\n    this.onSeekEnd();\n  };\n  handleMeasure = (name, {\n    nativeEvent\n  }) => {\n    const {\n      width,\n      height\n    } = nativeEvent.layout;\n    const size = {\n      width,\n      height\n    };\n    const currentSize = this[name];\n    if (currentSize && width === currentSize.width && height === currentSize.height) {\n      return;\n    }\n    this[name] = size;\n    if (this.containerSize && this.thumbSize && this.trackSize) {\n      this.setState({\n        containerSize: this.containerSize,\n        trackSize: this.trackSize,\n        thumbSize: this.thumbSize\n      }, () => {\n        this.setState({\n          measureCompleted: true\n        });\n      });\n    }\n  };\n  onAccessibilityAction = event => {\n    const {\n      maximumValue,\n      minimumValue,\n      step\n    } = this.props;\n    const value = this.getValueForX(this._x);\n    let newValue;\n    switch (event.nativeEvent.actionName) {\n      case 'increment':\n        newValue = value !== maximumValue ? value + step : value;\n        break;\n      case 'decrement':\n        newValue = value !== minimumValue ? value - step : value;\n        break;\n      default:\n        newValue = value;\n        break;\n    }\n    this._x = this.getXForValue(newValue);\n    this.updateValue(this._x);\n    this.moveTo(this._x);\n    AccessibilityInfo.announceForAccessibility?.(`New value ${newValue}`);\n  };\n  onMinTouchStart = () => {\n    this.setActiveThumb(this.minThumb);\n  };\n  onTouchStart = () => {\n    this.setActiveThumb(this.thumb);\n  };\n  getThumbProps = () => {\n    const {\n      thumbStyle,\n      activeThumbStyle,\n      disableActiveStyling,\n      disabled,\n      thumbTintColor,\n      thumbHitSlop\n    } = this.props;\n    return {\n      disabled,\n      thumbTintColor,\n      thumbStyle,\n      activeThumbStyle,\n      disableActiveStyling,\n      thumbHitSlop,\n      onLayout: this.onThumbLayout\n    };\n  };\n\n  /* Renders */\n  renderMinThumb = () => {\n    return <Thumb {...this.getThumbProps()} ref={this.minThumb} onTouchStart={this.onMinTouchStart} {...this.panResponder.panHandlers} />;\n  };\n  renderThumb = () => {\n    return <Thumb {...this.getThumbProps()} ref={this.thumb} onTouchStart={this.onTouchStart} {...this.panResponder.panHandlers} />;\n  };\n  renderTrack() {\n    const {\n      trackStyle,\n      renderTrack,\n      disabled,\n      minimumTrackTintColor = ACTIVE_COLOR,\n      maximumTrackTintColor = DEFAULT_COLOR\n    } = this.props;\n    return _isFunction(renderTrack) ? <View style={[styles.track, {\n      backgroundColor: maximumTrackTintColor\n    }, trackStyle]} onLayout={this.onTrackLayout}>\n          {renderTrack()}\n        </View> : <View>\n          <View style={[styles.track, trackStyle, {\n        backgroundColor: disabled ? INACTIVE_COLOR : maximumTrackTintColor\n      }]} onLayout={this.onTrackLayout} />\n          <View ref={this.minTrack} style={[styles.track, trackStyle, styles.minimumTrack, this.shouldForceLTR && styles.trackDisableRTL, {\n        backgroundColor: disabled ? DEFAULT_COLOR : minimumTrackTintColor\n      }]} />\n        </View>;\n  }\n  renderRangeThumb() {\n    const {\n      useRange,\n      useGap\n    } = this.props;\n    if (useRange) {\n      if (useGap) {\n        return this.renderMinThumb();\n      }\n      return <View style={{\n        zIndex: this.isDefaultThumbActive() ? 0 : 1,\n        top: '-50%'\n      }}>\n          {this.renderMinThumb()}\n        </View>;\n    }\n  }\n  render() {\n    const {\n      containerStyle,\n      testID\n    } = this.props;\n    return <View style={[styles.container, containerStyle]} onLayout={this.onContainerLayout} onAccessibilityAction={this.onAccessibilityAction} testID={testID} {...this.getAccessibilityProps()}>\n        {this.renderTrack()}\n        <View style={styles.touchArea} onTouchEnd={this.handleTrackPress} />\n        {this.renderRangeThumb()}\n        {this.renderThumb()}\n      </View>;\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    height: THUMB_SIZE + SHADOW_RADIUS,\n    justifyContent: 'center'\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n    overflow: 'hidden'\n  },\n  minimumTrack: {\n    position: 'absolute'\n  },\n  trackDisableRTL: {\n    right: 0\n  },\n  touchArea: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'transparent'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}