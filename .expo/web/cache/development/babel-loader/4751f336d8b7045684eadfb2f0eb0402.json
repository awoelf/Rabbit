{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport { EmailValidator } from 'commons-validator-js';\nvar urlRegEx = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar decimalNumberRegEx = /^-?\\d+[.,]?\\d+$/;\nvar integerRegEx = /^-?\\d*$/;\nvar priceRegEx = /^[0-9]{1,9}([.][0-9]{1,2})?$/;\nvar validators = {\n  required: function required() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return !_isEmpty(value);\n  },\n  email: function email() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return new EmailValidator().isValid(value);\n  },\n  url: function url() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return urlRegEx.test(value);\n  },\n  number: function number() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return integerRegEx.test(value) || decimalNumberRegEx.test(value);\n  },\n  price: function price() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return priceRegEx.test(value);\n  }\n};\nexport default validators;","map":{"version":3,"names":["_isEmpty","EmailValidator","urlRegEx","decimalNumberRegEx","integerRegEx","priceRegEx","validators","required","value","email","isValid","url","test","number","price"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/incubator/TextField/validators.js"],"sourcesContent":["import _isEmpty from \"lodash/isEmpty\";\nimport { EmailValidator } from 'commons-validator-js';\nconst urlRegEx = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i; //eslint-disable-line\nconst decimalNumberRegEx = /^-?\\d+[.,]?\\d+$/;\nconst integerRegEx = /^-?\\d*$/; // allows empty string\nconst priceRegEx = /^[0-9]{1,9}([.][0-9]{1,2})?$/;\nconst validators = {\n  required: (value = '') => !_isEmpty(value),\n  email: (value = '') => new EmailValidator().isValid(value),\n  url: (value = '') => urlRegEx.test(value),\n  number: (value = '') => integerRegEx.test(value) || decimalNumberRegEx.test(value),\n  price: (value = '') => priceRegEx.test(value)\n};\nexport default validators;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,IAAMC,QAAQ,GAAG,yaAAya;AAC1b,IAAMC,kBAAkB,GAAG,iBAAiB;AAC5C,IAAMC,YAAY,GAAG,SAAS;AAC9B,IAAMC,UAAU,GAAG,8BAA8B;AACjD,IAAMC,UAAU,GAAG;EACjBC,QAAQ,EAAE;IAAA,IAACC,KAAK,uEAAG,EAAE;IAAA,OAAK,CAACR,QAAQ,CAACQ,KAAK,CAAC;EAAA;EAC1CC,KAAK,EAAE;IAAA,IAACD,KAAK,uEAAG,EAAE;IAAA,OAAK,IAAIP,cAAc,EAAE,CAACS,OAAO,CAACF,KAAK,CAAC;EAAA;EAC1DG,GAAG,EAAE;IAAA,IAACH,KAAK,uEAAG,EAAE;IAAA,OAAKN,QAAQ,CAACU,IAAI,CAACJ,KAAK,CAAC;EAAA;EACzCK,MAAM,EAAE;IAAA,IAACL,KAAK,uEAAG,EAAE;IAAA,OAAKJ,YAAY,CAACQ,IAAI,CAACJ,KAAK,CAAC,IAAIL,kBAAkB,CAACS,IAAI,CAACJ,KAAK,CAAC;EAAA;EAClFM,KAAK,EAAE;IAAA,IAACN,KAAK,uEAAG,EAAE;IAAA,OAAKH,UAAU,CAACO,IAAI,CAACJ,KAAK,CAAC;EAAA;AAC/C,CAAC;AACD,eAAeF,UAAU"},"metadata":{},"sourceType":"module"}