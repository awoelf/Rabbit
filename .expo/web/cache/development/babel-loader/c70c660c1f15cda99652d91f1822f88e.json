{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport _noop from \"lodash/noop\";\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Constants } from \"../../commons/new\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport PanningProvider from \"./panningProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DEFAULT_DIRECTIONS = [PanningProvider.Directions.UP, PanningProvider.Directions.DOWN, PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT];\nvar DEFAULT_SPEED = 20;\nvar DEFAULT_BOUNCINESS = 6;\nvar DEFAULT_DISMISS_ANIMATION_DURATION = 280;\nvar DEFAULT_ANIMATION_OPTIONS = {\n  speed: DEFAULT_SPEED,\n  bounciness: DEFAULT_BOUNCINESS,\n  duration: DEFAULT_DISMISS_ANIMATION_DURATION\n};\nvar MAXIMUM_DRAGS_AFTER_SWIPE = 2;\nvar PanDismissibleView = function (_PureComponent) {\n  _inherits(PanDismissibleView, _PureComponent);\n  var _super = _createSuper(PanDismissibleView);\n  function PanDismissibleView(props) {\n    var _this;\n    _classCallCheck(this, PanDismissibleView);\n    _this = _super.call(this, props);\n    _this.shouldDismissAfterReset = false;\n    _this.ref = React.createRef();\n    _this.animTranslateX = new Animated.Value(0);\n    _this.animTranslateY = new Animated.Value(0);\n    _this.left = 0;\n    _this.top = 0;\n    _this.width = 0;\n    _this.height = 0;\n    _this.thresholdX = 0;\n    _this.thresholdY = 0;\n    _this.swipe = {};\n    _this.counter = 0;\n    _this.onLayout = function (event) {\n      if (_this.height === 0) {\n        var layout = event.nativeEvent.layout;\n        var threshold = _this.props.threshold;\n        _this.height = layout.height;\n        _this.thresholdY = _get(threshold, 'y', layout.height / 2);\n        _this.width = layout.width;\n        _this.thresholdX = _get(threshold, 'x', layout.width / 2);\n        _this.initPositions();\n      }\n    };\n    _this.initPositions = function (extraDataForSetState, runAfterSetState) {\n      _this.setNativeProps(0, 0);\n      _this.animTranslateX = new Animated.Value(0);\n      _this.animTranslateY = new Animated.Value(0);\n      _this.setState(_objectSpread({}, extraDataForSetState), runAfterSetState);\n    };\n    _this.onPanStart = function () {\n      _this.swipe = {};\n      _this.counter = 0;\n    };\n    _this.onDrag = function (deltas) {\n      var left = deltas.x ? Math.round(deltas.x) : 0;\n      var top = deltas.y ? Math.round(deltas.y) : 0;\n      _this.setNativeProps(left, top);\n      if (_this.swipe.x || _this.swipe.y) {\n        if (_this.counter < MAXIMUM_DRAGS_AFTER_SWIPE) {\n          _this.counter += 1;\n        } else {\n          _this.swipe = {};\n        }\n      }\n    };\n    _this.setNativeProps = function (left, top) {\n      if (_this.ref.current) {\n        _this.ref.current.setNativeProps({\n          style: {\n            left: left,\n            top: top\n          }\n        });\n        _this.left = left;\n        _this.top = top;\n      }\n    };\n    _this.onSwipe = function (swipeDirections) {\n      _this.swipe = swipeDirections;\n    };\n    _this.onPanEnd = function () {\n      var _this$props$direction = _this.props.directions,\n        directions = _this$props$direction === void 0 ? DEFAULT_DIRECTIONS : _this$props$direction;\n      if (_this.swipe.x || _this.swipe.y) {\n        var _this$getDismissAnima = _this.getDismissAnimationDirection(),\n          isRight = _this$getDismissAnima.isRight,\n          isDown = _this$getDismissAnima.isDown;\n        _this._animateDismiss(isRight, isDown);\n      } else {\n        var endValue = {\n          x: Math.round(_this.left),\n          y: Math.round(_this.top)\n        };\n        if (directions.includes(PanningProvider.Directions.LEFT) && endValue.x <= -_this.thresholdX || directions.includes(PanningProvider.Directions.RIGHT) && endValue.x >= _this.thresholdX || directions.includes(PanningProvider.Directions.UP) && endValue.y <= -_this.thresholdY || directions.includes(PanningProvider.Directions.DOWN) && endValue.y >= _this.thresholdY) {\n          var _this$getDismissAnima2 = _this.getDismissAnimationDirection(),\n            _isRight = _this$getDismissAnima2.isRight,\n            _isDown = _this$getDismissAnima2.isDown;\n          _this._animateDismiss(_isRight, _isDown);\n        } else {\n          _this.resetPosition();\n        }\n      }\n    };\n    _this.resetPosition = function () {\n      var animationOptions = _this.props.animationOptions;\n      var _ref = animationOptions || DEFAULT_ANIMATION_OPTIONS,\n        speed = _ref.speed,\n        bounciness = _ref.bounciness;\n      var toX = -_this.left;\n      var toY = -_this.top;\n      var animations = [];\n      if (!_isUndefined(toX)) {\n        animations.push(Animated.spring(_this.animTranslateX, {\n          toValue: Math.round(toX),\n          useNativeDriver: true,\n          speed: speed,\n          bounciness: bounciness\n        }));\n      }\n      if (!_isUndefined(toY)) {\n        animations.push(Animated.spring(_this.animTranslateY, {\n          toValue: Math.round(toY),\n          useNativeDriver: true,\n          speed: speed,\n          bounciness: bounciness\n        }));\n      }\n      _this.setState({\n        isAnimating: true\n      }, function () {\n        Animated.parallel(animations).start(_this.onResetPositionFinished);\n      });\n    };\n    _this.onResetPositionFinished = function () {\n      var runAfterSetState = _this.shouldDismissAfterReset ? _this.animateDismiss : undefined;\n      _this.shouldDismissAfterReset = false;\n      _this.initPositions({\n        isAnimating: false\n      }, runAfterSetState);\n    };\n    _this.getDismissAnimationDirection = function () {\n      var allowDiagonalDismiss = _this.props.allowDiagonalDismiss;\n      var _this$props$context = _this.props.context,\n        swipeDirections = _this$props$context.swipeDirections,\n        swipeVelocities = _this$props$context.swipeVelocities,\n        dragDirections = _this$props$context.dragDirections,\n        dragDeltas = _this$props$context.dragDeltas;\n      var hasHorizontalSwipe = !_isUndefined(swipeDirections.x);\n      var hasVerticalSwipe = !_isUndefined(swipeDirections.y);\n      var isRight;\n      var isDown;\n      if (hasHorizontalSwipe || hasVerticalSwipe) {\n        if (!allowDiagonalDismiss && hasHorizontalSwipe && hasVerticalSwipe) {\n          if (Math.abs(swipeVelocities.y) > Math.abs(swipeVelocities.x)) {\n            isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n          } else {\n            isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n          }\n          return {\n            isRight: isRight,\n            isDown: isDown\n          };\n        }\n        if (hasHorizontalSwipe) {\n          isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        if (hasVerticalSwipe) {\n          isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n        }\n      } else {\n        var hasHorizontalDrag = !_isUndefined(dragDirections.x);\n        var hasVerticalDrag = !_isUndefined(dragDirections.y);\n        if (!allowDiagonalDismiss && hasHorizontalDrag && hasVerticalDrag) {\n          if (Math.abs(dragDeltas.y) > Math.abs(dragDeltas.x)) {\n            isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n          } else {\n            isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n          }\n          return {\n            isRight: isRight,\n            isDown: isDown\n          };\n        }\n        if (hasHorizontalDrag) {\n          isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        if (hasVerticalDrag) {\n          isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n        }\n      }\n      return {\n        isRight: isRight,\n        isDown: isDown\n      };\n    };\n    _this.animateDismiss = function () {\n      var isAnimating = _this.state.isAnimating;\n      if (isAnimating) {\n        _this.shouldDismissAfterReset = true;\n      } else {\n        var _this$props$direction2 = _this.props.directions,\n          directions = _this$props$direction2 === void 0 ? [] : _this$props$direction2;\n        var hasUp = directions.includes(PanningProvider.Directions.UP);\n        var hasRight = directions.includes(PanningProvider.Directions.RIGHT);\n        var hasLeft = directions.includes(PanningProvider.Directions.LEFT);\n        var hasDown = !hasUp && !hasLeft && !hasRight;\n        var verticalDismiss = hasDown ? true : hasUp ? false : undefined;\n        var horizontalDismiss = hasRight ? true : hasLeft ? false : undefined;\n        _this._animateDismiss(horizontalDismiss, verticalDismiss);\n      }\n    };\n    _this._animateDismiss = function (isRight, isDown) {\n      var animationOptions = _this.props.animationOptions;\n      var _ref2 = animationOptions || DEFAULT_ANIMATION_OPTIONS,\n        duration = _ref2.duration;\n      var animations = [];\n      var toX;\n      var toY;\n      if (!_isUndefined(isRight)) {\n        var maxSize = Constants.screenWidth + _this.width;\n        toX = isRight ? maxSize : -maxSize;\n      }\n      if (!_isUndefined(isDown)) {\n        var _maxSize = Constants.screenHeight + _this.height;\n        toY = isDown ? _maxSize : -_maxSize;\n      }\n      if (!_isUndefined(toX)) {\n        animations.push(Animated.timing(_this.animTranslateX, {\n          toValue: Math.round(toX),\n          useNativeDriver: true,\n          duration: duration\n        }));\n      }\n      if (!_isUndefined(toY)) {\n        animations.push(Animated.timing(_this.animTranslateY, {\n          toValue: Math.round(toY),\n          useNativeDriver: true,\n          duration: duration\n        }));\n      }\n      _this.setState({\n        isAnimating: true\n      }, function () {\n        Animated.parallel(animations).start(_this.onDismissAnimationFinished);\n      });\n    };\n    _this.onDismissAnimationFinished = function (_ref3) {\n      var finished = _ref3.finished;\n      if (finished) {\n        _this.props.onDismiss == null ? void 0 : _this.props.onDismiss();\n      }\n    };\n    _this.state = {\n      isAnimating: false\n    };\n    return _this;\n  }\n  _createClass(PanDismissibleView, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var isAnimating = this.state.isAnimating;\n      var _this$props$context2 = this.props.context,\n        isPanning = _this$props$context2.isPanning,\n        dragDeltas = _this$props$context2.dragDeltas,\n        swipeDirections = _this$props$context2.swipeDirections;\n      var _prevProps$context = prevProps.context,\n        prevIsPanning = _prevProps$context.isPanning,\n        prevDragDeltas = _prevProps$context.dragDeltas,\n        prevSwipeDirections = _prevProps$context.swipeDirections;\n      if (isPanning !== prevIsPanning) {\n        if (isPanning && !isAnimating) {\n          this.onPanStart();\n        } else {\n          this.onPanEnd();\n        }\n      }\n      if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n        this.onDrag(dragDeltas);\n      }\n      if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== prevSwipeDirections.x || swipeDirections.y !== prevSwipeDirections.y)) {\n        this.onSwipe(swipeDirections);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      var isAnimating = this.state.isAnimating;\n      var transform = isAnimating ? [{\n        translateX: this.animTranslateX\n      }, {\n        translateY: this.animTranslateY\n      }] : [];\n      return _jsx(Animated.View, {\n        ref: this.ref,\n        style: [style, {\n          transform: transform\n        }],\n        onLayout: this.onLayout,\n        children: this.props.children\n      });\n    }\n  }]);\n  return PanDismissibleView;\n}(PureComponent);\nPanDismissibleView.displayName = 'PanDismissibleView';\nPanDismissibleView.defaultProps = {\n  directions: DEFAULT_DIRECTIONS,\n  animationOptions: DEFAULT_ANIMATION_OPTIONS,\n  onDismiss: _noop,\n  allowDiagonalDismiss: false\n};\nexport default asPanViewConsumer(PanDismissibleView);","map":{"version":3,"names":["_isUndefined","_get","_noop","React","PureComponent","Constants","asPanViewConsumer","PanningProvider","DEFAULT_DIRECTIONS","Directions","UP","DOWN","LEFT","RIGHT","DEFAULT_SPEED","DEFAULT_BOUNCINESS","DEFAULT_DISMISS_ANIMATION_DURATION","DEFAULT_ANIMATION_OPTIONS","speed","bounciness","duration","MAXIMUM_DRAGS_AFTER_SWIPE","PanDismissibleView","props","shouldDismissAfterReset","ref","createRef","animTranslateX","Animated","Value","animTranslateY","left","top","width","height","thresholdX","thresholdY","swipe","counter","onLayout","event","layout","nativeEvent","threshold","initPositions","extraDataForSetState","runAfterSetState","setNativeProps","setState","onPanStart","onDrag","deltas","x","Math","round","y","current","style","onSwipe","swipeDirections","onPanEnd","directions","getDismissAnimationDirection","isRight","isDown","_animateDismiss","endValue","includes","resetPosition","animationOptions","toX","toY","animations","push","spring","toValue","useNativeDriver","isAnimating","parallel","start","onResetPositionFinished","animateDismiss","undefined","allowDiagonalDismiss","context","swipeVelocities","dragDirections","dragDeltas","hasHorizontalSwipe","hasVerticalSwipe","abs","hasHorizontalDrag","hasVerticalDrag","state","hasUp","hasRight","hasLeft","hasDown","verticalDismiss","horizontalDismiss","maxSize","screenWidth","screenHeight","timing","onDismissAnimationFinished","finished","onDismiss","prevProps","isPanning","prevIsPanning","prevDragDeltas","prevSwipeDirections","transform","translateX","translateY","children","displayName","defaultProps"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/panningViews/panDismissibleView.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport _noop from \"lodash/noop\";\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\nimport { Constants } from \"../../commons/new\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport PanningProvider from \"./panningProvider\";\nconst DEFAULT_DIRECTIONS = [PanningProvider.Directions.UP, PanningProvider.Directions.DOWN, PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT];\nconst DEFAULT_SPEED = 20;\nconst DEFAULT_BOUNCINESS = 6;\nconst DEFAULT_DISMISS_ANIMATION_DURATION = 280;\nconst DEFAULT_ANIMATION_OPTIONS = {\n  speed: DEFAULT_SPEED,\n  bounciness: DEFAULT_BOUNCINESS,\n  duration: DEFAULT_DISMISS_ANIMATION_DURATION\n};\nconst MAXIMUM_DRAGS_AFTER_SWIPE = 2;\n/**\n * @description: PanDismissibleView component created to making listening to swipe and drag events easier,\n * @notes: Has to be used as a child of a PanningProvider that also has a PanListenerView.\n *         The PanListenerView is the one that sends the drag\\swipe events.\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/PanDismissibleView/PanDismissibleView.gif?raw=true\n */\nclass PanDismissibleView extends PureComponent {\n  static displayName = 'PanDismissibleView';\n  static defaultProps = {\n    directions: DEFAULT_DIRECTIONS,\n    animationOptions: DEFAULT_ANIMATION_OPTIONS,\n    onDismiss: _noop,\n    allowDiagonalDismiss: false\n  };\n  shouldDismissAfterReset = false;\n  ref = React.createRef();\n  animTranslateX = new Animated.Value(0);\n  animTranslateY = new Animated.Value(0);\n  left = 0;\n  top = 0;\n  width = 0;\n  height = 0;\n  thresholdX = 0;\n  thresholdY = 0;\n  swipe = {};\n  counter = 0;\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAnimating: false\n    };\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      isAnimating\n    } = this.state;\n    const {\n      isPanning,\n      dragDeltas,\n      swipeDirections\n    } = this.props.context;\n    const {\n      isPanning: prevIsPanning,\n      dragDeltas: prevDragDeltas,\n      swipeDirections: prevSwipeDirections\n    } = prevProps.context;\n    if (isPanning !== prevIsPanning) {\n      if (isPanning && !isAnimating) {\n        // do not start a new pan if we're still animating\n        this.onPanStart();\n      } else {\n        this.onPanEnd();\n      }\n    }\n    if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n      this.onDrag(dragDeltas);\n    }\n    if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== prevSwipeDirections.x || swipeDirections.y !== prevSwipeDirections.y)) {\n      this.onSwipe(swipeDirections);\n    }\n  }\n  onLayout = event => {\n    if (this.height === 0) {\n      const layout = event.nativeEvent.layout;\n      const {\n        threshold\n      } = this.props;\n      this.height = layout.height;\n      this.thresholdY = _get(threshold, 'y', layout.height / 2);\n      this.width = layout.width;\n      this.thresholdX = _get(threshold, 'x', layout.width / 2);\n      this.initPositions();\n    }\n  };\n  initPositions = (extraDataForSetState, runAfterSetState) => {\n    this.setNativeProps(0, 0);\n    this.animTranslateX = new Animated.Value(0);\n    this.animTranslateY = new Animated.Value(0);\n    this.setState({\n      ...extraDataForSetState\n    }, runAfterSetState);\n  };\n  onPanStart = () => {\n    this.swipe = {};\n    this.counter = 0;\n  };\n  onDrag = deltas => {\n    const left = deltas.x ? Math.round(deltas.x) : 0;\n    const top = deltas.y ? Math.round(deltas.y) : 0;\n    this.setNativeProps(left, top);\n    if (this.swipe.x || this.swipe.y) {\n      if (this.counter < MAXIMUM_DRAGS_AFTER_SWIPE) {\n        this.counter += 1;\n      } else {\n        this.swipe = {};\n      }\n    }\n  };\n  setNativeProps = (left, top) => {\n    if (this.ref.current) {\n      this.ref.current.setNativeProps({\n        style: {\n          left,\n          top\n        }\n      });\n      this.left = left;\n      this.top = top;\n    }\n  };\n  onSwipe = swipeDirections => {\n    this.swipe = swipeDirections;\n  };\n  onPanEnd = () => {\n    const {\n      directions = DEFAULT_DIRECTIONS\n    } = this.props;\n    if (this.swipe.x || this.swipe.y) {\n      const {\n        isRight,\n        isDown\n      } = this.getDismissAnimationDirection();\n      this._animateDismiss(isRight, isDown);\n    } else {\n      const endValue = {\n        x: Math.round(this.left),\n        y: Math.round(this.top)\n      };\n      if (directions.includes(PanningProvider.Directions.LEFT) && endValue.x <= -this.thresholdX || directions.includes(PanningProvider.Directions.RIGHT) && endValue.x >= this.thresholdX || directions.includes(PanningProvider.Directions.UP) && endValue.y <= -this.thresholdY || directions.includes(PanningProvider.Directions.DOWN) && endValue.y >= this.thresholdY) {\n        const {\n          isRight,\n          isDown\n        } = this.getDismissAnimationDirection();\n        this._animateDismiss(isRight, isDown);\n      } else {\n        this.resetPosition();\n      }\n    }\n  };\n  resetPosition = () => {\n    const {\n      animationOptions\n    } = this.props;\n    const {\n      speed,\n      bounciness\n    } = animationOptions || DEFAULT_ANIMATION_OPTIONS;\n    const toX = -this.left;\n    const toY = -this.top;\n    const animations = [];\n    if (!_isUndefined(toX)) {\n      animations.push(Animated.spring(this.animTranslateX, {\n        toValue: Math.round(toX),\n        useNativeDriver: true,\n        speed,\n        bounciness\n      }));\n    }\n    if (!_isUndefined(toY)) {\n      animations.push(Animated.spring(this.animTranslateY, {\n        toValue: Math.round(toY),\n        useNativeDriver: true,\n        speed,\n        bounciness\n      }));\n    }\n    this.setState({\n      isAnimating: true\n    }, () => {\n      Animated.parallel(animations).start(this.onResetPositionFinished);\n    });\n  };\n  onResetPositionFinished = () => {\n    const runAfterSetState = this.shouldDismissAfterReset ? this.animateDismiss : undefined;\n    this.shouldDismissAfterReset = false;\n    this.initPositions({\n      isAnimating: false\n    }, runAfterSetState);\n  };\n  getDismissAnimationDirection = () => {\n    const {\n      allowDiagonalDismiss\n    } = this.props;\n    const {\n      swipeDirections,\n      swipeVelocities,\n      dragDirections,\n      dragDeltas\n    } = this.props.context;\n    const hasHorizontalSwipe = !_isUndefined(swipeDirections.x);\n    const hasVerticalSwipe = !_isUndefined(swipeDirections.y);\n    let isRight;\n    let isDown;\n    if (hasHorizontalSwipe || hasVerticalSwipe) {\n      if (!allowDiagonalDismiss && hasHorizontalSwipe && hasVerticalSwipe) {\n        // @ts-ignore\n        if (Math.abs(swipeVelocities.y) > Math.abs(swipeVelocities.x)) {\n          isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n        } else {\n          isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        return {\n          isRight,\n          isDown\n        };\n      }\n      if (hasHorizontalSwipe) {\n        isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n      }\n      if (hasVerticalSwipe) {\n        isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n      }\n    } else {\n      // got here from a drag beyond threshold\n      const hasHorizontalDrag = !_isUndefined(dragDirections.x);\n      const hasVerticalDrag = !_isUndefined(dragDirections.y);\n      if (!allowDiagonalDismiss && hasHorizontalDrag && hasVerticalDrag) {\n        // @ts-ignore\n        if (Math.abs(dragDeltas.y) > Math.abs(dragDeltas.x)) {\n          isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n        } else {\n          isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        return {\n          isRight,\n          isDown\n        };\n      }\n      if (hasHorizontalDrag) {\n        isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n      }\n      if (hasVerticalDrag) {\n        isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n      }\n    }\n    return {\n      isRight,\n      isDown\n    };\n  };\n\n  // Send undefined to not animate in the horizontal\\vertical direction\n  // isRight === true --> animate to the right\n  // isRight === false --> animate to the left\n  // isDown === true --> animate to the bottom\n  // isDown === false --> animate to the top\n  animateDismiss = () => {\n    const {\n      isAnimating\n    } = this.state;\n    if (isAnimating) {\n      this.shouldDismissAfterReset = true;\n    } else {\n      const {\n        directions = []\n      } = this.props;\n      const hasUp = directions.includes(PanningProvider.Directions.UP);\n      const hasRight = directions.includes(PanningProvider.Directions.RIGHT);\n      const hasLeft = directions.includes(PanningProvider.Directions.LEFT);\n      const hasDown = !hasUp && !hasLeft && !hasRight; // default\n      const verticalDismiss = hasDown ? true : hasUp ? false : undefined;\n      const horizontalDismiss = hasRight ? true : hasLeft ? false : undefined;\n      this._animateDismiss(horizontalDismiss, verticalDismiss);\n    }\n  };\n  _animateDismiss = (isRight, isDown) => {\n    const {\n      animationOptions\n    } = this.props;\n    const {\n      duration\n    } = animationOptions || DEFAULT_ANIMATION_OPTIONS;\n    const animations = [];\n    let toX;\n    let toY;\n    if (!_isUndefined(isRight)) {\n      const maxSize = Constants.screenWidth + this.width;\n      toX = isRight ? maxSize : -maxSize;\n    }\n    if (!_isUndefined(isDown)) {\n      const maxSize = Constants.screenHeight + this.height;\n      toY = isDown ? maxSize : -maxSize;\n    }\n    if (!_isUndefined(toX)) {\n      animations.push(Animated.timing(this.animTranslateX, {\n        toValue: Math.round(toX),\n        useNativeDriver: true,\n        duration\n      }));\n    }\n    if (!_isUndefined(toY)) {\n      animations.push(Animated.timing(this.animTranslateY, {\n        toValue: Math.round(toY),\n        useNativeDriver: true,\n        duration\n      }));\n    }\n    this.setState({\n      isAnimating: true\n    }, () => {\n      Animated.parallel(animations).start(this.onDismissAnimationFinished);\n    });\n  };\n  onDismissAnimationFinished = ({\n    finished\n  }) => {\n    if (finished) {\n      this.props.onDismiss?.();\n    }\n  };\n  render() {\n    const {\n      style\n    } = this.props;\n    const {\n      isAnimating\n    } = this.state;\n    const transform = isAnimating ? [{\n      translateX: this.animTranslateX\n    }, {\n      translateY: this.animTranslateY\n    }] : [];\n    return <Animated.View\n    // @ts-ignore\n    ref={this.ref} style={[style, {\n      transform\n    }]} onLayout={this.onLayout}>\n        {this.props.children}\n      </Animated.View>;\n  }\n}\nexport default asPanViewConsumer(PanDismissibleView);"],"mappings":"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"},"metadata":{},"sourceType":"module"}