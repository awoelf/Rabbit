{"ast":null,"code":"import React, { useCallback, useMemo } from 'react';\nimport Reanimated, { useAnimatedStyle } from 'react-native-reanimated';\nimport { Spacings, Typography } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Segment = React.memo(function (props) {\n  var activeColor = props.activeColor,\n    label = props.label,\n    iconSource = props.iconSource,\n    iconStyle = props.iconStyle,\n    selectedIndex = props.selectedIndex,\n    onLayout = props.onLayout,\n    onPress = props.onPress,\n    inactiveColor = props.inactiveColor,\n    index = props.index,\n    iconOnRight = props.iconOnRight,\n    testID = props.testID;\n  var animatedTextStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var color = (selectedIndex == null ? void 0 : selectedIndex.value) === index ? activeColor : inactiveColor;\n      return {\n        color: color\n      };\n    };\n    _f._closure = {\n      selectedIndex: selectedIndex,\n      index: index,\n      activeColor: activeColor,\n      inactiveColor: inactiveColor\n    };\n    _f.asString = \"function _f(){const{selectedIndex,index,activeColor,inactiveColor}=jsThis._closure;{var _selectedIndex;const color=((_selectedIndex=selectedIndex)===null||_selectedIndex===void 0?void 0:_selectedIndex.value)===index?activeColor:inactiveColor;return{color:color};}}\";\n    _f.__workletHash = 5743798011992;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\segmentedControl\\\\segment.js (23:45)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var animatedIconStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var tintColor = (selectedIndex == null ? void 0 : selectedIndex.value) === index ? activeColor : inactiveColor;\n      return {\n        tintColor: tintColor\n      };\n    };\n    _f._closure = {\n      selectedIndex: selectedIndex,\n      index: index,\n      activeColor: activeColor,\n      inactiveColor: inactiveColor\n    };\n    _f.asString = \"function _f(){const{selectedIndex,index,activeColor,inactiveColor}=jsThis._closure;{var _selectedIndex;const tintColor=((_selectedIndex=selectedIndex)===null||_selectedIndex===void 0?void 0:_selectedIndex.value)===index?activeColor:inactiveColor;return{tintColor:tintColor};}}\";\n    _f.__workletHash = 13594213792831;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\segmentedControl\\\\segment.js (29:45)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var segmentStyle = useMemo(function () {\n    return {\n      paddingHorizontal: Spacings.s3,\n      paddingVertical: Spacings.s2\n    };\n  }, []);\n  var renderIcon = useCallback(function () {\n    return iconSource && _jsx(Reanimated.Image, {\n      source: iconSource,\n      style: [animatedIconStyle, iconStyle]\n    });\n  }, [iconSource, iconStyle]);\n  var onSegmentPress = useCallback(function () {\n    (selectedIndex == null ? void 0 : selectedIndex.value) !== index && (onPress == null ? void 0 : onPress(index));\n  }, [index, onPress]);\n  var segmentOnLayout = useCallback(function (event) {\n    onLayout == null ? void 0 : onLayout(index, event);\n  }, [onLayout, index]);\n  return _jsxs(TouchableOpacity, {\n    onLayout: segmentOnLayout,\n    style: segmentStyle,\n    onPress: onSegmentPress,\n    row: true,\n    flexG: true,\n    center: true,\n    testID: testID + \".\" + index,\n    children: [!iconOnRight && renderIcon(), label && _jsx(Reanimated.Text, {\n      numberOfLines: 1,\n      style: [animatedTextStyle, Typography.text90],\n      children: label\n    }), iconOnRight && renderIcon()]\n  });\n});\nexport default asBaseComponent(Segment);","map":{"version":3,"names":["React","useCallback","useMemo","Reanimated","useAnimatedStyle","Spacings","Typography","asBaseComponent","TouchableOpacity","Segment","memo","props","activeColor","label","iconSource","iconStyle","selectedIndex","onLayout","onPress","inactiveColor","index","iconOnRight","testID","animatedTextStyle","color","value","animatedIconStyle","tintColor","segmentStyle","paddingHorizontal","s3","paddingVertical","s2","renderIcon","onSegmentPress","segmentOnLayout","event","text90"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/segmentedControl/segment.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport Reanimated, { useAnimatedStyle } from 'react-native-reanimated';\nimport { Spacings, Typography } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport TouchableOpacity from \"../touchableOpacity\";\n/**\n * Segment sub-component for SegmentedControl component\n */\nconst Segment = React.memo(props => {\n  const {\n    activeColor,\n    label,\n    iconSource,\n    iconStyle,\n    selectedIndex,\n    onLayout,\n    onPress,\n    inactiveColor,\n    index,\n    iconOnRight,\n    testID\n  } = props;\n  const animatedTextStyle = useAnimatedStyle(() => {\n    const color = selectedIndex?.value === index ? activeColor : inactiveColor;\n    return {\n      color\n    };\n  });\n  const animatedIconStyle = useAnimatedStyle(() => {\n    const tintColor = selectedIndex?.value === index ? activeColor : inactiveColor;\n    return {\n      tintColor\n    };\n  });\n  const segmentStyle = useMemo(() => ({\n    paddingHorizontal: Spacings.s3,\n    paddingVertical: Spacings.s2\n  }), []);\n  const renderIcon = useCallback(() => {\n    return iconSource && <Reanimated.Image source={iconSource} style={[animatedIconStyle, iconStyle]} />;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [iconSource, iconStyle]);\n  const onSegmentPress = useCallback(() => {\n    selectedIndex?.value !== index && onPress?.(index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [index, onPress]);\n  const segmentOnLayout = useCallback(event => {\n    onLayout?.(index, event);\n  }, [onLayout, index]);\n  return <TouchableOpacity onLayout={segmentOnLayout} style={segmentStyle} onPress={onSegmentPress} row flexG center testID={`${testID}.${index}`}>\n      {!iconOnRight && renderIcon()}\n      {label && <Reanimated.Text numberOfLines={1} style={[animatedTextStyle, Typography.text90]}>\n          {label}\n        </Reanimated.Text>}\n      {iconOnRight && renderIcon()}\n    </TouchableOpacity>;\n});\nexport default asBaseComponent(Segment);"],"mappings":"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"},"metadata":{},"sourceType":"module"}