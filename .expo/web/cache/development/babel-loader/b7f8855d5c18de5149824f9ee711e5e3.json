{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"source\"],\n  _excluded2 = [\"tintColor\", \"style\", \"supportRTL\", \"cover\", \"aspectRatio\", \"overlayType\", \"overlayIntensity\", \"overlayColor\", \"customOverlayContent\", \"modifiers\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport React, { PureComponent } from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RNImage from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { getAsset, isSvg } from \"../../utils/imageUtils\";\nimport Overlay from \"../overlay\";\nimport SvgImage from \"../svgImage\";\nimport View from \"../view\";\nimport { Colors } from \"../../style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Image = function (_PureComponent) {\n  _inherits(Image, _PureComponent);\n  var _super = _createSuper(Image);\n  function Image(props) {\n    var _this;\n    _classCallCheck(this, Image);\n    _this = _super.call(this, props);\n    _this.onError = function (event) {\n      if (event.nativeEvent.error) {\n        _this.setState({\n          error: true\n        });\n        _this.props.onError == null ? void 0 : _this.props.onError(event);\n      }\n    };\n    _this.renderSvg = function () {\n      var _this$props = _this.props,\n        source = _this$props.source,\n        others = _objectWithoutProperties(_this$props, _excluded);\n      return _jsx(SvgImage, _objectSpread({\n        data: source\n      }, others));\n    };\n    _this.renderImageWithContainer = function () {\n      var _this$props2 = _this.props,\n        style = _this$props2.style,\n        cover = _this$props2.cover,\n        modifiers = _this$props2.modifiers,\n        width = _this$props2.width,\n        height = _this$props2.height;\n      var margins = modifiers.margins;\n      return _jsx(View, {\n        style: [{\n          width: width,\n          height: height\n        }, margins, style, styles.errorImageContainer, cover && styles.coverImage],\n        children: _this.renderImage(true)\n      });\n    };\n    _this.renderImage = function (useImageInsideContainer) {\n      var error = _this.state.error;\n      var source = error ? _this.getVerifiedSource(_this.props.errorSource) : _this.getImageSource();\n      var _this$props3 = _this.props,\n        tintColor = _this$props3.tintColor,\n        style = _this$props3.style,\n        supportRTL = _this$props3.supportRTL,\n        cover = _this$props3.cover,\n        aspectRatio = _this$props3.aspectRatio,\n        overlayType = _this$props3.overlayType,\n        overlayIntensity = _this$props3.overlayIntensity,\n        overlayColor = _this$props3.overlayColor,\n        customOverlayContent = _this$props3.customOverlayContent,\n        modifiers = _this$props3.modifiers,\n        others = _objectWithoutProperties(_this$props3, _excluded2);\n      var shouldFlipRTL = supportRTL && Constants.isRTL;\n      var ImageView = _this.shouldUseImageBackground() ? ImageBackground : RNImage;\n      var margins = modifiers.margins;\n      return _jsx(ImageView, _objectSpread(_objectSpread({\n        style: [tintColor && {\n          tintColor: tintColor\n        }, shouldFlipRTL && styles.rtlFlipped, cover && styles.coverImage, _this.isGif() && styles.gifImage, aspectRatio && {\n          aspectRatio: aspectRatio\n        }, !useImageInsideContainer && margins, useImageInsideContainer && styles.containImage, style, useImageInsideContainer && styles.shrink],\n        accessible: false,\n        accessibilityRole: 'image'\n      }, others), {}, {\n        onError: _this.onError,\n        source: source,\n        children: (overlayType || customOverlayContent) && _jsx(Overlay, {\n          type: overlayType,\n          intensity: overlayIntensity,\n          color: overlayColor,\n          customContent: customOverlayContent\n        })\n      }));\n    };\n    _this.sourceTransformer = _this.props.sourceTransformer;\n    _this.state = {\n      error: false,\n      prevSource: props.source\n    };\n    return _this;\n  }\n  _createClass(Image, [{\n    key: \"isGif\",\n    value: function isGif() {\n      if (Constants.isAndroid) {\n        var source = this.props.source;\n        var url = _get(source, 'uri');\n        var isGif = /(http(s?):)([/|.|\\w|\\s|-])*\\.gif/.test(url != null ? url : '');\n        return isGif;\n      }\n    }\n  }, {\n    key: \"shouldUseImageBackground\",\n    value: function shouldUseImageBackground() {\n      var _this$props4 = this.props,\n        overlayType = _this$props4.overlayType,\n        customOverlayContent = _this$props4.customOverlayContent;\n      return !!overlayType || this.isGif() || !_isUndefined(customOverlayContent);\n    }\n  }, {\n    key: \"getVerifiedSource\",\n    value: function getVerifiedSource(source) {\n      if (_get(source, 'uri') === null || _get(source, 'uri') === '') {\n        return _objectSpread(_objectSpread({}, source), {}, {\n          uri: undefined\n        });\n      }\n      return source;\n    }\n  }, {\n    key: \"getImageSource\",\n    value: function getImageSource() {\n      var _this$props5 = this.props,\n        assetName = _this$props5.assetName,\n        assetGroup = _this$props5.assetGroup,\n        source = _this$props5.source;\n      if (!_isUndefined(assetName)) {\n        return getAsset(assetName, assetGroup);\n      }\n      if (this.sourceTransformer) {\n        return this.sourceTransformer(this.props);\n      }\n      return this.getVerifiedSource(source);\n    }\n  }, {\n    key: \"renderRegularImage\",\n    value: function renderRegularImage() {\n      var error = this.state.error;\n      var useBackgroundContainer = this.props.useBackgroundContainer;\n      if (error || useBackgroundContainer) {\n        return this.renderImageWithContainer();\n      } else {\n        return this.renderImage(false);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var source = this.props.source;\n      if (isSvg(source)) {\n        return this.renderSvg();\n      } else {\n        return this.renderRegularImage();\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.source !== prevState.prevSource) {\n        return {\n          error: false,\n          prevSource: nextProps.source\n        };\n      }\n      return null;\n    }\n  }]);\n  return Image;\n}(PureComponent);\nImage.displayName = 'Image';\nImage.defaultProps = {\n  assetGroup: 'icons'\n};\nImage.overlayTypes = Overlay.overlayTypes;\nImage.overlayIntensityType = Overlay.intensityTypes;\nvar styles = StyleSheet.create({\n  rtlFlipped: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  coverImage: {\n    width: '100%',\n    aspectRatio: 16 / 8\n  },\n  gifImage: {\n    overflow: 'hidden'\n  },\n  errorImageContainer: {\n    backgroundColor: Colors.grey70,\n    zIndex: -1\n  },\n  shrink: {\n    flexShrink: 1\n  },\n  containImage: {\n    resizeMode: 'contain'\n  }\n});\nhoistNonReactStatic(Image, RNImage);\nexport { Image };\nexport default asBaseComponent(Image, {\n  modifiersOptions: {\n    margins: true\n  }\n});","map":{"version":3,"names":["_isUndefined","_get","React","PureComponent","hoistNonReactStatic","Constants","asBaseComponent","getAsset","isSvg","Overlay","SvgImage","View","Colors","Image","props","onError","event","nativeEvent","error","setState","renderSvg","source","others","renderImageWithContainer","style","cover","modifiers","width","height","margins","styles","errorImageContainer","coverImage","renderImage","useImageInsideContainer","state","getVerifiedSource","errorSource","getImageSource","tintColor","supportRTL","aspectRatio","overlayType","overlayIntensity","overlayColor","customOverlayContent","shouldFlipRTL","isRTL","ImageView","shouldUseImageBackground","ImageBackground","RNImage","rtlFlipped","isGif","gifImage","containImage","shrink","sourceTransformer","prevSource","isAndroid","url","test","uri","undefined","assetName","assetGroup","useBackgroundContainer","renderRegularImage","nextProps","prevState","displayName","defaultProps","overlayTypes","overlayIntensityType","intensityTypes","StyleSheet","create","transform","scaleX","overflow","backgroundColor","grey70","zIndex","flexShrink","resizeMode","modifiersOptions"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/image/index.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport React, { PureComponent } from 'react';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nimport { StyleSheet, Image as RNImage, ImageBackground } from 'react-native';\n// @ts-expect-error No typings available for 'deprecated-react-native-prop-types'\n\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { getAsset, isSvg } from \"../../utils/imageUtils\";\nimport Overlay from \"../overlay\";\nimport SvgImage from \"../svgImage\";\nimport View from \"../view\";\nimport { Colors } from \"../../style\";\n/**\n * @description: Image wrapper with extra functionality like source transform and assets support\n * @extends: Image\n * @extendsLink: https://reactnative.dev/docs/image\n * @notes: please note that for SVG support you need to add both\n * `react-native-svg` and `react-native-svg-transformer`,\n * and also configure them (see `metro.config.js`)\n */\nclass Image extends PureComponent {\n  static displayName = 'Image';\n  static defaultProps = {\n    assetGroup: 'icons'\n  };\n  static overlayTypes = Overlay.overlayTypes;\n  static overlayIntensityType = Overlay.intensityTypes;\n  constructor(props) {\n    super(props);\n    this.sourceTransformer = this.props.sourceTransformer;\n    this.state = {\n      error: false,\n      prevSource: props.source\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.source !== prevState.prevSource) {\n      return {\n        error: false,\n        prevSource: nextProps.source\n      };\n    }\n    return null;\n  }\n  isGif() {\n    if (Constants.isAndroid) {\n      const {\n        source\n      } = this.props;\n      const url = _get(source, 'uri');\n      const isGif = /(http(s?):)([/|.|\\w|\\s|-])*\\.gif/.test(url ?? '');\n      return isGif;\n    }\n  }\n  shouldUseImageBackground() {\n    const {\n      overlayType,\n      customOverlayContent\n    } = this.props;\n    return !!overlayType || this.isGif() || !_isUndefined(customOverlayContent);\n  }\n  getVerifiedSource(source) {\n    if (_get(source, 'uri') === null || _get(source, 'uri') === '') {\n      // @ts-ignore\n      return {\n        ...source,\n        uri: undefined\n      };\n    }\n    return source;\n  }\n  getImageSource() {\n    const {\n      assetName,\n      assetGroup,\n      source\n    } = this.props;\n    if (!_isUndefined(assetName)) {\n      return getAsset(assetName, assetGroup);\n    }\n    if (this.sourceTransformer) {\n      return this.sourceTransformer(this.props);\n    }\n    return this.getVerifiedSource(source);\n  }\n  onError = event => {\n    if (event.nativeEvent.error) {\n      this.setState({\n        error: true\n      });\n      this.props.onError?.(event);\n    }\n  };\n  renderSvg = () => {\n    const {\n      source,\n      ...others\n    } = this.props;\n    return <SvgImage data={source} {...others} />;\n  };\n  renderImageWithContainer = () => {\n    const {\n      style,\n      cover,\n      modifiers,\n      width,\n      height\n    } = this.props;\n    const {\n      margins\n    } = modifiers;\n    return <View style={[{\n      width,\n      height\n    }, margins, style, styles.errorImageContainer, cover && styles.coverImage]}>\n        {this.renderImage(true)}\n      </View>;\n  };\n  renderImage = useImageInsideContainer => {\n    const {\n      error\n    } = this.state;\n    const source = error ? this.getVerifiedSource(this.props.errorSource) : this.getImageSource();\n    const {\n      tintColor,\n      style,\n      supportRTL,\n      cover,\n      aspectRatio,\n      overlayType,\n      overlayIntensity,\n      overlayColor,\n      customOverlayContent,\n      modifiers,\n      ...others\n    } = this.props;\n    const shouldFlipRTL = supportRTL && Constants.isRTL;\n    const ImageView = this.shouldUseImageBackground() ? ImageBackground : RNImage;\n    const {\n      margins\n    } = modifiers;\n    return (\n      // @ts-ignore\n      <ImageView style={[tintColor && {\n        tintColor\n      }, shouldFlipRTL && styles.rtlFlipped, cover && styles.coverImage, this.isGif() && styles.gifImage, aspectRatio && {\n        aspectRatio\n      }, !useImageInsideContainer && margins, useImageInsideContainer && styles.containImage, style, useImageInsideContainer && styles.shrink]} accessible={false} accessibilityRole={'image'} {...others} onError={this.onError} source={source}>\n        {(overlayType || customOverlayContent) && <Overlay type={overlayType} intensity={overlayIntensity} color={overlayColor} customContent={customOverlayContent} />}\n      </ImageView>\n    );\n  };\n  renderRegularImage() {\n    const {\n      error\n    } = this.state;\n    const {\n      useBackgroundContainer\n    } = this.props;\n    if (error || useBackgroundContainer) {\n      return this.renderImageWithContainer();\n    } else {\n      return this.renderImage(false);\n    }\n  }\n  render() {\n    const {\n      source\n    } = this.props;\n    if (isSvg(source)) {\n      return this.renderSvg();\n    } else {\n      return this.renderRegularImage();\n    }\n  }\n}\nconst styles = StyleSheet.create({\n  rtlFlipped: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  coverImage: {\n    width: '100%',\n    aspectRatio: 16 / 8\n  },\n  gifImage: {\n    overflow: 'hidden'\n  },\n  errorImageContainer: {\n    backgroundColor: Colors.grey70,\n    zIndex: -1\n  },\n  shrink: {\n    flexShrink: 1\n  },\n  containImage: {\n    resizeMode: 'contain'\n  }\n});\nhoistNonReactStatic(Image, RNImage);\nexport { Image };\nexport default asBaseComponent(Image, {\n  modifiersOptions: {\n    margins: true\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}