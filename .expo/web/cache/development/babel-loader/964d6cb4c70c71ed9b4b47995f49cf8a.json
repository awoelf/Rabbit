{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onMomentumScrollEnd\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useCallback, useContext, useMemo, useEffect } from 'react';\nimport TabBarContext from \"./TabBarContext\";\nimport Reanimated, { runOnJS, useAnimatedReaction, useAnimatedRef, useAnimatedScrollHandler, useSharedValue } from 'react-native-reanimated';\nimport { Constants } from \"../../commons/new\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FIX_RTL = Constants.isRTL && Constants.isAndroid;\nfunction PageCarousel(props) {\n  var onMomentumScrollEnd = props.onMomentumScrollEnd,\n    style = props.style,\n    others = _objectWithoutProperties(props, _excluded);\n  var carousel = useAnimatedRef();\n  var _useContext = useContext(TabBarContext),\n    itemsCount = _useContext.itemsCount,\n    currentPage = _useContext.currentPage,\n    targetPage = _useContext.targetPage,\n    pageWidth = _useContext.pageWidth,\n    setCurrentIndex = _useContext.setCurrentIndex;\n  var initialOffset = useMemo(function () {\n    return {\n      x: currentPage.value * pageWidth,\n      y: 0\n    };\n  }, []);\n  var indexChangeReason = useSharedValue(undefined);\n  var scrollToInitial = useCallback(function () {\n    if (Constants.isAndroid && currentPage.value) {\n      scrollToItem(currentPage.value);\n    }\n  }, []);\n  var calcOffset = useCallback(function () {\n    var _f = function _f(offset) {\n      return FIX_RTL ? pageWidth * (itemsCount - 1) - offset : offset;\n    };\n    _f._closure = {\n      FIX_RTL: FIX_RTL,\n      pageWidth: pageWidth,\n      itemsCount: itemsCount\n    };\n    _f.asString = \"function _f(offset){const{FIX_RTL,pageWidth,itemsCount}=jsThis._closure;{return FIX_RTL?pageWidth*(itemsCount-1)-offset:offset;}}\";\n    _f.__workletHash = 10908163045796;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\PageCarousel.js (37:33)\";\n    return _f;\n  }(), [pageWidth, itemsCount]);\n  var scrollHandler = useAnimatedScrollHandler({\n    onScroll: function () {\n      var _f = function _f(e) {\n        var xOffset = calcOffset(e.contentOffset.x);\n        var newIndex = xOffset / pageWidth;\n        if (indexChangeReason.value === 'byPress') {\n          indexChangeReason.value = undefined;\n        } else {\n          targetPage.value = newIndex;\n        }\n      };\n      _f._closure = {\n        calcOffset: calcOffset,\n        pageWidth: pageWidth,\n        indexChangeReason: indexChangeReason,\n        targetPage: targetPage\n      };\n      _f.asString = \"function _f(e){const{calcOffset,pageWidth,indexChangeReason,targetPage}=jsThis._closure;{const xOffset=calcOffset(e.contentOffset.x);const newIndex=xOffset/pageWidth;if(indexChangeReason.value==='byPress'){indexChangeReason.value=undefined;}else{targetPage.value=newIndex;}}}\";\n      _f.__workletHash = 2914680801226;\n      _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\PageCarousel.js (43:14)\";\n      return _f;\n    }(),\n    onMomentumEnd: function () {\n      var _f = function _f(e) {\n        var xOffset = calcOffset(e.contentOffset.x);\n        var newPage = Math.round(xOffset / pageWidth);\n        indexChangeReason.value = 'byScroll';\n        setCurrentIndex(newPage);\n      };\n      _f._closure = {\n        calcOffset: calcOffset,\n        pageWidth: pageWidth,\n        indexChangeReason: indexChangeReason,\n        setCurrentIndex: setCurrentIndex\n      };\n      _f.asString = \"function _f(e){const{calcOffset,pageWidth,indexChangeReason,setCurrentIndex}=jsThis._closure;{const xOffset=calcOffset(e.contentOffset.x);const newPage=Math.round(xOffset/pageWidth);indexChangeReason.value='byScroll';setCurrentIndex(newPage);}}\";\n      _f.__workletHash = 2370503116587;\n      _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\PageCarousel.js (57:19)\";\n      return _f;\n    }()\n  });\n  var scrollToItem = useCallback(function (index) {\n    var _carousel$current;\n    if (indexChangeReason.value === 'byScroll') {\n      indexChangeReason.value = undefined;\n    } else {\n      indexChangeReason.value = 'byPress';\n    }\n    var actualIndex = FIX_RTL ? itemsCount - index - 1 : index;\n    (_carousel$current = carousel.current) == null ? void 0 : _carousel$current.scrollTo({\n      x: actualIndex * pageWidth,\n      animated: false\n    });\n  }, [pageWidth, itemsCount]);\n  useAnimatedReaction(function () {\n    var _f = function _f() {\n      return currentPage.value;\n    };\n    _f._closure = {\n      currentPage: currentPage\n    };\n    _f.asString = \"function _f(){const{currentPage}=jsThis._closure;{return currentPage.value;}}\";\n    _f.__workletHash = 16845019634419;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\PageCarousel.js (76:22)\";\n    return _f;\n  }(), function () {\n    var _f = function _f(currIndex, prevIndex) {\n      if (prevIndex !== null && currIndex !== prevIndex) {\n        runOnJS(scrollToItem)(currIndex);\n      }\n    };\n    _f._closure = {\n      runOnJS: runOnJS,\n      scrollToItem: scrollToItem\n    };\n    _f.asString = \"function _f(currIndex,prevIndex){const{runOnJS,scrollToItem}=jsThis._closure;{if(prevIndex!==null&&currIndex!==prevIndex){runOnJS(scrollToItem)(currIndex);}}}\";\n    _f.__workletHash = 6988859797192;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\PageCarousel.js (78:5)\";\n    return _f;\n  }());\n  useEffect(function () {\n    var _carousel$current2;\n    (_carousel$current2 = carousel.current) == null ? void 0 : _carousel$current2.scrollTo({\n      x: currentPage.value * pageWidth,\n      animated: false\n    });\n  }, [pageWidth]);\n  var handleOnMomentumScrollEnd = useCallback(function (event) {\n    onMomentumScrollEnd == null ? void 0 : onMomentumScrollEnd(event);\n  }, [onMomentumScrollEnd]);\n  var _style = useMemo(function () {\n    return [{\n      width: pageWidth\n    }, style];\n  }, [pageWidth, style]);\n  return _jsx(Reanimated.ScrollView, _objectSpread(_objectSpread({}, others), {}, {\n    style: _style,\n    ref: carousel,\n    horizontal: true,\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: false,\n    onScroll: scrollHandler,\n    scrollEventThrottle: 16,\n    contentOffset: initialOffset,\n    onLayout: scrollToInitial,\n    onMomentumScrollEnd: handleOnMomentumScrollEnd\n  }));\n}\nexport default PageCarousel;","map":{"version":3,"names":["React","useCallback","useContext","useMemo","useEffect","TabBarContext","Reanimated","runOnJS","useAnimatedReaction","useAnimatedRef","useAnimatedScrollHandler","useSharedValue","Constants","FIX_RTL","isRTL","isAndroid","PageCarousel","props","onMomentumScrollEnd","style","others","carousel","itemsCount","currentPage","targetPage","pageWidth","setCurrentIndex","initialOffset","x","value","y","indexChangeReason","undefined","scrollToInitial","scrollToItem","calcOffset","offset","scrollHandler","onScroll","e","xOffset","contentOffset","newIndex","onMomentumEnd","newPage","Math","round","index","actualIndex","current","scrollTo","animated","currIndex","prevIndex","handleOnMomentumScrollEnd","event","_style","width"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/tabController/PageCarousel.js"],"sourcesContent":["import React, { useCallback, useContext, useMemo, useEffect } from 'react';\nimport TabBarContext from \"./TabBarContext\";\nimport Reanimated, { runOnJS, useAnimatedReaction, useAnimatedRef, useAnimatedScrollHandler, useSharedValue } from 'react-native-reanimated';\nimport { Constants } from \"../../commons/new\";\nconst FIX_RTL = Constants.isRTL && Constants.isAndroid;\n\n/**\n * @description: TabController's Page Carousel\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n * @notes: You must pass `asCarousel` flag to TabController and render your TabPages inside a PageCarousel\n */\nfunction PageCarousel(props) {\n  const {\n    onMomentumScrollEnd,\n    style,\n    ...others\n  } = props;\n  const carousel = useAnimatedRef();\n  const {\n    itemsCount,\n    currentPage,\n    targetPage,\n    pageWidth,\n    // carouselOffset,\n    setCurrentIndex\n  } = useContext(TabBarContext);\n  const initialOffset = useMemo(() => ({\n    x: currentPage.value * pageWidth,\n    y: 0\n  }), []);\n  const indexChangeReason = useSharedValue(undefined);\n  const scrollToInitial = useCallback(() => {\n    if (Constants.isAndroid && currentPage.value) {\n      scrollToItem(currentPage.value);\n    }\n  }, []);\n  const calcOffset = useCallback(offset => {\n    'worklet';\n\n    return FIX_RTL ? pageWidth * (itemsCount - 1) - offset : offset;\n  }, [pageWidth, itemsCount]);\n  const scrollHandler = useAnimatedScrollHandler({\n    onScroll: e => {\n      // carouselOffset.value = e.contentOffset.x;\n      const xOffset = calcOffset(e.contentOffset.x);\n      const newIndex = xOffset / pageWidth;\n      if (indexChangeReason.value === 'byPress') {\n        // Scroll was immediate and not by gesture\n        /* Round is for android when offset value has fraction */\n        // targetPage.value = withTiming(Math.round(newIndex));\n\n        indexChangeReason.value = undefined;\n      } else {\n        targetPage.value = newIndex;\n      }\n    },\n    onMomentumEnd: e => {\n      const xOffset = calcOffset(e.contentOffset.x);\n      const newPage = Math.round(xOffset / pageWidth);\n      indexChangeReason.value = 'byScroll';\n      setCurrentIndex(newPage);\n    }\n  });\n  const scrollToItem = useCallback(index => {\n    if (indexChangeReason.value === 'byScroll') {\n      indexChangeReason.value = undefined;\n    } else {\n      indexChangeReason.value = 'byPress';\n    }\n    const actualIndex = FIX_RTL ? itemsCount - index - 1 : index;\n    carousel.current?.scrollTo({\n      x: actualIndex * pageWidth,\n      animated: false\n    });\n  }, [pageWidth, itemsCount]);\n  useAnimatedReaction(() => {\n    return currentPage.value;\n  }, (currIndex, prevIndex) => {\n    if (prevIndex !== null && currIndex !== prevIndex) {\n      runOnJS(scrollToItem)(currIndex);\n    }\n  });\n  useEffect(() => {\n    carousel.current?.scrollTo({\n      x: currentPage.value * pageWidth,\n      animated: false\n    });\n  }, [pageWidth]);\n  const handleOnMomentumScrollEnd = useCallback(event => {\n    onMomentumScrollEnd?.(event);\n  }, [onMomentumScrollEnd]);\n  const _style = useMemo(() => {\n    return [{\n      width: pageWidth\n    }, style];\n  }, [pageWidth, style]);\n  return <Reanimated.ScrollView {...others} style={_style} ref={carousel} horizontal pagingEnabled showsHorizontalScrollIndicator={false} onScroll={scrollHandler} scrollEventThrottle={16} contentOffset={initialOffset} // iOS only\n  onLayout={scrollToInitial} // Android only\n  onMomentumScrollEnd={handleOnMomentumScrollEnd} // TODO: workaround for useAnimatedScrollHandler.onMomentumEnd not being called (https://github.com/software-mansion/react-native-reanimated/issues/2735)\n  />;\n}\n\nexport default PageCarousel;"],"mappings":"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"},"metadata":{},"sourceType":"module"}