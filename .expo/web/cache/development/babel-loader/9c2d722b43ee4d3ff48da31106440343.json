{"ast":null,"code":"import React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport Dash from \"../dash\";\nimport { LineTypes } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LINE_WIDTH = 2;\nvar ENTRY_POINT_HEIGHT = 2;\nvar Line = React.memo(function (props) {\n  var type = props.type,\n    _props$color = props.color,\n    color = _props$color === void 0 ? 'transparent' : _props$color,\n    entry = props.entry,\n    top = props.top,\n    style = props.style;\n  var solidLineStyle = useMemo(function () {\n    return [style, styles.solidLine, {\n      backgroundColor: color\n    }];\n  }, [color, style]);\n  var dashedLineStyle = useMemo(function () {\n    return [style, styles.dashedLine];\n  }, [style]);\n  var renderStartPoint = function renderStartPoint() {\n    if (entry) {\n      return _jsx(View, {\n        style: [styles.entryPoint, {\n          backgroundColor: color\n        }]\n      });\n    }\n  };\n  var renderLine = function renderLine() {\n    if (type === LineTypes.DASHED) {\n      return _jsx(Dash, {\n        vertical: true,\n        color: color,\n        containerStyle: dashedLineStyle\n      });\n    }\n    return _jsx(View, {\n      style: solidLineStyle\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [top && renderStartPoint(), renderLine(), !top && renderStartPoint()]\n  });\n});\nexport default Line;\nvar styles = StyleSheet.create({\n  entryPoint: {\n    width: 12,\n    height: ENTRY_POINT_HEIGHT\n  },\n  solidLine: {\n    width: LINE_WIDTH,\n    overflow: 'hidden'\n  },\n  dashedLine: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["React","useMemo","View","Dash","LineTypes","LINE_WIDTH","ENTRY_POINT_HEIGHT","Line","memo","props","type","color","entry","top","style","solidLineStyle","styles","solidLine","backgroundColor","dashedLineStyle","dashedLine","renderStartPoint","entryPoint","renderLine","DASHED","StyleSheet","create","width","height","overflow"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/timeline/Line.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport View from \"../view\";\nimport Dash from \"../dash\";\nimport { LineTypes } from \"./types\";\nconst LINE_WIDTH = 2;\nconst ENTRY_POINT_HEIGHT = 2;\nconst Line = React.memo(props => {\n  const {\n    type,\n    color = 'transparent',\n    entry,\n    top,\n    style\n  } = props;\n  const solidLineStyle = useMemo(() => {\n    return [style, styles.solidLine, {\n      backgroundColor: color\n    }];\n  }, [color, style]);\n  const dashedLineStyle = useMemo(() => {\n    return [style, styles.dashedLine];\n  }, [style]);\n  const renderStartPoint = () => {\n    if (entry) {\n      return <View style={[styles.entryPoint, {\n        backgroundColor: color\n      }]} />;\n    }\n  };\n  const renderLine = () => {\n    if (type === LineTypes.DASHED) {\n      return <Dash vertical color={color} containerStyle={dashedLineStyle} />;\n    }\n    return <View style={solidLineStyle} />;\n  };\n  return <>\n      {top && renderStartPoint()}\n      {renderLine()}\n      {!top && renderStartPoint()}\n    </>;\n});\nexport default Line;\nconst styles = StyleSheet.create({\n  entryPoint: {\n    width: 12,\n    height: ENTRY_POINT_HEIGHT\n  },\n  solidLine: {\n    width: LINE_WIDTH,\n    overflow: 'hidden'\n  },\n  dashedLine: {\n    overflow: 'hidden'\n  }\n});"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC;AAEvC,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,SAASC,SAAS;AAAkB;AAAA;AAAA;AACpC,IAAMC,UAAU,GAAG,CAAC;AACpB,IAAMC,kBAAkB,GAAG,CAAC;AAC5B,IAAMC,IAAI,GAAGP,KAAK,CAACQ,IAAI,CAAC,UAAAC,KAAK,EAAI;EAC/B,IACEC,IAAI,GAKFD,KAAK,CALPC,IAAI;IAAA,eAKFD,KAAK,CAJPE,KAAK;IAALA,KAAK,6BAAG,aAAa;IACrBC,KAAK,GAGHH,KAAK,CAHPG,KAAK;IACLC,GAAG,GAEDJ,KAAK,CAFPI,GAAG;IACHC,KAAK,GACHL,KAAK,CADPK,KAAK;EAEP,IAAMC,cAAc,GAAGd,OAAO,CAAC,YAAM;IACnC,OAAO,CAACa,KAAK,EAAEE,MAAM,CAACC,SAAS,EAAE;MAC/BC,eAAe,EAAEP;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,KAAK,EAAEG,KAAK,CAAC,CAAC;EAClB,IAAMK,eAAe,GAAGlB,OAAO,CAAC,YAAM;IACpC,OAAO,CAACa,KAAK,EAAEE,MAAM,CAACI,UAAU,CAAC;EACnC,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EACX,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC7B,IAAIT,KAAK,EAAE;MACT,OAAO,KAAC,IAAI;QAAC,KAAK,EAAE,CAACI,MAAM,CAACM,UAAU,EAAE;UACtCJ,eAAe,EAAEP;QACnB,CAAC;MAAE,EAAG;IACR;EACF,CAAC;EACD,IAAMY,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvB,IAAIb,IAAI,KAAKN,SAAS,CAACoB,MAAM,EAAE;MAC7B,OAAO,KAAC,IAAI;QAAC,QAAQ;QAAC,KAAK,EAAEb,KAAM;QAAC,cAAc,EAAEQ;MAAgB,EAAG;IACzE;IACA,OAAO,KAAC,IAAI;MAAC,KAAK,EAAEJ;IAAe,EAAG;EACxC,CAAC;EACD,OAAO;IAAA,WACFF,GAAG,IAAIQ,gBAAgB,EAAE,EACzBE,UAAU,EAAE,EACZ,CAACV,GAAG,IAAIQ,gBAAgB,EAAE;EAAA,EAC1B;AACP,CAAC,CAAC;AACF,eAAed,IAAI;AACnB,IAAMS,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC/BJ,UAAU,EAAE;IACVK,KAAK,EAAE,EAAE;IACTC,MAAM,EAAEtB;EACV,CAAC;EACDW,SAAS,EAAE;IACTU,KAAK,EAAEtB,UAAU;IACjBwB,QAAQ,EAAE;EACZ,CAAC;EACDT,UAAU,EAAE;IACVS,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}