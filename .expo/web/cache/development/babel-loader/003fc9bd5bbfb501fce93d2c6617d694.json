{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"size\", \"spacing\", \"color\", \"inactiveColor\"],\n  _excluded2 = [\"containerStyle\", \"animated\", \"horizontal\", \"animatedScrollOffset\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _times from \"lodash/times\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport PageControl from \"../pageControl\";\nimport * as presenter from \"./CarouselPresenter\";\nimport { CarouselProps, PageControlPosition } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { CarouselProps, PageControlPosition };\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n  var _super = _createSuper(Carousel);\n  function Carousel(props) {\n    var _this$props5, _this$props5$animated, _this$props6, _this$props6$animated, _props$pageHeight;\n    var _this;\n    _classCallCheck(this, Carousel);\n    _this = _super.call(this, props);\n    _this.carousel = React.createRef();\n    _this.onOrientationChanged = function () {\n      var _this$props = _this.props,\n        pageWidth = _this$props.pageWidth,\n        loop = _this$props.loop;\n      if (!pageWidth || loop) {\n        _this.orientationChange = true;\n        _this.setState({\n          pageWidth: _this.state.containerWidth || Constants.screenWidth\n        });\n      }\n    };\n    _this.getContainerMarginHorizontal = function () {\n      var _this$props$container = _this.props.containerMarginHorizontal,\n        containerMarginHorizontal = _this$props$container === void 0 ? 0 : _this$props$container;\n      return containerMarginHorizontal;\n    };\n    _this.getContainerPaddingVertical = function () {\n      var _this$props$container2 = _this.props.containerPaddingVertical,\n        containerPaddingVertical = _this$props$container2 === void 0 ? 0 : _this$props$container2;\n      return containerPaddingVertical;\n    };\n    _this.updateOffset = function () {\n      var _this$carousel;\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _presenter$calcOffset = presenter.calcOffset(_this.props, _this.state),\n        x = _presenter$calcOffset.x,\n        y = _presenter$calcOffset.y;\n      if ((_this$carousel = _this.carousel) != null && _this$carousel.current) {\n        _this.carousel.current.scrollTo({\n          x: x,\n          y: y,\n          animated: animated\n        });\n        if (Constants.isAndroid) {\n          _this.onMomentumScrollEnd();\n        }\n      }\n    };\n    _this.getSnapToOffsets = function () {\n      var _this$state = _this.state,\n        containerWidth = _this$state.containerWidth,\n        pageWidth = _this$state.pageWidth;\n      if (_this.shouldEnablePagination()) {\n        return undefined;\n      }\n      if (containerWidth) {\n        var spacings = pageWidth === containerWidth ? 0 : _this.getItemSpacings(_this.props);\n        var initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n        var snapToOffsets = _times(presenter.getChildrenLength(_this.props), function (index) {\n          return initialBreak + index * pageWidth + _this.getContainerMarginHorizontal();\n        });\n        return snapToOffsets;\n      }\n    };\n    _this.getInitialContentOffset = function (snapToOffsets) {\n      var _this$props2 = _this.props,\n        horizontal = _this$props2.horizontal,\n        initialPage = _this$props2.initialPage;\n      var initialOffset = _this.state.initialOffset;\n      var contentOffset = initialOffset;\n      if (snapToOffsets && initialPage !== undefined) {\n        var offset = initialPage === 0 ? 0 : snapToOffsets[initialPage - 1];\n        contentOffset = {\n          x: horizontal ? offset : 0,\n          y: horizontal ? 0 : offset\n        };\n      }\n      return contentOffset;\n    };\n    _this.onContentSizeChange = function () {\n      if (Constants.isAndroid) {\n        _this.updateOffset();\n      }\n    };\n    _this.onContainerLayout = function (_ref) {\n      var _ref$nativeEvent$layo = _ref.nativeEvent.layout,\n        containerWidth = _ref$nativeEvent$layo.width,\n        containerHeight = _ref$nativeEvent$layo.height;\n      var _this$props3 = _this.props,\n        _this$props3$pageWidt = _this$props3.pageWidth,\n        pageWidth = _this$props3$pageWidt === void 0 ? containerWidth : _this$props3$pageWidt,\n        _this$props3$pageHeig = _this$props3.pageHeight,\n        pageHeight = _this$props3$pageHeig === void 0 ? containerHeight : _this$props3$pageHeig,\n        horizontal = _this$props3.horizontal;\n      var initialOffset = presenter.calcOffset(_this.props, {\n        currentPage: _this.state.currentPage,\n        pageWidth: pageWidth,\n        pageHeight: pageHeight\n      });\n      if (horizontal && containerWidth || !horizontal && containerHeight) {\n        _this.setState({\n          containerWidth: containerWidth,\n          pageWidth: pageWidth,\n          pageHeight: pageHeight,\n          initialOffset: initialOffset\n        });\n      }\n    };\n    _this.onMomentumScrollEnd = function () {\n      var _this$state2 = _this.state,\n        currentStandingPage = _this$state2.currentStandingPage,\n        currentPage = _this$state2.currentPage;\n      var index = _this.getCalcIndex(currentPage);\n      var pagesCount = presenter.getChildrenLength(_this.props);\n      if (index < pagesCount) {\n        _this.setState({\n          currentStandingPage: index\n        });\n        if (currentStandingPage !== index) {\n          _this.props.onChangePage == null ? void 0 : _this.props.onChangePage(index, currentStandingPage, {\n            isAutoScrolled: _this.isAutoScrolled\n          });\n          _this.isAutoScrolled = false;\n        }\n      }\n    };\n    _this.onScroll = function (event) {\n      if (!_this.skippedInitialScroll) {\n        _this.skippedInitialScroll = true;\n        return;\n      }\n      var _this$props4 = _this.props,\n        loop = _this$props4.loop,\n        autoplay = _this$props4.autoplay,\n        horizontal = _this$props4.horizontal;\n      var _this$state3 = _this.state,\n        pageWidth = _this$state3.pageWidth,\n        pageHeight = _this$state3.pageHeight;\n      var offsetX = event.nativeEvent.contentOffset.x;\n      var offsetY = event.nativeEvent.contentOffset.y;\n      var offset = horizontal ? offsetX : offsetY;\n      var pageSize = horizontal ? pageWidth : pageHeight;\n      if (offset >= 0) {\n        if (!_this.orientationChange) {\n          var newPage = presenter.calcPageIndex(offset, _this.props, pageSize);\n          _this.setState({\n            currentPage: newPage\n          });\n        }\n        _this.orientationChange = false;\n      }\n      if (loop && presenter.isOutOfBounds(offsetX, _this.props, pageWidth)) {\n        _this.updateOffset();\n      }\n      if (autoplay) {\n        _this.resetAutoPlay();\n      }\n      _this.props.onScroll == null ? void 0 : _this.props.onScroll(event);\n    };\n    _this.onScrollEvent = Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: (_this$props5 = _this.props) == null ? void 0 : (_this$props5$animated = _this$props5.animatedScrollOffset) == null ? void 0 : _this$props5$animated.y,\n          x: (_this$props6 = _this.props) == null ? void 0 : (_this$props6$animated = _this$props6.animatedScrollOffset) == null ? void 0 : _this$props6$animated.x\n        }\n      }\n    }], {\n      useNativeDriver: true,\n      listener: _this.onScroll\n    });\n    _this.renderChild = function (child, key) {\n      if (child) {\n        var _this$state4 = _this.state,\n          pageWidth = _this$state4.pageWidth,\n          pageHeight = _this$state4.pageHeight;\n        var horizontal = _this.props.horizontal;\n        var paddingLeft = horizontal ? _this.shouldUsePageWidth() ? _this.getItemSpacings(_this.props) : undefined : 0;\n        var index = Number(key);\n        var length = presenter.getChildrenLength(_this.props);\n        var containerMarginHorizontal = _this.getContainerMarginHorizontal();\n        var marginLeft = index === 0 ? containerMarginHorizontal : 0;\n        var marginRight = index === length - 1 ? containerMarginHorizontal : 0;\n        var paddingVertical = _this.getContainerPaddingVertical();\n        return _jsxs(View, {\n          style: {\n            width: pageWidth,\n            height: !horizontal ? pageHeight : undefined,\n            paddingLeft: paddingLeft,\n            marginLeft: marginLeft,\n            marginRight: marginRight,\n            paddingVertical: paddingVertical\n          },\n          collapsable: false,\n          children: [_this.shouldAllowAccessibilityLayout() && !Number.isNaN(index) && _jsx(View, {\n            style: styles.hiddenText,\n            children: _jsx(Text, {\n              children: \"page \" + (index + 1) + \" out of \" + length\n            })\n          }), child]\n        }, key);\n      }\n    };\n    var defaultPageWidth = props.loop || !props.pageWidth ? Constants.screenWidth : props.pageWidth;\n    var _pageHeight = (_props$pageHeight = props.pageHeight) != null ? _props$pageHeight : Constants.screenHeight;\n    _this.isAutoScrolled = false;\n    _this.state = {\n      containerWidth: undefined,\n      currentPage: _this.shouldUsePageWidth() ? _this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage || 0,\n      pageWidth: defaultPageWidth,\n      pageHeight: _pageHeight,\n      initialOffset: presenter.calcOffset(props, {\n        currentPage: props.initialPage,\n        pageWidth: defaultPageWidth,\n        pageHeight: _pageHeight\n      }),\n      prevProps: props\n    };\n    return _this;\n  }\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n      if (this.props.autoplay) {\n        this.startAutoPlay();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n      if (this.autoplayTimer) {\n        clearInterval(this.autoplayTimer);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var autoplay = this.props.autoplay;\n      if (autoplay && !prevProps.autoplay) {\n        this.startAutoPlay();\n      } else if (!autoplay && prevProps.autoplay) {\n        this.stopAutoPlay();\n      }\n    }\n  }, {\n    key: \"getItemSpacings\",\n    value: function getItemSpacings(props) {\n      var _props$itemSpacings = props.itemSpacings,\n        itemSpacings = _props$itemSpacings === void 0 ? 16 : _props$itemSpacings;\n      return itemSpacings;\n    }\n  }, {\n    key: \"startAutoPlay\",\n    value: function startAutoPlay() {\n      var _this2 = this;\n      this.autoplayTimer = setInterval(function () {\n        _this2.isAutoScrolled = true;\n        _this2.goToNextPage();\n      }, this.props.autoplayInterval);\n    }\n  }, {\n    key: \"stopAutoPlay\",\n    value: function stopAutoPlay() {\n      if (this.autoplayTimer) {\n        clearInterval(this.autoplayTimer);\n      }\n    }\n  }, {\n    key: \"resetAutoPlay\",\n    value: function resetAutoPlay() {\n      this.stopAutoPlay();\n      this.startAutoPlay();\n    }\n  }, {\n    key: \"goToPage\",\n    value: function goToPage(pageIndex) {\n      var _this3 = this;\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.setState({\n        currentPage: this.getCalcIndex(pageIndex)\n      }, function () {\n        return _this3.updateOffset(animated);\n      });\n    }\n  }, {\n    key: \"goToNextPage\",\n    value: function goToNextPage() {\n      var currentPage = this.state.currentPage;\n      var pagesCount = presenter.getChildrenLength(this.props);\n      var loop = this.props.loop;\n      var nextPageIndex;\n      if (loop) {\n        nextPageIndex = currentPage + 1;\n      } else {\n        nextPageIndex = Math.min(pagesCount - 1, currentPage + 1);\n      }\n      this.goToPage(nextPageIndex, true);\n      if (loop && currentPage === pagesCount) {\n        this.goToPage(0, false);\n      }\n    }\n  }, {\n    key: \"getCalcIndex\",\n    value: function getCalcIndex(index) {\n      if (Constants.isRTL && Constants.isAndroid) {\n        var length = presenter.getChildrenLength(this.props) - 1;\n        return length - index;\n      }\n      return index;\n    }\n  }, {\n    key: \"shouldUsePageWidth\",\n    value: function shouldUsePageWidth() {\n      var _this$props7 = this.props,\n        loop = _this$props7.loop,\n        pageWidth = _this$props7.pageWidth;\n      return !loop && pageWidth;\n    }\n  }, {\n    key: \"shouldEnablePagination\",\n    value: function shouldEnablePagination() {\n      var _this$props8 = this.props,\n        pagingEnabled = _this$props8.pagingEnabled,\n        horizontal = _this$props8.horizontal;\n      return horizontal ? pagingEnabled && !this.shouldUsePageWidth() : true;\n    }\n  }, {\n    key: \"shouldAllowAccessibilityLayout\",\n    value: function shouldAllowAccessibilityLayout() {\n      var allowAccessibleLayout = this.props.allowAccessibleLayout;\n      return allowAccessibleLayout && Constants.accessibility.isScreenReaderEnabled;\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this4 = this;\n      var _this$props9 = this.props,\n        children = _this$props9.children,\n        loop = _this$props9.loop;\n      var length = presenter.getChildrenLength(this.props);\n      var childrenArray = React.Children.map(children, function (child, index) {\n        return _this4.renderChild(child, \"\" + index);\n      });\n      if (loop && childrenArray) {\n        childrenArray.unshift(this.renderChild(children[length - 1], length - 1 + \"-clone\"));\n        childrenArray.push(this.renderChild(children[0], 0 + \"-clone\"));\n      }\n      return childrenArray;\n    }\n  }, {\n    key: \"renderPageControl\",\n    value: function renderPageControl() {\n      var _this$props10 = this.props,\n        pageControlPosition = _this$props10.pageControlPosition,\n        _this$props10$pageCon = _this$props10.pageControlProps,\n        pageControlProps = _this$props10$pageCon === void 0 ? {} : _this$props10$pageCon;\n      if (pageControlPosition) {\n        var _pageControlProps$siz = pageControlProps.size,\n          size = _pageControlProps$siz === void 0 ? 6 : _pageControlProps$siz,\n          _pageControlProps$spa = pageControlProps.spacing,\n          spacing = _pageControlProps$spa === void 0 ? 8 : _pageControlProps$spa,\n          _pageControlProps$col = pageControlProps.color,\n          color = _pageControlProps$col === void 0 ? Colors.$backgroundNeutralHeavy : _pageControlProps$col,\n          _pageControlProps$ina = pageControlProps.inactiveColor,\n          inactiveColor = _pageControlProps$ina === void 0 ? Colors.$backgroundDisabled : _pageControlProps$ina,\n          others = _objectWithoutProperties(pageControlProps, _excluded);\n        var pagesCount = presenter.getChildrenLength(this.props);\n        var containerStyle = pageControlPosition === PageControlPosition.UNDER ? {\n          marginVertical: 16 - this.getContainerPaddingVertical()\n        } : styles.pageControlContainerStyle;\n        return _jsx(PageControl, _objectSpread(_objectSpread({\n          size: size,\n          spacing: spacing,\n          containerStyle: containerStyle,\n          inactiveColor: inactiveColor,\n          color: color\n        }, others), {}, {\n          numOfPages: pagesCount,\n          currentPage: this.getCalcIndex(this.state.currentPage)\n        }));\n      }\n    }\n  }, {\n    key: \"renderCounter\",\n    value: function renderCounter() {\n      var _this$props11 = this.props,\n        pageWidth = _this$props11.pageWidth,\n        showCounter = _this$props11.showCounter,\n        counterTextStyle = _this$props11.counterTextStyle;\n      var currentStandingPage = this.state.currentStandingPage;\n      var pagesCount = presenter.getChildrenLength(this.props);\n      if (showCounter && !pageWidth) {\n        return _jsx(View, {\n          center: true,\n          style: styles.counter,\n          children: _jsxs(Text, {\n            grey80: true,\n            text90: true,\n            style: [{\n              fontWeight: 'bold'\n            }, counterTextStyle],\n            children: [currentStandingPage + 1, \"/\", pagesCount]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderAccessibleLayout\",\n    value: function renderAccessibleLayout() {\n      var _this5 = this;\n      var _this$props12 = this.props,\n        containerStyle = _this$props12.containerStyle,\n        children = _this$props12.children,\n        testID = _this$props12.testID;\n      return _jsx(View, {\n        style: containerStyle,\n        onLayout: this.onContainerLayout,\n        children: _jsx(ScrollView, {\n          testID: testID,\n          ref: this.carousel,\n          showsVerticalScrollIndicator: false,\n          pagingEnabled: true,\n          onContentSizeChange: this.onContentSizeChange,\n          onScroll: this.onScroll,\n          onMomentumScrollEnd: this.onMomentumScrollEnd,\n          children: React.Children.map(children, function (child, index) {\n            return _this5.renderChild(child, \"\" + index);\n          })\n        })\n      });\n    }\n  }, {\n    key: \"renderCarousel\",\n    value: function renderCarousel() {\n      var _this$props13 = this.props,\n        containerStyle = _this$props13.containerStyle,\n        animated = _this$props13.animated,\n        horizontal = _this$props13.horizontal,\n        animatedScrollOffset = _this$props13.animatedScrollOffset,\n        others = _objectWithoutProperties(_this$props13, _excluded2);\n      var scrollContainerStyle = this.shouldUsePageWidth() ? {\n        paddingRight: this.getItemSpacings(this.props)\n      } : undefined;\n      var snapToOffsets = this.getSnapToOffsets();\n      var marginBottom = Math.max(0, this.getContainerPaddingVertical() - 16);\n      var ScrollContainer = animatedScrollOffset ? Animated.ScrollView : ScrollView;\n      var contentOffset = this.getInitialContentOffset(snapToOffsets);\n      return _jsxs(View, {\n        animated: animated,\n        style: [{\n          marginBottom: marginBottom\n        }, containerStyle],\n        onLayout: this.onContainerLayout,\n        children: [_jsx(ScrollContainer, _objectSpread(_objectSpread({\n          showsHorizontalScrollIndicator: false,\n          showsVerticalScrollIndicator: false,\n          decelerationRate: \"fast\",\n          scrollEventThrottle: 200\n        }, others), {}, {\n          ref: this.carousel,\n          onScroll: animatedScrollOffset ? this.onScrollEvent : this.onScroll,\n          contentContainerStyle: scrollContainerStyle,\n          horizontal: horizontal,\n          pagingEnabled: this.shouldEnablePagination(),\n          snapToOffsets: snapToOffsets,\n          contentOffset: contentOffset,\n          onMomentumScrollEnd: this.onMomentumScrollEnd,\n          children: this.renderChildren()\n        })), this.renderPageControl(), this.renderCounter()]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.shouldAllowAccessibilityLayout() ? this.renderAccessibleLayout() : this.renderCarousel();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var currentPage = prevState.currentPage,\n        prevProps = prevState.prevProps;\n      var pageWidth = prevProps.pageWidth,\n        pageHeight = prevProps.pageHeight;\n      var nextPageWidth = nextProps.pageWidth,\n        nextPageHeight = nextProps.pageHeight;\n      if (!_isUndefined(nextPageWidth) && pageWidth !== nextPageWidth || !_isUndefined(nextPageHeight) && pageHeight !== nextPageHeight) {\n        var _pageWidth = nextPageWidth;\n        var _pageHeight2 = nextPageHeight;\n        return {\n          pageWidth: _pageWidth,\n          initialOffset: presenter.calcOffset(prevProps, {\n            currentPage: currentPage,\n            pageWidth: _pageWidth,\n            pageHeight: _pageHeight2\n          }),\n          prevProps: nextProps\n        };\n      }\n      if (prevProps.containerMarginHorizontal !== nextProps.containerMarginHorizontal || prevProps.loop !== nextProps.loop) {\n        return {\n          prevProps: nextProps\n        };\n      }\n      return null;\n    }\n  }]);\n  return Carousel;\n}(Component);\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = {\n  initialPage: 0,\n  pagingEnabled: true,\n  autoplay: false,\n  autoplayInterval: 4000,\n  horizontal: true\n};\nCarousel.pageControlPositions = PageControlPosition;\nexport { Carousel };\nexport default asBaseComponent(Carousel);\nvar styles = StyleSheet.create({\n  counter: {\n    paddingHorizontal: 8,\n    paddingVertical: 3,\n    borderRadius: 20,\n    backgroundColor: Colors.rgba(Colors.black, 0.6),\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  pageControlContainerStyle: {\n    position: 'absolute',\n    bottom: 16,\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    position: 'absolute',\n    width: 1\n  }\n});","map":{"version":3,"names":["_times","_isUndefined","React","Component","Colors","asBaseComponent","Constants","View","Text","PageControl","presenter","CarouselProps","PageControlPosition","Carousel","props","carousel","createRef","onOrientationChanged","pageWidth","loop","orientationChange","setState","state","containerWidth","screenWidth","getContainerMarginHorizontal","containerMarginHorizontal","getContainerPaddingVertical","containerPaddingVertical","updateOffset","animated","calcOffset","x","y","current","scrollTo","isAndroid","onMomentumScrollEnd","getSnapToOffsets","shouldEnablePagination","undefined","spacings","getItemSpacings","initialBreak","snapToOffsets","getChildrenLength","index","getInitialContentOffset","horizontal","initialPage","initialOffset","contentOffset","offset","onContentSizeChange","onContainerLayout","nativeEvent","layout","width","containerHeight","height","pageHeight","currentPage","currentStandingPage","getCalcIndex","pagesCount","onChangePage","isAutoScrolled","onScroll","event","skippedInitialScroll","autoplay","offsetX","offsetY","pageSize","newPage","calcPageIndex","isOutOfBounds","resetAutoPlay","onScrollEvent","Animated","animatedScrollOffset","useNativeDriver","listener","renderChild","child","key","paddingLeft","shouldUsePageWidth","Number","length","marginLeft","marginRight","paddingVertical","shouldAllowAccessibilityLayout","isNaN","styles","hiddenText","defaultPageWidth","screenHeight","prevProps","dimensionsChangeListener","addDimensionsEventListener","startAutoPlay","removeDimensionsEventListener","autoplayTimer","clearInterval","stopAutoPlay","itemSpacings","setInterval","goToNextPage","autoplayInterval","pageIndex","nextPageIndex","Math","min","goToPage","isRTL","pagingEnabled","allowAccessibleLayout","accessibility","isScreenReaderEnabled","children","childrenArray","Children","map","unshift","push","pageControlPosition","pageControlProps","size","spacing","color","$backgroundNeutralHeavy","inactiveColor","$backgroundDisabled","others","containerStyle","UNDER","marginVertical","pageControlContainerStyle","showCounter","counterTextStyle","counter","fontWeight","testID","scrollContainerStyle","paddingRight","marginBottom","max","ScrollContainer","ScrollView","renderChildren","renderPageControl","renderCounter","renderAccessibleLayout","renderCarousel","nextProps","prevState","nextPageWidth","nextPageHeight","displayName","defaultProps","pageControlPositions","StyleSheet","create","paddingHorizontal","borderRadius","backgroundColor","rgba","black","position","top","right","bottom","alignSelf"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/carousel/index.js"],"sourcesContent":["import _times from \"lodash/times\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { Component } from 'react';\nimport { Animated, ScrollView, StyleSheet } from 'react-native';\nimport { Colors } from \"../../style\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport PageControl from \"../pageControl\";\nimport * as presenter from \"./CarouselPresenter\";\nimport { CarouselProps, PageControlPosition } from \"./types\";\nexport { CarouselProps, PageControlPosition };\n/**\n * @description: Carousel for scrolling pages horizontally\n * @gif: https://user-images.githubusercontent.com/1780255/107120258-40b5bc80-6895-11eb-9596-8065d3a940ff.gif, https://user-images.githubusercontent.com/1780255/107120257-3eebf900-6895-11eb-9800-402e9e0dc692.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.tsx\n * @extends: ScrollView\n * @extendsLink: https://reactnative.dev/docs/scrollview\n * @notes: This is a screen width Component\n */\nclass Carousel extends Component {\n  static displayName = 'Carousel';\n  static defaultProps = {\n    initialPage: 0,\n    pagingEnabled: true,\n    autoplay: false,\n    autoplayInterval: 4000,\n    horizontal: true\n  };\n  static pageControlPositions = PageControlPosition;\n  carousel = React.createRef();\n  constructor(props) {\n    super(props);\n    const defaultPageWidth = props.loop || !props.pageWidth ? Constants.screenWidth : props.pageWidth;\n    const pageHeight = props.pageHeight ?? Constants.screenHeight;\n    this.isAutoScrolled = false;\n    this.state = {\n      containerWidth: undefined,\n      // @ts-ignore (defaultProps)\n      currentPage: this.shouldUsePageWidth() ? this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage || 0,\n      pageWidth: defaultPageWidth,\n      pageHeight,\n      initialOffset: presenter.calcOffset(props, {\n        // @ts-ignore (defaultProps)\n        currentPage: props.initialPage,\n        pageWidth: defaultPageWidth,\n        pageHeight\n      }),\n      prevProps: props\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentPage,\n      prevProps\n    } = prevState;\n    const {\n      pageWidth,\n      pageHeight\n    } = prevProps;\n    const {\n      pageWidth: nextPageWidth,\n      pageHeight: nextPageHeight\n    } = nextProps;\n    if (!_isUndefined(nextPageWidth) && pageWidth !== nextPageWidth || !_isUndefined(nextPageHeight) && pageHeight !== nextPageHeight) {\n      const pageWidth = nextPageWidth;\n      const pageHeight = nextPageHeight;\n      return {\n        pageWidth,\n        initialOffset: presenter.calcOffset(prevProps, {\n          currentPage,\n          pageWidth,\n          pageHeight\n        }),\n        prevProps: nextProps\n      };\n    }\n\n    // for presenter.calcOffset() props parameter\n    if (prevProps.containerMarginHorizontal !== nextProps.containerMarginHorizontal || prevProps.loop !== nextProps.loop) {\n      return {\n        prevProps: nextProps\n      };\n    }\n    return null;\n  }\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n    if (this.props.autoplay) {\n      this.startAutoPlay();\n    }\n  }\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      autoplay\n    } = this.props;\n    if (autoplay && !prevProps.autoplay) {\n      this.startAutoPlay();\n    } else if (!autoplay && prevProps.autoplay) {\n      this.stopAutoPlay();\n    }\n  }\n  onOrientationChanged = () => {\n    const {\n      pageWidth,\n      loop\n    } = this.props;\n    if (!pageWidth || loop) {\n      this.orientationChange = true;\n      // HACK: setting to containerWidth for Android's call when view disappear\n      this.setState({\n        pageWidth: this.state.containerWidth || Constants.screenWidth\n      });\n    }\n  };\n  getItemSpacings(props) {\n    const {\n      itemSpacings = 16\n    } = props;\n    return itemSpacings;\n  }\n  getContainerMarginHorizontal = () => {\n    const {\n      containerMarginHorizontal = 0\n    } = this.props;\n    return containerMarginHorizontal;\n  };\n\n  // TODO: RN 61.5 - try to remove this from the children and move to the ScrollView's contentContainerStyle\n  // style={{overflow: 'visible'}} does not work in ScrollView on Android, maybe it will be fixed in the future\n  getContainerPaddingVertical = () => {\n    const {\n      containerPaddingVertical = 0\n    } = this.props;\n    return containerPaddingVertical;\n  };\n  updateOffset = (animated = false) => {\n    const {\n      x,\n      y\n    } = presenter.calcOffset(this.props, this.state);\n    if (this.carousel?.current) {\n      this.carousel.current.scrollTo({\n        x,\n        y,\n        animated\n      });\n      if (Constants.isAndroid) {\n        // this is done to handle onMomentumScrollEnd not being called in Android:\n        // https://github.com/facebook/react-native/issues/11693\n        // https://github.com/facebook/react-native/issues/19246\n        this.onMomentumScrollEnd();\n      }\n    }\n  };\n  startAutoPlay() {\n    this.autoplayTimer = setInterval(() => {\n      this.isAutoScrolled = true;\n      this.goToNextPage();\n    }, this.props.autoplayInterval);\n  }\n  stopAutoPlay() {\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer);\n    }\n  }\n  resetAutoPlay() {\n    this.stopAutoPlay();\n    this.startAutoPlay();\n  }\n  goToPage(pageIndex, animated = true) {\n    this.setState({\n      currentPage: this.getCalcIndex(pageIndex)\n    }, () => this.updateOffset(animated));\n  }\n  goToNextPage() {\n    const {\n      currentPage\n    } = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n    const {\n      loop\n    } = this.props;\n    let nextPageIndex;\n    if (loop) {\n      nextPageIndex = currentPage + 1;\n    } else {\n      nextPageIndex = Math.min(pagesCount - 1, currentPage + 1);\n    }\n    this.goToPage(nextPageIndex, true);\n\n    // in case of a loop, after we advanced right to the cloned first page,\n    // we return silently to the real first page\n    if (loop && currentPage === pagesCount) {\n      this.goToPage(0, false);\n    }\n  }\n  getCalcIndex(index) {\n    // to handle scrollView index issue in Android's RTL layout\n    if (Constants.isRTL && Constants.isAndroid) {\n      const length = presenter.getChildrenLength(this.props) - 1;\n      return length - index;\n    }\n    return index;\n  }\n\n  // TODO: currently this returns pagesCount offsets, not starting from 0; look into changing this into (pagesCount - 1) or to have the 1st item as 0\n  getSnapToOffsets = () => {\n    const {\n      containerWidth,\n      pageWidth\n    } = this.state;\n    if (this.shouldEnablePagination()) {\n      return undefined;\n    }\n    if (containerWidth) {\n      const spacings = pageWidth === containerWidth ? 0 : this.getItemSpacings(this.props);\n      const initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n      const snapToOffsets = _times(presenter.getChildrenLength(this.props), index => initialBreak + index * pageWidth + this.getContainerMarginHorizontal());\n      return snapToOffsets;\n    }\n  };\n  getInitialContentOffset = snapToOffsets => {\n    const {\n      horizontal,\n      initialPage\n    } = this.props;\n    const {\n      initialOffset\n    } = this.state;\n    let contentOffset = initialOffset;\n    if (snapToOffsets && initialPage !== undefined) {\n      const offset = initialPage === 0 ? 0 : snapToOffsets[initialPage - 1];\n      contentOffset = {\n        x: horizontal ? offset : 0,\n        y: horizontal ? 0 : offset\n      };\n    }\n    return contentOffset;\n  };\n  shouldUsePageWidth() {\n    const {\n      loop,\n      pageWidth\n    } = this.props;\n    return !loop && pageWidth;\n  }\n  shouldEnablePagination() {\n    const {\n      pagingEnabled,\n      horizontal\n    } = this.props;\n    return horizontal ? pagingEnabled && !this.shouldUsePageWidth() : true;\n  }\n  shouldAllowAccessibilityLayout() {\n    const {\n      allowAccessibleLayout\n    } = this.props;\n    return allowAccessibleLayout && Constants.accessibility.isScreenReaderEnabled;\n  }\n  onContentSizeChange = () => {\n    // this is to handle initial scroll position (content offset)\n    if (Constants.isAndroid) {\n      this.updateOffset();\n    }\n  };\n  onContainerLayout = ({\n    nativeEvent: {\n      layout: {\n        width: containerWidth,\n        height: containerHeight\n      }\n    }\n  }) => {\n    const {\n      pageWidth = containerWidth,\n      pageHeight = containerHeight,\n      horizontal\n    } = this.props;\n    const initialOffset = presenter.calcOffset(this.props, {\n      currentPage: this.state.currentPage,\n      pageWidth,\n      pageHeight\n    });\n\n    // NOTE: This is to avoid resetting containerWidth to 0 - an issue that happens\n    // on Android in some case when onLayout is re-triggered\n    if (horizontal && containerWidth || !horizontal && containerHeight) {\n      this.setState({\n        containerWidth,\n        pageWidth,\n        pageHeight,\n        initialOffset\n      });\n    }\n  };\n  onMomentumScrollEnd = () => {\n    // finished full page scroll\n    const {\n      currentStandingPage,\n      currentPage\n    } = this.state;\n    const index = this.getCalcIndex(currentPage);\n    const pagesCount = presenter.getChildrenLength(this.props);\n    if (index < pagesCount) {\n      this.setState({\n        currentStandingPage: index\n      });\n      if (currentStandingPage !== index) {\n        this.props.onChangePage?.(index, currentStandingPage, {\n          isAutoScrolled: this.isAutoScrolled\n        });\n        this.isAutoScrolled = false;\n      }\n    }\n  };\n  onScroll = event => {\n    if (!this.skippedInitialScroll) {\n      this.skippedInitialScroll = true;\n      return;\n    }\n    const {\n      loop,\n      autoplay,\n      horizontal\n    } = this.props;\n    const {\n      pageWidth,\n      pageHeight\n    } = this.state;\n    const offsetX = event.nativeEvent.contentOffset.x;\n    const offsetY = event.nativeEvent.contentOffset.y;\n    const offset = horizontal ? offsetX : offsetY;\n    const pageSize = horizontal ? pageWidth : pageHeight;\n    if (offset >= 0) {\n      if (!this.orientationChange) {\n        // Avoid new calculation on orientation change\n        const newPage = presenter.calcPageIndex(offset, this.props, pageSize);\n        this.setState({\n          currentPage: newPage\n        });\n      }\n      this.orientationChange = false;\n    }\n    if (loop && presenter.isOutOfBounds(offsetX, this.props, pageWidth)) {\n      this.updateOffset();\n    }\n    if (autoplay) {\n      // reset the timer to avoid auto scroll immediately after manual one\n      this.resetAutoPlay();\n    }\n    this.props.onScroll?.(event);\n  };\n  onScrollEvent = Animated.event([{\n    nativeEvent: {\n      contentOffset:\n      // @ts-ignore\n      {\n        y: this.props?.animatedScrollOffset?.y,\n        x: this.props?.animatedScrollOffset?.x\n      }\n    }\n  }], {\n    useNativeDriver: true,\n    listener: this.onScroll\n  });\n  renderChild = (child, key) => {\n    if (child) {\n      const {\n        pageWidth,\n        pageHeight\n      } = this.state;\n      const {\n        horizontal\n      } = this.props;\n      const paddingLeft = horizontal ? this.shouldUsePageWidth() ? this.getItemSpacings(this.props) : undefined : 0;\n      const index = Number(key);\n      const length = presenter.getChildrenLength(this.props);\n      const containerMarginHorizontal = this.getContainerMarginHorizontal();\n      const marginLeft = index === 0 ? containerMarginHorizontal : 0;\n      const marginRight = index === length - 1 ? containerMarginHorizontal : 0;\n      const paddingVertical = this.getContainerPaddingVertical();\n      return <View style={{\n        width: pageWidth,\n        height: !horizontal ? pageHeight : undefined,\n        paddingLeft,\n        marginLeft,\n        marginRight,\n        paddingVertical\n      }} key={key} collapsable={false}>\n          {this.shouldAllowAccessibilityLayout() && !Number.isNaN(index) && <View style={styles.hiddenText}>\n              <Text>{`page ${index + 1} out of ${length}`}</Text>\n            </View>}\n          {child}\n        </View>;\n    }\n  };\n  renderChildren() {\n    const {\n      children,\n      loop\n    } = this.props;\n    const length = presenter.getChildrenLength(this.props);\n    const childrenArray = React.Children.map(children, (child, index) => {\n      return this.renderChild(child, `${index}`);\n    });\n    if (loop && childrenArray) {\n      // @ts-ignore\n      childrenArray.unshift(this.renderChild(children[length - 1], `${length - 1}-clone`));\n      // @ts-ignore\n      childrenArray.push(this.renderChild(children[0], `${0}-clone`));\n    }\n    return childrenArray;\n  }\n  renderPageControl() {\n    const {\n      pageControlPosition,\n      pageControlProps = {}\n    } = this.props;\n    if (pageControlPosition) {\n      const {\n        size = 6,\n        spacing = 8,\n        color = Colors.$backgroundNeutralHeavy,\n        inactiveColor = Colors.$backgroundDisabled,\n        ...others\n      } = pageControlProps;\n      const pagesCount = presenter.getChildrenLength(this.props);\n      const containerStyle = pageControlPosition === PageControlPosition.UNDER ? {\n        marginVertical: 16 - this.getContainerPaddingVertical()\n      } : styles.pageControlContainerStyle;\n      return <PageControl size={size} spacing={spacing} containerStyle={containerStyle} inactiveColor={inactiveColor} color={color} {...others} numOfPages={pagesCount} currentPage={this.getCalcIndex(this.state.currentPage)} />;\n    }\n  }\n  renderCounter() {\n    const {\n      pageWidth,\n      showCounter,\n      counterTextStyle\n    } = this.props;\n    const {\n      currentStandingPage\n    } = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n    if (showCounter && !pageWidth) {\n      return <View center style={styles.counter}>\n          <Text grey80 text90 style={[{\n          fontWeight: 'bold'\n        }, counterTextStyle]}>\n            {currentStandingPage + 1}/{pagesCount}\n          </Text>\n        </View>;\n    }\n  }\n  renderAccessibleLayout() {\n    const {\n      containerStyle,\n      children,\n      testID\n    } = this.props;\n    return <View style={containerStyle} onLayout={this.onContainerLayout}>\n        <ScrollView testID={testID} ref={this.carousel} showsVerticalScrollIndicator={false} pagingEnabled onContentSizeChange={this.onContentSizeChange} onScroll={this.onScroll} onMomentumScrollEnd={this.onMomentumScrollEnd}>\n          {React.Children.map(children, (child, index) => {\n          return this.renderChild(child, `${index}`);\n        })}\n        </ScrollView>\n      </View>;\n  }\n  renderCarousel() {\n    const {\n      containerStyle,\n      animated,\n      horizontal,\n      animatedScrollOffset,\n      ...others\n    } = this.props;\n    const scrollContainerStyle = this.shouldUsePageWidth() ? {\n      paddingRight: this.getItemSpacings(this.props)\n    } : undefined;\n    const snapToOffsets = this.getSnapToOffsets();\n    const marginBottom = Math.max(0, this.getContainerPaddingVertical() - 16);\n    const ScrollContainer = animatedScrollOffset ? Animated.ScrollView : ScrollView;\n    const contentOffset = this.getInitialContentOffset(snapToOffsets);\n    return <View animated={animated} style={[{\n      marginBottom\n    }, containerStyle]} onLayout={this.onContainerLayout}>\n        <ScrollContainer showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false} decelerationRate=\"fast\" scrollEventThrottle={200} {...others} ref={this.carousel} onScroll={animatedScrollOffset ? this.onScrollEvent : this.onScroll} contentContainerStyle={scrollContainerStyle} horizontal={horizontal} pagingEnabled={this.shouldEnablePagination()} snapToOffsets={snapToOffsets} contentOffset={contentOffset}\n      // onContentSizeChange={this.onContentSizeChange}\n      onMomentumScrollEnd={this.onMomentumScrollEnd}>\n          {this.renderChildren()}\n        </ScrollContainer>\n        {this.renderPageControl()}\n        {this.renderCounter()}\n      </View>;\n  }\n  render() {\n    return this.shouldAllowAccessibilityLayout() ? this.renderAccessibleLayout() : this.renderCarousel();\n  }\n}\nexport { Carousel }; // For tests\nexport default asBaseComponent(Carousel);\nconst styles = StyleSheet.create({\n  counter: {\n    paddingHorizontal: 8,\n    paddingVertical: 3,\n    borderRadius: 20,\n    backgroundColor: Colors.rgba(Colors.black, 0.6),\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  pageControlContainerStyle: {\n    position: 'absolute',\n    bottom: 16,\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    position: 'absolute',\n    width: 1\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}