{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _get from \"lodash/get\";\nimport _toUpper from \"lodash/toUpper\";\nimport React, { PureComponent } from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors, Typography } from \"../../style\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Dialog from \"../dialog\";\nimport Button from \"../button\";\nimport ColorSliderGroup from \"../slider/ColorSliderGroup\";\nimport PanningProvider from \"../panningViews/panningProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar KEYBOARD_HEIGHT = 216;\nvar ColorPickerDialog = function (_PureComponent) {\n  _inherits(ColorPickerDialog, _PureComponent);\n  var _super = _createSuper(ColorPickerDialog);\n  function ColorPickerDialog(props) {\n    var _this;\n    _classCallCheck(this, ColorPickerDialog);\n    _this = _super.call(this, props);\n    _this.textInput = React.createRef();\n    _this.keyboardDidShow = function (e) {\n      if (Constants.isIOS && _this.state.keyboardHeight !== e.endCoordinates.height) {\n        _this.setState({\n          keyboardHeight: e.endCoordinates.height\n        });\n      }\n      _this.changeHeight(0);\n    };\n    _this.keyboardDidHide = function () {\n      _this.changeHeight(KEYBOARD_HEIGHT);\n    };\n    _this.onFocus = function () {\n      _this.changeHeight(0);\n    };\n    _this.setFocus = function () {\n      var _this$textInput, _this$textInput$curre;\n      (_this$textInput = _this.textInput) == null ? void 0 : (_this$textInput$curre = _this$textInput.current) == null ? void 0 : _this$textInput$curre.focus();\n    };\n    _this.applyColor = function (text) {\n      var _this$getValidColorSt = _this.getValidColorString(text),\n        hex = _this$getValidColorSt.hex,\n        valid = _this$getValidColorSt.valid;\n      if (hex) {\n        _this.setState({\n          color: Colors.getHSL(hex),\n          text: text,\n          valid: valid\n        });\n      } else {\n        _this.setState({\n          text: text,\n          valid: valid\n        });\n      }\n    };\n    _this.onSliderValueChange = function (color) {\n      _this.updateColor(color);\n    };\n    _this.onChangeText = function (value) {\n      _this.applyColor(value);\n    };\n    _this.onDonePressed = function () {\n      var text = _this.state.text;\n      var _this$getValidColorSt2 = _this.getValidColorString(text),\n        hex = _this$getValidColorSt2.hex;\n      if (hex) {\n        _this.props.onSubmit == null ? void 0 : _this.props.onSubmit(hex, _this.getTextColor(hex));\n        _this.onDismiss();\n      }\n    };\n    _this.onDismiss = function () {\n      _this.resetValues();\n      _this.props.onDismiss == null ? void 0 : _this.props.onDismiss();\n    };\n    var _color = Colors.getHSL(props.initialColor);\n    var _text = _this.getColorValue(props.initialColor);\n    var _this$getValidColorSt3 = _this.getValidColorString(_text),\n      _valid = _this$getValidColorSt3.valid;\n    _this.state = {\n      keyboardHeight: KEYBOARD_HEIGHT,\n      color: _color,\n      text: _text,\n      valid: _valid\n    };\n    return _this;\n  }\n  _createClass(ColorPickerDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"changeHeight\",\n    value: function changeHeight(height) {\n      if (Constants.isAndroid && this.state.keyboardHeight !== height) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n        this.setState({\n          keyboardHeight: height\n        });\n      }\n    }\n  }, {\n    key: \"getColorValue\",\n    value: function getColorValue(color) {\n      if (!color) {\n        return;\n      }\n      return color.replace('#', '');\n    }\n  }, {\n    key: \"getHexColor\",\n    value: function getHexColor(text) {\n      if (!Colors.isTransparent(text)) {\n        var trimmed = text.replace(/\\s+/g, '');\n        var hex = \"#\" + trimmed;\n        return hex;\n      }\n      return text;\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString(color) {\n      return _toUpper(Colors.getHexString(color));\n    }\n  }, {\n    key: \"getTextColor\",\n    value: function getTextColor(color) {\n      return Colors.isDark(color) ? Colors.white : Colors.grey10;\n    }\n  }, {\n    key: \"getValidColorString\",\n    value: function getValidColorString(text) {\n      if (text) {\n        var hex = this.getHexColor(text);\n        if (Colors.isValidHex(hex)) {\n          return {\n            hex: hex,\n            valid: true\n          };\n        }\n      }\n      return {\n        undefined: undefined,\n        valid: false\n      };\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(color) {\n      var hex = this.getHexString(color);\n      var text = this.getColorValue(hex);\n      this.setState({\n        color: color,\n        text: text,\n        valid: true\n      });\n    }\n  }, {\n    key: \"resetValues\",\n    value: function resetValues() {\n      var initialColor = this.props.initialColor;\n      var color = Colors.getHSL(initialColor);\n      var text = this.getColorValue(initialColor);\n      var _this$getValidColorSt4 = this.getValidColorString(text),\n        valid = _this$getValidColorSt4.valid;\n      this.setState({\n        color: color,\n        text: text,\n        valid: valid\n      });\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this$props = this.props,\n        doneButtonColor = _this$props.doneButtonColor,\n        accessibilityLabels = _this$props.accessibilityLabels;\n      var valid = this.state.valid;\n      return _jsxs(View, {\n        row: true,\n        spread: true,\n        \"bg-white\": true,\n        \"paddingH-20\": true,\n        style: styles.header,\n        children: [_jsx(Button, {\n          link: true,\n          iconSource: Assets.icons.x,\n          iconStyle: {\n            tintColor: Colors.$iconDefault\n          },\n          onPress: this.onDismiss,\n          accessibilityLabel: _get(accessibilityLabels, 'dismissButton')\n        }), _jsx(Button, {\n          color: doneButtonColor,\n          disabled: !valid,\n          link: true,\n          iconSource: Assets.icons.check,\n          onPress: this.onDonePressed,\n          accessibilityLabel: _get(accessibilityLabels, 'doneButton')\n        })]\n      });\n    }\n  }, {\n    key: \"renderSliders\",\n    value: function renderSliders() {\n      var _this$state = this.state,\n        keyboardHeight = _this$state.keyboardHeight,\n        color = _this$state.color;\n      var colorValue = color.a === 0 ? Colors.$backgroundInverted : Colors.getHexString(color);\n      return _jsx(ColorSliderGroup, {\n        initialColor: colorValue,\n        containerStyle: [styles.sliderGroup, {\n          height: keyboardHeight\n        }],\n        sliderContainerStyle: styles.slider,\n        showLabels: true,\n        labelsStyle: styles.label,\n        onValueChange: this.onSliderValueChange,\n        accessible: false\n      });\n    }\n  }, {\n    key: \"renderPreview\",\n    value: function renderPreview() {\n      var _this$props2 = this.props,\n        accessibilityLabels = _this$props2.accessibilityLabels,\n        previewInputStyle = _this$props2.previewInputStyle;\n      var _this$state2 = this.state,\n        color = _this$state2.color,\n        text = _this$state2.text;\n      var hex = this.getHexString(color);\n      var textColor = this.getTextColor(hex);\n      var fontScale = PixelRatio.getFontScale();\n      var value = Colors.isTransparent(text) ? '000000' : text;\n      return _jsx(View, {\n        style: [styles.preview, {\n          backgroundColor: hex\n        }],\n        children: _jsxs(TouchableOpacity, {\n          center: true,\n          onPress: this.setFocus,\n          activeOpacity: 1,\n          accessible: false,\n          children: [_jsxs(View, {\n            style: styles.inputContainer,\n            children: [_jsx(Text, {\n              text60: true,\n              white: true,\n              \"marginL-13\": true,\n              \"marginR-5\": Constants.isIOS,\n              style: {\n                color: textColor,\n                transform: [{\n                  scaleX: I18nManager.isRTL ? -1 : 1\n                }]\n              },\n              accessible: false,\n              children: \"#\"\n            }), _jsx(TextInput, {\n              ref: this.textInput,\n              value: value,\n              maxLength: 6,\n              numberOfLines: 1,\n              onChangeText: this.onChangeText,\n              style: [styles.input, {\n                color: textColor,\n                width: value ? (value.length + 1) * 16.5 * fontScale : undefined\n              }, Constants.isAndroid && {\n                padding: 0\n              }, previewInputStyle],\n              selectionColor: textColor,\n              underlineColorAndroid: \"transparent\",\n              autoCorrect: false,\n              autoComplete: 'off',\n              autoCapitalize: 'characters',\n              returnKeyType: 'done',\n              enablesReturnKeyAutomatically: true,\n              onFocus: this.onFocus,\n              accessibilityLabel: accessibilityLabels == null ? void 0 : accessibilityLabels.input\n            })]\n          }), _jsx(View, {\n            style: [{\n              backgroundColor: textColor\n            }, styles.underline]\n          })]\n        })\n      });\n    }\n  }, {\n    key: \"renderDialog\",\n    value: function renderDialog() {\n      var _this$props3 = this.props,\n        visible = _this$props3.visible,\n        dialogProps = _this$props3.dialogProps,\n        testID = _this$props3.testID;\n      return _jsxs(Dialog, _objectSpread(_objectSpread({\n        visible: visible,\n        width: \"100%\",\n        bottom: true,\n        centerH: true,\n        onDismiss: this.onDismiss,\n        containerStyle: styles.dialog,\n        panDirection: PanningProvider.Directions.DOWN,\n        testID: testID + \".dialog\",\n        supportedOrientations: ['portrait', 'landscape', 'landscape-left', 'landscape-right']\n      }, dialogProps), {}, {\n        children: [this.renderHeader(), this.renderPreview(), this.renderSliders()]\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderDialog();\n    }\n  }]);\n  return ColorPickerDialog;\n}(PureComponent);\nColorPickerDialog.displayName = 'ColorPicker';\nColorPickerDialog.defaultProps = {\n  initialColor: Colors.$backgroundNeutralLight\n};\nexport default asBaseComponent(ColorPickerDialog);\nvar BORDER_RADIUS = 12;\nvar styles = StyleSheet.create({\n  dialog: {\n    backgroundColor: Colors.$backgroundDefault,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS\n  },\n  preview: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    height: 56,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS,\n    backgroundColor: Colors.$backgroundDefault\n  },\n  inputContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    marginBottom: Constants.isAndroid ? 5 : 8,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  input: _objectSpread(_objectSpread({}, Typography.text60), {}, {\n    letterSpacing: 3,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }),\n  underline: {\n    height: 1.5,\n    width: Constants.isAndroid ? 119 : 134,\n    marginRight: Constants.isAndroid ? 13 : 8\n  },\n  sliderGroup: {\n    paddingTop: 12,\n    marginHorizontal: 20\n  },\n  slider: {\n    marginBottom: 15,\n    height: 26\n  },\n  label: {\n    marginBottom: 3\n  }\n});","map":{"version":3,"names":["_get","_toUpper","React","PureComponent","Constants","asBaseComponent","Assets","Colors","Typography","View","Text","TouchableOpacity","Dialog","Button","ColorSliderGroup","PanningProvider","KEYBOARD_HEIGHT","ColorPickerDialog","props","textInput","createRef","keyboardDidShow","e","isIOS","state","keyboardHeight","endCoordinates","height","setState","changeHeight","keyboardDidHide","onFocus","setFocus","current","focus","applyColor","text","getValidColorString","hex","valid","color","getHSL","onSliderValueChange","updateColor","onChangeText","value","onDonePressed","onSubmit","getTextColor","onDismiss","resetValues","initialColor","getColorValue","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","isAndroid","LayoutAnimation","configureNext","Presets","easeInEaseOut","replace","isTransparent","trimmed","getHexString","isDark","white","grey10","getHexColor","isValidHex","undefined","doneButtonColor","accessibilityLabels","styles","header","icons","x","tintColor","$iconDefault","check","colorValue","a","$backgroundInverted","sliderGroup","slider","label","previewInputStyle","textColor","fontScale","PixelRatio","getFontScale","preview","backgroundColor","inputContainer","transform","scaleX","I18nManager","isRTL","input","width","length","padding","underline","visible","dialogProps","testID","dialog","Directions","DOWN","renderHeader","renderPreview","renderSliders","renderDialog","displayName","defaultProps","$backgroundNeutralLight","BORDER_RADIUS","StyleSheet","create","$backgroundDefault","borderTopLeftRadius","borderTopRightRadius","alignItems","justifyContent","flexDirection","marginBottom","text60","letterSpacing","marginRight","paddingTop","marginHorizontal"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/colorPicker/ColorPickerDialog.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport _toUpper from \"lodash/toUpper\";\nimport React, { PureComponent } from 'react';\nimport { LayoutAnimation, StyleSheet, Keyboard, TextInput, PixelRatio, I18nManager } from 'react-native';\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors, Typography } from \"../../style\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Dialog from \"../dialog\";\nimport Button from \"../button\";\nimport ColorSliderGroup from \"../slider/ColorSliderGroup\";\nimport PanningProvider from \"../panningViews/panningProvider\";\nconst KEYBOARD_HEIGHT = 216;\n\n/**\n * @description: A color picker dialog component\n * @extends: Dialog\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx\n */\nclass ColorPickerDialog extends PureComponent {\n  static displayName = 'ColorPicker';\n  static defaultProps = {\n    initialColor: Colors.$backgroundNeutralLight\n  };\n  constructor(props) {\n    super(props);\n    const color = Colors.getHSL(props.initialColor);\n    const text = this.getColorValue(props.initialColor);\n    const {\n      valid\n    } = this.getValidColorString(text);\n    this.state = {\n      keyboardHeight: KEYBOARD_HEIGHT,\n      color,\n      text,\n      valid\n    };\n  }\n  textInput = React.createRef();\n  //@ts-ignore\n\n  componentDidMount() {\n    this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n    this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n  }\n  componentWillUnmount() {\n    this.keyboardDidShowListener.remove();\n    this.keyboardDidHideListener.remove();\n  }\n  keyboardDidShow = e => {\n    if (Constants.isIOS && this.state.keyboardHeight !== e.endCoordinates.height) {\n      this.setState({\n        keyboardHeight: e.endCoordinates.height\n      });\n    }\n    // For down arrow button in Android keyboard\n    this.changeHeight(0);\n  };\n  keyboardDidHide = () => {\n    this.changeHeight(KEYBOARD_HEIGHT);\n  };\n  onFocus = () => {\n    this.changeHeight(0);\n  };\n  setFocus = () => {\n    this.textInput?.current?.focus();\n  };\n  changeHeight(height) {\n    if (Constants.isAndroid && this.state.keyboardHeight !== height) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n      this.setState({\n        keyboardHeight: height\n      });\n    }\n  }\n  getColorValue(color) {\n    if (!color) {\n      return;\n    }\n    return color.replace('#', '');\n  }\n  getHexColor(text) {\n    if (!Colors.isTransparent(text)) {\n      const trimmed = text.replace(/\\s+/g, '');\n      const hex = `#${trimmed}`;\n      return hex;\n    }\n    return text;\n  }\n  getHexString(color) {\n    return _toUpper(Colors.getHexString(color));\n  }\n  getTextColor(color) {\n    return Colors.isDark(color) ? Colors.white : Colors.grey10;\n  }\n  getValidColorString(text) {\n    if (text) {\n      const hex = this.getHexColor(text);\n      if (Colors.isValidHex(hex)) {\n        return {\n          hex,\n          valid: true\n        };\n      }\n    }\n    return {\n      undefined,\n      valid: false\n    };\n  }\n  applyColor = text => {\n    const {\n      hex,\n      valid\n    } = this.getValidColorString(text);\n    if (hex) {\n      this.setState({\n        color: Colors.getHSL(hex),\n        text,\n        valid\n      });\n    } else {\n      this.setState({\n        text,\n        valid\n      });\n    }\n  };\n  updateColor(color) {\n    const hex = this.getHexString(color);\n    const text = this.getColorValue(hex);\n    this.setState({\n      color,\n      text,\n      valid: true\n    });\n  }\n  resetValues() {\n    const {\n      initialColor\n    } = this.props;\n    const color = Colors.getHSL(initialColor);\n    const text = this.getColorValue(initialColor);\n    const {\n      valid\n    } = this.getValidColorString(text);\n    this.setState({\n      color,\n      text,\n      valid\n    });\n  }\n  onSliderValueChange = color => {\n    this.updateColor(color);\n  };\n  onChangeText = value => {\n    this.applyColor(value);\n  };\n  onDonePressed = () => {\n    const {\n      text\n    } = this.state;\n    const {\n      hex\n    } = this.getValidColorString(text);\n    if (hex) {\n      this.props.onSubmit?.(hex, this.getTextColor(hex));\n      this.onDismiss();\n    }\n  };\n  onDismiss = () => {\n    this.resetValues();\n    this.props.onDismiss?.();\n  };\n  renderHeader() {\n    const {\n      doneButtonColor,\n      accessibilityLabels\n    } = this.props;\n    const {\n      valid\n    } = this.state;\n    return <View row spread bg-white paddingH-20 style={styles.header}>\n        <Button link iconSource={Assets.icons.x} iconStyle={{\n        tintColor: Colors.$iconDefault\n      }} onPress={this.onDismiss} accessibilityLabel={_get(accessibilityLabels, 'dismissButton')} />\n        <Button color={doneButtonColor} disabled={!valid} link iconSource={Assets.icons.check} onPress={this.onDonePressed} accessibilityLabel={_get(accessibilityLabels, 'doneButton')} />\n      </View>;\n  }\n  renderSliders() {\n    const {\n      keyboardHeight,\n      color\n    } = this.state;\n    const colorValue = color.a === 0 ? Colors.$backgroundInverted : Colors.getHexString(color);\n    return <ColorSliderGroup initialColor={colorValue} containerStyle={[styles.sliderGroup, {\n      height: keyboardHeight\n    }]} sliderContainerStyle={styles.slider} showLabels labelsStyle={styles.label} onValueChange={this.onSliderValueChange} accessible={false} />;\n  }\n  renderPreview() {\n    const {\n      accessibilityLabels,\n      previewInputStyle\n    } = this.props;\n    const {\n      color,\n      text\n    } = this.state;\n    const hex = this.getHexString(color);\n    const textColor = this.getTextColor(hex);\n    const fontScale = PixelRatio.getFontScale();\n    const value = Colors.isTransparent(text) ? '000000' : text;\n    return <View style={[styles.preview, {\n      backgroundColor: hex\n    }]}>\n        <TouchableOpacity center onPress={this.setFocus} activeOpacity={1} accessible={false}>\n          <View style={styles.inputContainer}>\n            <Text text60 white marginL-13 marginR-5={Constants.isIOS} style={{\n            color: textColor,\n            transform: [{\n              scaleX: I18nManager.isRTL ? -1 : 1\n            }]\n          }} accessible={false}>\n              #\n            </Text>\n            <TextInput ref={this.textInput} value={value} maxLength={6} numberOfLines={1} onChangeText={this.onChangeText} style={[styles.input, {\n            color: textColor,\n            width: value ? (value.length + 1) * 16.5 * fontScale : undefined\n          }, Constants.isAndroid && {\n            padding: 0\n          }, previewInputStyle]} selectionColor={textColor} underlineColorAndroid=\"transparent\" autoCorrect={false} autoComplete={'off'} autoCapitalize={'characters'}\n          // keyboardType={'numbers-and-punctuation'} // doesn't work with `autoCapitalize`\n          returnKeyType={'done'} enablesReturnKeyAutomatically onFocus={this.onFocus} accessibilityLabel={accessibilityLabels?.input} />\n          </View>\n          <View style={[{\n          backgroundColor: textColor\n        }, styles.underline]} />\n        </TouchableOpacity>\n      </View>;\n  }\n  renderDialog() {\n    const {\n      visible,\n      dialogProps,\n      testID\n    } = this.props;\n    return <Dialog visible={visible} //TODO: pass all Dialog props instead\n    width=\"100%\" bottom centerH onDismiss={this.onDismiss} containerStyle={styles.dialog} panDirection={PanningProvider.Directions.DOWN} testID={`${testID}.dialog`} supportedOrientations={['portrait', 'landscape', 'landscape-left', 'landscape-right']} // iOS only\n    {...dialogProps}>\n        {this.renderHeader()}\n        {this.renderPreview()}\n        {this.renderSliders()}\n      </Dialog>;\n  }\n  render() {\n    return this.renderDialog();\n  }\n}\nexport default asBaseComponent(ColorPickerDialog);\nconst BORDER_RADIUS = 12;\nconst styles = StyleSheet.create({\n  dialog: {\n    backgroundColor: Colors.$backgroundDefault,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS\n  },\n  preview: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    height: 56,\n    borderTopLeftRadius: BORDER_RADIUS,\n    borderTopRightRadius: BORDER_RADIUS,\n    backgroundColor: Colors.$backgroundDefault\n  },\n  inputContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    marginBottom: Constants.isAndroid ? 5 : 8,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  input: {\n    ...Typography.text60,\n    letterSpacing: 3,\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  underline: {\n    height: 1.5,\n    width: Constants.isAndroid ? 119 : 134,\n    marginRight: Constants.isAndroid ? 13 : 8\n  },\n  sliderGroup: {\n    paddingTop: 12,\n    marginHorizontal: 20\n  },\n  slider: {\n    marginBottom: 15,\n    height: 26\n  },\n  label: {\n    marginBottom: 3\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}