{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _map from \"lodash/map\";\nimport React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport { WheelPicker } from \"../../incubator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SectionsWheelPicker = function SectionsWheelPicker(props) {\n  var sections = props.sections,\n    itemHeight = props.itemHeight,\n    numberOfVisibleRows = props.numberOfVisibleRows,\n    activeTextColor = props.activeTextColor,\n    inactiveTextColor = props.inactiveTextColor,\n    textStyle = props.textStyle,\n    disableRTL = props.disableRTL,\n    testID = props.testID;\n  var wheelPickerProps = {\n    itemHeight: itemHeight,\n    numberOfVisibleRows: numberOfVisibleRows,\n    activeTextColor: activeTextColor,\n    inactiveTextColor: inactiveTextColor,\n    textStyle: textStyle\n  };\n  var shouldDisableRTL = useMemo(function () {\n    return Constants.isRTL && disableRTL;\n  }, [disableRTL]);\n  var renderSections = function renderSections() {\n    return _map(sections, function (section, index) {\n      return _jsx(WheelPicker, _objectSpread(_objectSpread({\n        disableRTL: shouldDisableRTL,\n        testID: testID + \".\" + index\n      }, wheelPickerProps), section), index);\n    });\n  };\n  return _jsx(View, {\n    row: true,\n    centerH: true,\n    style: shouldDisableRTL && styles.disableRTL,\n    testID: testID,\n    children: renderSections()\n  });\n};\nSectionsWheelPicker.displayName = 'SectionsWheelPicker';\nexport default asBaseComponent(SectionsWheelPicker);\nvar styles = StyleSheet.create({\n  disableRTL: {\n    flexDirection: 'row-reverse'\n  }\n});","map":{"version":3,"names":["_map","React","useMemo","Constants","asBaseComponent","View","WheelPicker","SectionsWheelPicker","props","sections","itemHeight","numberOfVisibleRows","activeTextColor","inactiveTextColor","textStyle","disableRTL","testID","wheelPickerProps","shouldDisableRTL","isRTL","renderSections","section","index","styles","displayName","StyleSheet","create","flexDirection"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/sectionsWheelPicker/index.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport React, { useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport { WheelPicker } from \"../../incubator\";\n/**\n * @description: SectionsWheelPicker component for presenting set of wheelPickers\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SectionsWheelPickerScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/SectionsWheelPicker/SectionsWheelPicker.gif?raw=true\n */\n\nconst SectionsWheelPicker = props => {\n  const {\n    sections,\n    itemHeight,\n    numberOfVisibleRows,\n    activeTextColor,\n    inactiveTextColor,\n    textStyle,\n    disableRTL,\n    testID\n  } = props;\n  const wheelPickerProps = {\n    itemHeight,\n    numberOfVisibleRows,\n    activeTextColor,\n    inactiveTextColor,\n    textStyle\n  };\n  const shouldDisableRTL = useMemo(() => {\n    return Constants.isRTL && disableRTL;\n  }, [disableRTL]);\n  const renderSections = () => _map(sections, (section, index) => {\n    return <WheelPicker disableRTL={shouldDisableRTL} key={index} testID={`${testID}.${index}`} {...wheelPickerProps} {...section} />;\n  });\n  return <View row centerH style={shouldDisableRTL && styles.disableRTL} testID={testID}>\n      {renderSections()}\n    </View>;\n};\nSectionsWheelPicker.displayName = 'SectionsWheelPicker';\nexport default asBaseComponent(SectionsWheelPicker);\nconst styles = StyleSheet.create({\n  disableRTL: {\n    flexDirection: 'row-reverse'\n  }\n});"],"mappings":";;;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC;AAEvC,SAASC,SAAS,EAAEC,eAAe;AACnC,OAAOC,IAAI;AACX,SAASC,WAAW;AAA0B;AAO9C,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAGC,KAAK,EAAI;EACnC,IACEC,QAAQ,GAQND,KAAK,CARPC,QAAQ;IACRC,UAAU,GAORF,KAAK,CAPPE,UAAU;IACVC,mBAAmB,GAMjBH,KAAK,CANPG,mBAAmB;IACnBC,eAAe,GAKbJ,KAAK,CALPI,eAAe;IACfC,iBAAiB,GAIfL,KAAK,CAJPK,iBAAiB;IACjBC,SAAS,GAGPN,KAAK,CAHPM,SAAS;IACTC,UAAU,GAERP,KAAK,CAFPO,UAAU;IACVC,MAAM,GACJR,KAAK,CADPQ,MAAM;EAER,IAAMC,gBAAgB,GAAG;IACvBP,UAAU,EAAVA,UAAU;IACVC,mBAAmB,EAAnBA,mBAAmB;IACnBC,eAAe,EAAfA,eAAe;IACfC,iBAAiB,EAAjBA,iBAAiB;IACjBC,SAAS,EAATA;EACF,CAAC;EACD,IAAMI,gBAAgB,GAAGhB,OAAO,CAAC,YAAM;IACrC,OAAOC,SAAS,CAACgB,KAAK,IAAIJ,UAAU;EACtC,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAChB,IAAMK,cAAc,GAAG,SAAjBA,cAAc;IAAA,OAASpB,IAAI,CAACS,QAAQ,EAAE,UAACY,OAAO,EAAEC,KAAK,EAAK;MAC9D,OAAO,KAAC,WAAW;QAAC,UAAU,EAAEJ,gBAAiB;QAAa,MAAM,EAAKF,MAAM,SAAIM;MAAQ,GAAKL,gBAAgB,GAAMI,OAAO,GAAtEC,KAAK,CAAqE;IACnI,CAAC,CAAC;EAAA;EACF,OAAO,KAAC,IAAI;IAAC,GAAG;IAAC,OAAO;IAAC,KAAK,EAAEJ,gBAAgB,IAAIK,MAAM,CAACR,UAAW;IAAC,MAAM,EAAEC,MAAO;IAAA,UACjFI,cAAc;EAAE,EACZ;AACX,CAAC;AACDb,mBAAmB,CAACiB,WAAW,GAAG,qBAAqB;AACvD,eAAepB,eAAe,CAACG,mBAAmB,CAAC;AACnD,IAAMgB,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC/BX,UAAU,EAAE;IACVY,aAAa,EAAE;EACjB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}