{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useContext, useRef, useCallback, useState, useMemo } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { ValidationMessagePosition } from \"./types\";\nimport { getColorByState, shouldPlaceholderFloat } from \"./Presenter\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FLOATING_PLACEHOLDER_SCALE = 0.875;\nvar FloatingPlaceholder = function FloatingPlaceholder(props) {\n  var placeholder = props.placeholder,\n    _props$floatingPlaceh = props.floatingPlaceholderColor,\n    floatingPlaceholderColor = _props$floatingPlaceh === void 0 ? Colors.$textNeutralLight : _props$floatingPlaceh,\n    floatingPlaceholderStyle = props.floatingPlaceholderStyle,\n    validationMessagePosition = props.validationMessagePosition,\n    _props$extraOffset = props.extraOffset,\n    extraOffset = _props$extraOffset === void 0 ? 0 : _props$extraOffset,\n    testID = props.testID;\n  var context = useContext(FieldContext);\n  var _useState = useState({\n      top: 0,\n      left: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    placeholderOffset = _useState2[0],\n    setPlaceholderOffset = _useState2[1];\n  var shouldFloat = shouldPlaceholderFloat(props, context.isFocused, context.hasValue, context.value);\n  var animation = useRef(new Animated.Value(Number(shouldFloat))).current;\n  var hidePlaceholder = !context.isValid && validationMessagePosition === ValidationMessagePosition.TOP;\n  useDidUpdate(function () {\n    Animated.timing(animation, {\n      toValue: Number(shouldFloat),\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  }, [shouldFloat]);\n  var animatedStyle = useMemo(function () {\n    return {\n      transform: [{\n        scale: interpolateValue(animation, [1, FLOATING_PLACEHOLDER_SCALE])\n      }, {\n        translateX: interpolateValue(animation, [0, -placeholderOffset.left - extraOffset / FLOATING_PLACEHOLDER_SCALE])\n      }, {\n        translateY: interpolateValue(animation, [0, -placeholderOffset.top])\n      }]\n    };\n  }, [placeholderOffset, extraOffset]);\n  var style = useMemo(function () {\n    return [styles.placeholder, floatingPlaceholderStyle, animatedStyle];\n  }, [floatingPlaceholderStyle, animatedStyle]);\n  var onPlaceholderLayout = useCallback(function (event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    var translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n    translate = Constants.isRTL ? -translate : translate;\n    setPlaceholderOffset({\n      left: translate / FLOATING_PLACEHOLDER_SCALE,\n      top: height\n    });\n  }, []);\n  return _jsx(View, {\n    absF: true,\n    style: hidePlaceholder && styles.hidden,\n    pointerEvents: 'none',\n    children: _jsx(Text, {\n      animated: true,\n      color: getColorByState(floatingPlaceholderColor, context),\n      style: style,\n      onLayout: onPlaceholderLayout,\n      testID: testID,\n      children: placeholder\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  placeholder: _objectSpread({}, Platform.select({\n    android: {\n      textAlignVertical: 'center',\n      flexShrink: 1\n    }\n  })),\n  hidden: {\n    opacity: 0\n  }\n});\nfunction interpolateValue(animatedValue, outputRange) {\n  return animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: outputRange\n  });\n}\nFloatingPlaceholder.displayName = 'Incubator.TextField';\nexport default FloatingPlaceholder;","map":{"version":3,"names":["React","useContext","useRef","useCallback","useState","useMemo","useDidUpdate","ValidationMessagePosition","getColorByState","shouldPlaceholderFloat","Colors","Constants","View","Text","FieldContext","FLOATING_PLACEHOLDER_SCALE","FloatingPlaceholder","props","placeholder","floatingPlaceholderColor","$textNeutralLight","floatingPlaceholderStyle","validationMessagePosition","extraOffset","testID","context","top","left","placeholderOffset","setPlaceholderOffset","shouldFloat","isFocused","hasValue","value","animation","Animated","Value","Number","current","hidePlaceholder","isValid","TOP","timing","toValue","duration","useNativeDriver","start","animatedStyle","transform","scale","interpolateValue","translateX","translateY","style","styles","onPlaceholderLayout","event","nativeEvent","layout","width","height","translate","isRTL","hidden","StyleSheet","create","Platform","select","android","textAlignVertical","flexShrink","opacity","animatedValue","outputRange","interpolate","inputRange","displayName"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/incubator/TextField/FloatingPlaceholder.js"],"sourcesContent":["import React, { useContext, useRef, useCallback, useState, useMemo } from 'react';\nimport { Animated, StyleSheet, Platform } from 'react-native';\nimport { useDidUpdate } from \"../../hooks\";\nimport { ValidationMessagePosition } from \"./types\";\nimport { getColorByState, shouldPlaceholderFloat } from \"./Presenter\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\nconst FLOATING_PLACEHOLDER_SCALE = 0.875;\nconst FloatingPlaceholder = props => {\n  const {\n    placeholder,\n    floatingPlaceholderColor = Colors.$textNeutralLight,\n    floatingPlaceholderStyle,\n    validationMessagePosition,\n    extraOffset = 0,\n    testID\n  } = props;\n  const context = useContext(FieldContext);\n  const [placeholderOffset, setPlaceholderOffset] = useState({\n    top: 0,\n    left: 0\n  });\n  const shouldFloat = shouldPlaceholderFloat(props, context.isFocused, context.hasValue, context.value);\n  const animation = useRef(new Animated.Value(Number(shouldFloat))).current;\n  const hidePlaceholder = !context.isValid && validationMessagePosition === ValidationMessagePosition.TOP;\n  useDidUpdate(() => {\n    Animated.timing(animation, {\n      toValue: Number(shouldFloat),\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  }, [shouldFloat]);\n  const animatedStyle = useMemo(() => {\n    return {\n      transform: [{\n        scale: interpolateValue(animation, [1, FLOATING_PLACEHOLDER_SCALE])\n      }, {\n        translateX: interpolateValue(animation, [0, -placeholderOffset.left - extraOffset / FLOATING_PLACEHOLDER_SCALE])\n      }, {\n        translateY: interpolateValue(animation, [0, -placeholderOffset.top])\n      }]\n    };\n  }, [placeholderOffset, extraOffset]);\n  const style = useMemo(() => [styles.placeholder, floatingPlaceholderStyle, animatedStyle], [floatingPlaceholderStyle, animatedStyle]);\n  const onPlaceholderLayout = useCallback(event => {\n    const {\n      width,\n      height\n    } = event.nativeEvent.layout;\n    let translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n    translate = Constants.isRTL ? -translate : translate;\n    setPlaceholderOffset({\n      left: translate / FLOATING_PLACEHOLDER_SCALE,\n      top: height\n    });\n  }, []);\n  return <View absF style={hidePlaceholder && styles.hidden} pointerEvents={'none'}>\n      <Text animated color={getColorByState(floatingPlaceholderColor, context)} style={style} onLayout={onPlaceholderLayout} testID={testID}>\n        {placeholder}\n      </Text>\n    </View>;\n};\nconst styles = StyleSheet.create({\n  placeholder: {\n    ...Platform.select({\n      android: {\n        textAlignVertical: 'center',\n        flexShrink: 1\n      }\n    })\n  },\n  hidden: {\n    opacity: 0\n  }\n});\nfunction interpolateValue(animatedValue, outputRange) {\n  return animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange\n  });\n}\nFloatingPlaceholder.displayName = 'Incubator.TextField';\nexport default FloatingPlaceholder;"],"mappings":"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"},"metadata":{},"sourceType":"module"}