{"ast":null,"code":"import React, { useContext, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\nimport { getRelevantValidationMessage } from \"./Presenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ValidationMessage = function ValidationMessage(_ref) {\n  var validationMessage = _ref.validationMessage,\n    enableErrors = _ref.enableErrors,\n    validationMessageStyle = _ref.validationMessageStyle,\n    retainSpace = _ref.retainSpace,\n    validate = _ref.validate,\n    testID = _ref.testID;\n  var context = useContext(FieldContext);\n  var style = useMemo(function () {\n    return [styles.validationMessage, validationMessageStyle];\n  }, [validationMessageStyle]);\n  if (!enableErrors || !retainSpace && context.isValid) {\n    return null;\n  }\n  var relevantValidationMessage = getRelevantValidationMessage(validationMessage, context.failingValidatorIndex);\n  var showValidationMessage = !context.isValid || !validate && !!validationMessage;\n  return _jsx(Text, {\n    testID: testID,\n    $textDangerLight: true,\n    style: style,\n    children: showValidationMessage ? relevantValidationMessage : ''\n  });\n};\nvar styles = StyleSheet.create({\n  validationMessage: {\n    minHeight: 20\n  }\n});\nValidationMessage.displayName = 'Incubator.TextField';\nexport default ValidationMessage;","map":{"version":3,"names":["React","useContext","useMemo","Text","FieldContext","getRelevantValidationMessage","ValidationMessage","validationMessage","enableErrors","validationMessageStyle","retainSpace","validate","testID","context","style","styles","isValid","relevantValidationMessage","failingValidatorIndex","showValidationMessage","StyleSheet","create","minHeight","displayName"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/incubator/TextField/ValidationMessage.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\nimport { getRelevantValidationMessage } from \"./Presenter\";\nconst ValidationMessage = ({\n  validationMessage,\n  enableErrors,\n  validationMessageStyle,\n  retainSpace,\n  validate,\n  testID\n}) => {\n  const context = useContext(FieldContext);\n  const style = useMemo(() => [styles.validationMessage, validationMessageStyle], [validationMessageStyle]);\n  if (!enableErrors || !retainSpace && context.isValid) {\n    return null;\n  }\n  const relevantValidationMessage = getRelevantValidationMessage(validationMessage, context.failingValidatorIndex);\n  const showValidationMessage = !context.isValid || !validate && !!validationMessage;\n  return <Text testID={testID} $textDangerLight style={style}>\n      {showValidationMessage ? relevantValidationMessage : ''}\n    </Text>;\n};\nconst styles = StyleSheet.create({\n  validationMessage: {\n    minHeight: 20\n  }\n});\nValidationMessage.displayName = 'Incubator.TextField';\nexport default ValidationMessage;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAAC;AAEnD,OAAOC,IAAI;AACX,OAAOC,YAAY;AACnB,SAASC,4BAA4B;AAAsB;AAC3D,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAOjB;EAAA,IANJC,iBAAiB,QAAjBA,iBAAiB;IACjBC,YAAY,QAAZA,YAAY;IACZC,sBAAsB,QAAtBA,sBAAsB;IACtBC,WAAW,QAAXA,WAAW;IACXC,QAAQ,QAARA,QAAQ;IACRC,MAAM,QAANA,MAAM;EAEN,IAAMC,OAAO,GAAGZ,UAAU,CAACG,YAAY,CAAC;EACxC,IAAMU,KAAK,GAAGZ,OAAO,CAAC;IAAA,OAAM,CAACa,MAAM,CAACR,iBAAiB,EAAEE,sBAAsB,CAAC;EAAA,GAAE,CAACA,sBAAsB,CAAC,CAAC;EACzG,IAAI,CAACD,YAAY,IAAI,CAACE,WAAW,IAAIG,OAAO,CAACG,OAAO,EAAE;IACpD,OAAO,IAAI;EACb;EACA,IAAMC,yBAAyB,GAAGZ,4BAA4B,CAACE,iBAAiB,EAAEM,OAAO,CAACK,qBAAqB,CAAC;EAChH,IAAMC,qBAAqB,GAAG,CAACN,OAAO,CAACG,OAAO,IAAI,CAACL,QAAQ,IAAI,CAAC,CAACJ,iBAAiB;EAClF,OAAO,KAAC,IAAI;IAAC,MAAM,EAAEK,MAAO;IAAC,gBAAgB;IAAC,KAAK,EAAEE,KAAM;IAAA,UACtDK,qBAAqB,GAAGF,yBAAyB,GAAG;EAAE,EAClD;AACX,CAAC;AACD,IAAMF,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC/Bd,iBAAiB,EAAE;IACjBe,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACFhB,iBAAiB,CAACiB,WAAW,GAAG,qBAAqB;AACrD,eAAejB,iBAAiB"},"metadata":{},"sourceType":"module"}