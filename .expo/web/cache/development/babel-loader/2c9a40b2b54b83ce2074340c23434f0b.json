{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"chips\", \"defaultChipProps\", \"invalidChipProps\", \"leadingAccessory\", \"onChange\", \"fieldStyle\", \"maxChips\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _map from \"lodash/map\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { useCallback, useMemo, useRef, useState, forwardRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Constants } from \"../../commons/new\";\nimport { useCombinedRefs } from \"../../hooks\";\nimport TextField from \"../TextField\";\nimport Chip from \"../../components/chip\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar removeIcon = require(\"./assets/xSmall.png\");\nexport var ChipsInputChangeReason;\n(function (ChipsInputChangeReason) {\n  ChipsInputChangeReason[\"Added\"] = \"added\";\n  ChipsInputChangeReason[\"Removed\"] = \"removed\";\n})(ChipsInputChangeReason || (ChipsInputChangeReason = {}));\nvar ChipsInput = forwardRef(function (props, refToForward) {\n  var fieldRef = useCombinedRefs(refToForward);\n  var _props$chips = props.chips,\n    chips = _props$chips === void 0 ? [] : _props$chips,\n    defaultChipProps = props.defaultChipProps,\n    invalidChipProps = props.invalidChipProps,\n    leadingAccessory = props.leadingAccessory,\n    onChange = props.onChange,\n    fieldStyle = props.fieldStyle,\n    maxChips = props.maxChips,\n    others = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    markedForRemoval = _useState2[0],\n    setMarkedForRemoval = _useState2[1];\n  var fieldValue = useRef(others.value);\n  var addChip = useCallback(function () {\n    var reachedMaximum = maxChips && (chips == null ? void 0 : chips.length) >= maxChips;\n    if (fieldValue.current && !reachedMaximum) {\n      var newChip = {\n        label: fieldValue.current\n      };\n      setMarkedForRemoval(undefined);\n      fieldRef.current.clear();\n      fieldValue.current = '';\n      setTimeout(function () {\n        onChange == null ? void 0 : onChange([].concat(_toConsumableArray(chips), [newChip]), ChipsInputChangeReason.Added, newChip);\n      }, 0);\n    }\n  }, [onChange, chips, maxChips]);\n  var removeMarkedChip = useCallback(function () {\n    if (!_isUndefined(markedForRemoval)) {\n      var removedChip = chips == null ? void 0 : chips.splice(markedForRemoval, 1);\n      onChange == null ? void 0 : onChange(_toConsumableArray(chips), ChipsInputChangeReason.Removed, removedChip == null ? void 0 : removedChip[0]);\n      setMarkedForRemoval(undefined);\n    }\n  }, [chips, markedForRemoval, onChange]);\n  var onChipPress = useCallback(function (_ref) {\n    var index = _ref.customValue;\n    var selectedChip = chips[index];\n    selectedChip == null ? void 0 : selectedChip.onPress == null ? void 0 : selectedChip.onPress();\n    setMarkedForRemoval(index);\n  }, [chips]);\n  var onChangeText = useCallback(function (value) {\n    fieldValue.current = value;\n    props.onChangeText == null ? void 0 : props.onChangeText(value);\n    if (!_isUndefined(markedForRemoval)) {\n      setMarkedForRemoval(undefined);\n    }\n  }, [props.onChangeText, markedForRemoval]);\n  var onKeyPress = useCallback(function (event) {\n    var _event$nativeEvent;\n    props.onKeyPress == null ? void 0 : props.onKeyPress(event);\n    var keyCode = event == null ? void 0 : (_event$nativeEvent = event.nativeEvent) == null ? void 0 : _event$nativeEvent.key;\n    var pressedBackspace = keyCode === Constants.backspaceKey;\n    if (pressedBackspace && !fieldValue.current && chips.length > 0) {\n      if (_isUndefined(markedForRemoval) || markedForRemoval !== chips.length - 1) {\n        setMarkedForRemoval(chips.length - 1);\n      } else {\n        removeMarkedChip();\n      }\n    }\n  }, [chips, props.onKeyPress, markedForRemoval, removeMarkedChip]);\n  var chipList = useMemo(function () {\n    return _jsxs(_Fragment, {\n      children: [leadingAccessory, _map(chips, function (chip, index) {\n        var isMarkedForRemoval = index === markedForRemoval;\n        return _jsx(Chip, _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n          customValue: index,\n          \"marginR-s2\": true,\n          \"marginB-s2\": true,\n          dismissIcon: removeIcon\n        }, defaultChipProps), chip.invalid ? invalidChipProps : undefined), chip), {}, {\n          onPress: onChipPress,\n          onDismiss: isMarkedForRemoval ? removeMarkedChip : undefined\n        }), index);\n      })]\n    });\n  }, [chips, leadingAccessory, defaultChipProps, removeMarkedChip, markedForRemoval]);\n  return _jsx(TextField, _objectSpread(_objectSpread({\n    ref: fieldRef,\n    leadingAccessory: chipList,\n    blurOnSubmit: false,\n    style: styles.input\n  }, others), {}, {\n    onChangeText: onChangeText,\n    onSubmitEditing: addChip,\n    fieldStyle: [fieldStyle, styles.fieldStyle],\n    onKeyPress: onKeyPress,\n    accessibilityHint: props.editable ? 'press keyboard delete button to remove last tag' : undefined\n  }));\n});\nvar styles = StyleSheet.create({\n  fieldStyle: {\n    flexWrap: 'wrap'\n  },\n  input: {\n    flexGrow: undefined\n  }\n});\nChipsInput.changeReasons = {\n  ADDED: 'added',\n  REMOVED: 'removed'\n};\nexport default ChipsInput;","map":{"version":3,"names":["_map","_isUndefined","React","useCallback","useMemo","useRef","useState","forwardRef","Constants","useCombinedRefs","TextField","Chip","removeIcon","require","ChipsInputChangeReason","ChipsInput","props","refToForward","fieldRef","chips","defaultChipProps","invalidChipProps","leadingAccessory","onChange","fieldStyle","maxChips","others","undefined","markedForRemoval","setMarkedForRemoval","fieldValue","value","addChip","reachedMaximum","length","current","newChip","label","clear","setTimeout","Added","removeMarkedChip","removedChip","splice","Removed","onChipPress","index","customValue","selectedChip","onPress","onChangeText","onKeyPress","event","keyCode","nativeEvent","key","pressedBackspace","backspaceKey","chipList","chip","isMarkedForRemoval","invalid","styles","input","editable","StyleSheet","create","flexWrap","flexGrow","changeReasons","ADDED","REMOVED"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/incubator/ChipsInput/index.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { useCallback, useMemo, useRef, useState, forwardRef } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Constants } from \"../../commons/new\";\nimport { useCombinedRefs } from \"../../hooks\";\nimport TextField from \"../TextField\";\nimport Chip from \"../../components/chip\";\nconst removeIcon = require(\"./assets/xSmall.png\");\nexport let ChipsInputChangeReason;\n(function (ChipsInputChangeReason) {\n  ChipsInputChangeReason[\"Added\"] = \"added\";\n  ChipsInputChangeReason[\"Removed\"] = \"removed\";\n})(ChipsInputChangeReason || (ChipsInputChangeReason = {}));\nconst ChipsInput = forwardRef((props, refToForward) => {\n  const fieldRef = useCombinedRefs(refToForward);\n  const {\n    chips = [],\n    defaultChipProps,\n    invalidChipProps,\n    leadingAccessory,\n    onChange,\n    fieldStyle,\n    maxChips,\n    ...others\n  } = props;\n  const [markedForRemoval, setMarkedForRemoval] = useState(undefined);\n  const fieldValue = useRef(others.value);\n  const addChip = useCallback(() => {\n    const reachedMaximum = maxChips && chips?.length >= maxChips;\n    if (fieldValue.current && !reachedMaximum) {\n      const newChip = {\n        label: fieldValue.current\n      };\n      setMarkedForRemoval(undefined);\n      // @ts-expect-error\n      fieldRef.current.clear();\n      fieldValue.current = '';\n      /* NOTE: Delay change event to give clear field time to complete and avoid a flickering */\n      setTimeout(() => {\n        onChange?.([...chips, newChip], ChipsInputChangeReason.Added, newChip);\n      }, 0);\n    }\n  }, [onChange, chips, maxChips]);\n  const removeMarkedChip = useCallback(() => {\n    if (!_isUndefined(markedForRemoval)) {\n      const removedChip = chips?.splice(markedForRemoval, 1);\n      onChange?.([...chips], ChipsInputChangeReason.Removed, removedChip?.[0]);\n      setMarkedForRemoval(undefined);\n    }\n  }, [chips, markedForRemoval, onChange]);\n  const onChipPress = useCallback(({\n    customValue: index\n  }) => {\n    const selectedChip = chips[index];\n    selectedChip?.onPress?.();\n    setMarkedForRemoval(index);\n  }, [chips]);\n  const onChangeText = useCallback(value => {\n    fieldValue.current = value;\n    props.onChangeText?.(value);\n    if (!_isUndefined(markedForRemoval)) {\n      setMarkedForRemoval(undefined);\n    }\n  }, [props.onChangeText, markedForRemoval]);\n  const onKeyPress = useCallback(event => {\n    props.onKeyPress?.(event);\n    const keyCode = event?.nativeEvent?.key;\n    const pressedBackspace = keyCode === Constants.backspaceKey;\n    if (pressedBackspace && !fieldValue.current && chips.length > 0) {\n      if (_isUndefined(markedForRemoval) || markedForRemoval !== chips.length - 1) {\n        setMarkedForRemoval(chips.length - 1);\n      } else {\n        removeMarkedChip();\n      }\n    }\n  }, [chips, props.onKeyPress, markedForRemoval, removeMarkedChip]);\n  const chipList = useMemo(() => {\n    return <>\n        {leadingAccessory}\n        {_map(chips, (chip, index) => {\n        const isMarkedForRemoval = index === markedForRemoval;\n        return <Chip key={index} customValue={index}\n        // resetSpacings\n        // paddingH-s2\n        marginR-s2 marginB-s2 dismissIcon={removeIcon} {...defaultChipProps} {...chip.invalid ? invalidChipProps : undefined} {...chip} onPress={onChipPress} onDismiss={isMarkedForRemoval ? removeMarkedChip : undefined} />;\n      })}\n      </>;\n  }, [chips, leadingAccessory, defaultChipProps, removeMarkedChip, markedForRemoval]);\n  return <TextField\n  // @ts-expect-error\n  ref={fieldRef} leadingAccessory={chipList} blurOnSubmit={false} style={styles.input} {...others} onChangeText={onChangeText} onSubmitEditing={addChip} fieldStyle={[fieldStyle, styles.fieldStyle]} onKeyPress={onKeyPress} accessibilityHint={props.editable ? 'press keyboard delete button to remove last tag' : undefined} />;\n});\nconst styles = StyleSheet.create({\n  fieldStyle: {\n    flexWrap: 'wrap'\n  },\n  input: {\n    flexGrow: undefined\n  }\n});\n// @ts-expect-error\nChipsInput.changeReasons = {\n  ADDED: 'added',\n  REMOVED: 'removed'\n};\nexport default ChipsInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}