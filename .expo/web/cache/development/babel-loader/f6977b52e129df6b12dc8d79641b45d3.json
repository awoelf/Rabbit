{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _map from \"lodash/map\";\nimport React, { useContext } from 'react';\nimport { useSharedValue, useAnimatedReaction, withTiming, Easing, runOnJS, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { GestureDetector, Gesture } from 'react-native-gesture-handler';\nimport View from \"../view\";\nimport { Shadows, Colors } from \"../../style\";\nimport { useDidUpdate } from \"../../hooks\";\nimport SortableListContext from \"./SortableListContext\";\nimport usePresenter from \"./usePresenter\";\nimport { HapticService, HapticType } from \"../../services\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar animationConfig = {\n  easing: Easing.inOut(Easing.ease),\n  duration: 350\n};\nvar SortableListItem = function SortableListItem(props) {\n  var children = props.children,\n    index = props.index;\n  var _useContext = useContext(SortableListContext),\n    data = _useContext.data,\n    itemHeight = _useContext.itemHeight,\n    onItemLayout = _useContext.onItemLayout,\n    itemsOrder = _useContext.itemsOrder,\n    lockedIds = _useContext.lockedIds,\n    onChange = _useContext.onChange,\n    enableHaptic = _useContext.enableHaptic,\n    _useContext$scale = _useContext.scale,\n    propsScale = _useContext$scale === void 0 ? 1 : _useContext$scale;\n  var _usePresenter = usePresenter(),\n    getTranslationByIndexChange = _usePresenter.getTranslationByIndexChange,\n    getItemIndexById = _usePresenter.getItemIndexById,\n    getIndexByPosition = _usePresenter.getIndexByPosition,\n    getIdByItemIndex = _usePresenter.getIdByItemIndex;\n  var id = data[index].id;\n  var locked = data[index].locked;\n  var initialIndex = useSharedValue(_map(data, 'id').indexOf(id));\n  var currIndex = useSharedValue(initialIndex.value);\n  var translateY = useSharedValue(0);\n  var isDragging = useSharedValue(false);\n  var tempTranslateY = useSharedValue(0);\n  var tempItemsOrder = useSharedValue(itemsOrder.value);\n  useDidUpdate(function () {\n    var newItemIndex = _map(data, 'id').indexOf(id);\n    initialIndex.value = newItemIndex;\n    currIndex.value = newItemIndex;\n    translateY.value = 0;\n  }, [data]);\n  useAnimatedReaction(function () {\n    var _f = function _f() {\n      return getItemIndexById(itemsOrder.value, id);\n    };\n    _f._closure = {\n      getItemIndexById: getItemIndexById,\n      itemsOrder: itemsOrder,\n      id: id\n    };\n    _f.asString = \"function _f(){const{getItemIndexById,itemsOrder,id}=jsThis._closure;{return getItemIndexById(itemsOrder.value,id);}}\";\n    _f.__workletHash = 12516297353630;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (50:22)\";\n    return _f;\n  }(), function () {\n    var _f = function _f(newIndex, prevIndex) {\n      if (prevIndex === null || newIndex === prevIndex) {\n        return;\n      }\n      currIndex.value = newIndex;\n      if (!isDragging.value) {\n        var translation = getTranslationByIndexChange(currIndex.value, initialIndex.value, itemHeight.value);\n        translateY.value = withTiming(translation, animationConfig);\n      }\n    };\n    _f._closure = {\n      currIndex: currIndex,\n      isDragging: isDragging,\n      getTranslationByIndexChange: getTranslationByIndexChange,\n      initialIndex: initialIndex,\n      itemHeight: itemHeight,\n      translateY: translateY,\n      withTiming: withTiming,\n      animationConfig: animationConfig\n    };\n    _f.asString = \"function _f(newIndex,prevIndex){const{currIndex,isDragging,getTranslationByIndexChange,initialIndex,itemHeight,translateY,withTiming,animationConfig}=jsThis._closure;{if(prevIndex===null||newIndex===prevIndex){return;}currIndex.value=newIndex;if(!isDragging.value){const translation=getTranslationByIndexChange(currIndex.value,initialIndex.value,itemHeight.value);translateY.value=withTiming(translation,animationConfig);}}}\";\n    _f.__workletHash = 3608294085094;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (50:68)\";\n    return _f;\n  }(), []);\n  var dragOnLongPressGesture = Gesture.Pan().activateAfterLongPress(250).enabled(!locked).onStart(function () {\n    var _f = function _f() {\n      isDragging.value = true;\n      translateY.value = getTranslationByIndexChange(currIndex.value, initialIndex.value, itemHeight.value);\n      tempTranslateY.value = translateY.value;\n      tempItemsOrder.value = itemsOrder.value;\n    };\n    _f._closure = {\n      isDragging: isDragging,\n      translateY: translateY,\n      getTranslationByIndexChange: getTranslationByIndexChange,\n      currIndex: currIndex,\n      initialIndex: initialIndex,\n      itemHeight: itemHeight,\n      tempTranslateY: tempTranslateY,\n      tempItemsOrder: tempItemsOrder,\n      itemsOrder: itemsOrder\n    };\n    _f.asString = \"function _f(){const{isDragging,translateY,getTranslationByIndexChange,currIndex,initialIndex,itemHeight,tempTranslateY,tempItemsOrder,itemsOrder}=jsThis._closure;{isDragging.value=true;translateY.value=getTranslationByIndexChange(currIndex.value,initialIndex.value,itemHeight.value);tempTranslateY.value=translateY.value;tempItemsOrder.value=itemsOrder.value;}}\";\n    _f.__workletHash = 17174370285194;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (60:100)\";\n    return _f;\n  }()).onTouchesMove(function () {\n    var _f = function _f() {\n      if (enableHaptic && !isDragging.value) {\n        runOnJS(HapticService.triggerHaptic)(HapticType.selection, 'SortableList');\n      }\n    };\n    _f._closure = {\n      enableHaptic: enableHaptic,\n      isDragging: isDragging,\n      runOnJS: runOnJS,\n      HapticService: {\n        triggerHaptic: HapticService.triggerHaptic\n      },\n      HapticType: {\n        selection: HapticType.selection\n      }\n    };\n    _f.asString = \"function _f(){const{enableHaptic,isDragging,runOnJS,HapticService,HapticType}=jsThis._closure;{if(enableHaptic&&!isDragging.value){runOnJS(HapticService.triggerHaptic)(HapticType.selection,'SortableList');}}}\";\n    _f.__workletHash = 11494307194641;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (65:19)\";\n    return _f;\n  }()).onUpdate(function () {\n    var _f = function _f(event) {\n      translateY.value = tempTranslateY.value + event.translationY;\n      var newIndex = getIndexByPosition(translateY.value, itemHeight.value) + initialIndex.value;\n      var oldIndex = getItemIndexById(itemsOrder.value, id);\n      if (newIndex !== oldIndex) {\n        if (Math.abs(newIndex - oldIndex) > 1) {\n          newIndex = Math.sign(newIndex - oldIndex) + oldIndex;\n        }\n        var itemIdToSwap = getIdByItemIndex(itemsOrder.value, newIndex);\n        while (lockedIds.value[itemIdToSwap]) {\n          var skipDirection = Math.sign(newIndex - oldIndex);\n          newIndex = skipDirection + newIndex;\n          itemIdToSwap = getIdByItemIndex(itemsOrder.value, newIndex);\n        }\n        if (itemIdToSwap !== undefined) {\n          var newItemsOrder = _toConsumableArray(itemsOrder.value);\n          newItemsOrder[newIndex] = id;\n          newItemsOrder[oldIndex] = itemIdToSwap;\n          itemsOrder.value = newItemsOrder;\n        }\n      }\n    };\n    _f._closure = {\n      translateY: translateY,\n      tempTranslateY: tempTranslateY,\n      getIndexByPosition: getIndexByPosition,\n      itemHeight: itemHeight,\n      initialIndex: initialIndex,\n      getItemIndexById: getItemIndexById,\n      itemsOrder: itemsOrder,\n      id: id,\n      getIdByItemIndex: getIdByItemIndex,\n      lockedIds: lockedIds\n    };\n    _f.asString = \"function _f(event){const{translateY,tempTranslateY,getIndexByPosition,itemHeight,initialIndex,getItemIndexById,itemsOrder,id,getIdByItemIndex,lockedIds}=jsThis._closure;{translateY.value=tempTranslateY.value+event.translationY;let newIndex=getIndexByPosition(translateY.value,itemHeight.value)+initialIndex.value;const oldIndex=getItemIndexById(itemsOrder.value,id);if(newIndex!==oldIndex){if(Math.abs(newIndex-oldIndex)>1){newIndex=Math.sign(newIndex-oldIndex)+oldIndex;}let itemIdToSwap=getIdByItemIndex(itemsOrder.value,newIndex);while(lockedIds.value[itemIdToSwap]){const skipDirection=Math.sign(newIndex-oldIndex);newIndex=skipDirection+newIndex;itemIdToSwap=getIdByItemIndex(itemsOrder.value,newIndex);}if(itemIdToSwap!==undefined){const newItemsOrder=[...itemsOrder.value];newItemsOrder[newIndex]=id;newItemsOrder[oldIndex]=itemIdToSwap;itemsOrder.value=newItemsOrder;}}}}\";\n    _f.__workletHash = 9516600705130;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (69:14)\";\n    return _f;\n  }()).onEnd(function () {\n    var _f = function _f() {\n      var translation = getTranslationByIndexChange(getItemIndexById(itemsOrder.value, id), getItemIndexById(tempItemsOrder.value, id), itemHeight.value);\n      translateY.value = withTiming(tempTranslateY.value + translation, animationConfig, function () {\n        var _f = function _f() {\n          if (tempItemsOrder.value.toString() !== itemsOrder.value.toString()) {\n            runOnJS(onChange)();\n          }\n        };\n        _f._closure = {\n          tempItemsOrder: tempItemsOrder,\n          itemsOrder: itemsOrder,\n          runOnJS: runOnJS,\n          onChange: onChange\n        };\n        _f.asString = \"function _f(){const{tempItemsOrder,itemsOrder,runOnJS,onChange}=jsThis._closure;{if(tempItemsOrder.value.toString()!==itemsOrder.value.toString()){runOnJS(onChange)();}}}\";\n        _f.__workletHash = 15095616134041;\n        _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (99:87)\";\n        return _f;\n      }());\n    };\n    _f._closure = {\n      getTranslationByIndexChange: getTranslationByIndexChange,\n      getItemIndexById: getItemIndexById,\n      itemsOrder: itemsOrder,\n      id: id,\n      tempItemsOrder: tempItemsOrder,\n      itemHeight: itemHeight,\n      translateY: translateY,\n      withTiming: withTiming,\n      tempTranslateY: tempTranslateY,\n      animationConfig: animationConfig,\n      runOnJS: runOnJS,\n      onChange: onChange\n    };\n    _f.asString = \"function _f(){const{getTranslationByIndexChange,getItemIndexById,itemsOrder,id,tempItemsOrder,itemHeight,translateY,withTiming,tempTranslateY,animationConfig,runOnJS,onChange}=jsThis._closure;{const translation=getTranslationByIndexChange(getItemIndexById(itemsOrder.value,id),getItemIndexById(tempItemsOrder.value,id),itemHeight.value);translateY.value=withTiming(tempTranslateY.value+translation,animationConfig,function(){if(tempItemsOrder.value.toString()!==itemsOrder.value.toString()){runOnJS(onChange)();}});}}\";\n    _f.__workletHash = 9682397263997;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (97:11)\";\n    return _f;\n  }()).onFinalize(function () {\n    var _f = function _f() {\n      if (isDragging.value) {\n        isDragging.value = false;\n      }\n    };\n    _f._closure = {\n      isDragging: isDragging\n    };\n    _f.asString = \"function _f(){const{isDragging}=jsThis._closure;{if(isDragging.value){isDragging.value=false;}}}\";\n    _f.__workletHash = 5549111903833;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (104:16)\";\n    return _f;\n  }());\n  var draggedAnimatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var scale = withSpring(isDragging.value ? propsScale : 1);\n      var zIndex = isDragging.value ? 100 : withTiming(0, animationConfig);\n      var opacity = isDragging.value ? 0.95 : 1;\n      var shadow = isDragging.value ? _objectSpread(_objectSpread({}, Shadows.sh30.bottom), Shadows.sh30.top) : {\n        shadowColor: Colors.transparent,\n        elevation: 0\n      };\n      return _objectSpread({\n        backgroundColor: Colors.$backgroundDefault,\n        zIndex: zIndex,\n        transform: [{\n          translateY: translateY.value\n        }, {\n          scale: scale\n        }],\n        opacity: opacity\n      }, shadow);\n    };\n    _f._closure = {\n      withSpring: withSpring,\n      isDragging: isDragging,\n      propsScale: propsScale,\n      withTiming: withTiming,\n      animationConfig: animationConfig,\n      Shadows: {\n        sh30: {\n          bottom: Shadows.sh30.bottom,\n          top: Shadows.sh30.top\n        }\n      },\n      Colors: {\n        transparent: Colors.transparent,\n        $backgroundDefault: Colors.$backgroundDefault\n      },\n      translateY: translateY\n    };\n    _f.asString = \"function _f(){const{withSpring,isDragging,propsScale,withTiming,animationConfig,Shadows,Colors,translateY}=jsThis._closure;{const scale=withSpring(isDragging.value?propsScale:1);const zIndex=isDragging.value?100:withTiming(0,animationConfig);const opacity=isDragging.value?0.95:1;const shadow=isDragging.value?{...Shadows.sh30.bottom,...Shadows.sh30.top}:{shadowColor:Colors.transparent,elevation:0};return{backgroundColor:Colors.$backgroundDefault,zIndex:zIndex,transform:[{translateY:translateY.value},{scale:scale}],opacity:opacity,...shadow};}}\";\n    _f.__workletHash = 5980852794718;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableList\\\\SortableListItem.js (109:48)\";\n    _f.__optimalization = 2;\n    return _f;\n  }());\n  return _jsx(GestureDetector, {\n    gesture: dragOnLongPressGesture,\n    children: _jsx(View, {\n      reanimated: true,\n      style: draggedAnimatedStyle,\n      onLayout: index === 0 ? onItemLayout : undefined,\n      children: children\n    })\n  });\n};\nexport default React.memo(SortableListItem);","map":{"version":3,"names":["_map","React","useContext","useSharedValue","useAnimatedReaction","withTiming","Easing","runOnJS","useAnimatedStyle","withSpring","GestureDetector","Gesture","View","Shadows","Colors","useDidUpdate","SortableListContext","usePresenter","HapticService","HapticType","animationConfig","easing","inOut","ease","duration","SortableListItem","props","children","index","data","itemHeight","onItemLayout","itemsOrder","lockedIds","onChange","enableHaptic","scale","propsScale","getTranslationByIndexChange","getItemIndexById","getIndexByPosition","getIdByItemIndex","id","locked","initialIndex","indexOf","currIndex","value","translateY","isDragging","tempTranslateY","tempItemsOrder","newItemIndex","newIndex","prevIndex","translation","dragOnLongPressGesture","Pan","activateAfterLongPress","enabled","onStart","onTouchesMove","triggerHaptic","selection","onUpdate","event","translationY","oldIndex","Math","abs","sign","itemIdToSwap","skipDirection","undefined","newItemsOrder","onEnd","toString","onFinalize","draggedAnimatedStyle","zIndex","opacity","shadow","sh30","bottom","top","shadowColor","transparent","elevation","backgroundColor","$backgroundDefault","transform","memo"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/sortableList/SortableListItem.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport React, { useContext } from 'react';\nimport { useSharedValue, useAnimatedReaction, withTiming, Easing, runOnJS, useAnimatedStyle, withSpring } from 'react-native-reanimated';\nimport { GestureDetector, Gesture } from 'react-native-gesture-handler';\nimport View from \"../view\";\nimport { Shadows, Colors } from \"../../style\";\nimport { useDidUpdate } from \"../../hooks\";\nimport SortableListContext from \"./SortableListContext\";\nimport usePresenter from \"./usePresenter\";\nimport { HapticService, HapticType } from \"../../services\";\nconst animationConfig = {\n  easing: Easing.inOut(Easing.ease),\n  duration: 350\n};\nconst SortableListItem = props => {\n  const {\n    children,\n    index\n  } = props;\n  const {\n    data,\n    itemHeight,\n    onItemLayout,\n    itemsOrder,\n    lockedIds,\n    onChange,\n    enableHaptic,\n    scale: propsScale = 1\n  } = useContext(SortableListContext);\n  const {\n    getTranslationByIndexChange,\n    getItemIndexById,\n    getIndexByPosition,\n    getIdByItemIndex\n  } = usePresenter();\n  const id = data[index].id;\n  const locked = data[index].locked;\n  const initialIndex = useSharedValue(_map(data, 'id').indexOf(id));\n  const currIndex = useSharedValue(initialIndex.value);\n  const translateY = useSharedValue(0);\n  const isDragging = useSharedValue(false);\n  const tempTranslateY = useSharedValue(0);\n  const tempItemsOrder = useSharedValue(itemsOrder.value);\n  useDidUpdate(() => {\n    const newItemIndex = _map(data, 'id').indexOf(id);\n    initialIndex.value = newItemIndex;\n    currIndex.value = newItemIndex;\n    translateY.value = 0;\n  }, [data]);\n  useAnimatedReaction(() => getItemIndexById(itemsOrder.value, id), (newIndex, prevIndex) => {\n    if (prevIndex === null || newIndex === prevIndex) {\n      return;\n    }\n    currIndex.value = newIndex;\n    if (!isDragging.value) {\n      const translation = getTranslationByIndexChange(currIndex.value, initialIndex.value, itemHeight.value);\n      translateY.value = withTiming(translation, animationConfig);\n    }\n  }, []);\n  const dragOnLongPressGesture = Gesture.Pan().activateAfterLongPress(250).enabled(!locked).onStart(() => {\n    isDragging.value = true;\n    translateY.value = getTranslationByIndexChange(currIndex.value, initialIndex.value, itemHeight.value);\n    tempTranslateY.value = translateY.value;\n    tempItemsOrder.value = itemsOrder.value;\n  }).onTouchesMove(() => {\n    if (enableHaptic && !isDragging.value) {\n      runOnJS(HapticService.triggerHaptic)(HapticType.selection, 'SortableList');\n    }\n  }).onUpdate(event => {\n    translateY.value = tempTranslateY.value + event.translationY;\n\n    // Swapping items\n    let newIndex = getIndexByPosition(translateY.value, itemHeight.value) + initialIndex.value;\n    const oldIndex = getItemIndexById(itemsOrder.value, id);\n    if (newIndex !== oldIndex) {\n      // Sometimes getIndexByPosition will give an index that is off by one because of rounding error (floor\\ceil does not help)\n      if (Math.abs(newIndex - oldIndex) > 1) {\n        newIndex = Math.sign(newIndex - oldIndex) + oldIndex;\n      }\n      let itemIdToSwap = getIdByItemIndex(itemsOrder.value, newIndex);\n\n      // Skip locked item(s)\n      while (lockedIds.value[itemIdToSwap]) {\n        const skipDirection = Math.sign(newIndex - oldIndex);\n        newIndex = skipDirection + newIndex;\n        itemIdToSwap = getIdByItemIndex(itemsOrder.value, newIndex);\n      }\n\n      // Swap items\n      if (itemIdToSwap !== undefined) {\n        const newItemsOrder = [...itemsOrder.value];\n        newItemsOrder[newIndex] = id;\n        newItemsOrder[oldIndex] = itemIdToSwap;\n        itemsOrder.value = newItemsOrder;\n      }\n    }\n  }).onEnd(() => {\n    const translation = getTranslationByIndexChange(getItemIndexById(itemsOrder.value, id), getItemIndexById(tempItemsOrder.value, id), itemHeight.value);\n    translateY.value = withTiming(tempTranslateY.value + translation, animationConfig, () => {\n      if (tempItemsOrder.value.toString() !== itemsOrder.value.toString()) {\n        runOnJS(onChange)();\n      }\n    });\n  }).onFinalize(() => {\n    if (isDragging.value) {\n      isDragging.value = false;\n    }\n  });\n  const draggedAnimatedStyle = useAnimatedStyle(() => {\n    const scale = withSpring(isDragging.value ? propsScale : 1);\n    const zIndex = isDragging.value ? 100 : withTiming(0, animationConfig);\n    const opacity = isDragging.value ? 0.95 : 1;\n    const shadow = isDragging.value ? {\n      ...Shadows.sh30.bottom,\n      ...Shadows.sh30.top\n    } : {\n      shadowColor: Colors.transparent,\n      elevation: 0\n    };\n    return {\n      backgroundColor: Colors.$backgroundDefault,\n      // required for elevation to work in Android\n      zIndex,\n      transform: [{\n        translateY: translateY.value\n      }, {\n        scale\n      }],\n      opacity,\n      ...shadow\n    };\n  });\n  return <GestureDetector gesture={dragOnLongPressGesture}>\n      <View reanimated style={draggedAnimatedStyle} onLayout={index === 0 ? onItemLayout : undefined}>\n        {children}\n      </View>\n    </GestureDetector>;\n};\nexport default React.memo(SortableListItem);"],"mappings":"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"},"metadata":{},"sourceType":"module"}