{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport RNCNetInfo from \"./nativeModule\";\nimport { DEVICE_CONNECTIVITY_EVENT } from \"./privateTypes\";\nvar nativeEventEmitter = new NativeEventEmitter();\nRNCNetInfo.addListener(DEVICE_CONNECTIVITY_EVENT, function (event) {\n  nativeEventEmitter.emit(DEVICE_CONNECTIVITY_EVENT, event);\n});\nexport default _objectSpread(_objectSpread({}, RNCNetInfo), {}, {\n  eventEmitter: nativeEventEmitter\n});","map":{"version":3,"mappings":";;;;AAUA,OAAOA,UAAP;AACA,SAAQC,yBAAR;AAEA,IAAMC,kBAAkB,GAAG,IAAIC,kBAAJ,EAA3B;AAGAH,UAAU,CAACI,WAAX,CACEH,yBADF,EAEGI,eAAD,EAAiB;EACfH,kBAAkB,CAACI,IAAnB,CAAwBL,yBAAxB,EAAmDI,KAAnD;AACD,CAJH;AAOA,+CACKL,UADU;EAEbO,YAAY,EAAEL;AAAAA","names":["RNCNetInfo","DEVICE_CONNECTIVITY_EVENT","nativeEventEmitter","NativeEventEmitter","addListener","event","emit","eventEmitter"],"sources":["nativeInterface.web.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport {NativeEventEmitter} from 'react-native';\nimport RNCNetInfo from './nativeModule';\nimport {DEVICE_CONNECTIVITY_EVENT} from './privateTypes';\n\nconst nativeEventEmitter = new NativeEventEmitter();\n\n// Listen to connectivity events\nRNCNetInfo.addListener(\n  DEVICE_CONNECTIVITY_EVENT,\n  (event): void => {\n    nativeEventEmitter.emit(DEVICE_CONNECTIVITY_EVENT, event);\n  },\n);\n\nexport default {\n  ...RNCNetInfo,\n  eventEmitter: nativeEventEmitter,\n};\n"]},"metadata":{},"sourceType":"module"}