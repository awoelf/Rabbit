{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _lowerCase from \"lodash/lowerCase\";\nimport _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NetInfoPackage as NetInfo } from \"../../optionalDependencies\";\nimport { Colors, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { ConnectionStatusBarProps, DEFAULT_PROPS } from \"./Types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { ConnectionStatusBarProps };\nvar ConnectionStatusBar = function (_PureComponent) {\n  _inherits(ConnectionStatusBar, _PureComponent);\n  var _super = _createSuper(ConnectionStatusBar);\n  function ConnectionStatusBar(props) {\n    var _this;\n    _classCallCheck(this, ConnectionStatusBar);\n    _this = _super.call(this, props);\n    _this.generateStyles();\n    _this.onConnectionChange = _this.onConnectionChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isConnected: true,\n      isCancelled: false\n    };\n    if (NetInfo) {\n      _this.getInitialConnectionState();\n    } else {\n      console.error(\"RNUILib ConnectionStatusBar component requires installing \\\"@react-native-community/netinfo\\\" dependency\");\n    }\n    return _this;\n  }\n  _createClass(ConnectionStatusBar, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = NetInfo == null ? void 0 : NetInfo.addEventListener(this.onConnectionChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: \"onConnectionChange\",\n    value: function onConnectionChange(state) {\n      var _this2 = this;\n      var isConnected = this.isStateConnected(state);\n      if (isConnected !== this.state.isConnected) {\n        this.setState({\n          isConnected: isConnected,\n          isCancelled: false\n        });\n        if (this.props.onConnectionChange) {\n          this.props.onConnectionChange(isConnected, false);\n        }\n        if (!isConnected) {\n          setTimeout(function () {\n            _this2.getInitialConnectionState();\n          }, 3000);\n        }\n        if (!isConnected && _isFunction(ConnectionStatusBar.onConnectionLost)) {\n          ConnectionStatusBar.onConnectionLost();\n        }\n      }\n    }\n  }, {\n    key: \"getInitialConnectionState\",\n    value: function () {\n      var _getInitialConnectionState = _asyncToGenerator(function* () {\n        var isConnected = (yield NetInfo == null ? void 0 : NetInfo.fetch()).isConnected;\n        this.setState({\n          isConnected: isConnected\n        });\n        if (this.props.onConnectionChange) {\n          this.props.onConnectionChange(isConnected, true);\n        }\n      });\n      function getInitialConnectionState() {\n        return _getInitialConnectionState.apply(this, arguments);\n      }\n      return getInitialConnectionState;\n    }()\n  }, {\n    key: \"isStateConnected\",\n    value: function isStateConnected(state) {\n      var lowerCaseState = _lowerCase(state.type);\n      var isConnected = lowerCaseState !== 'none';\n      return isConnected;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (this.state.isConnected || this.state.isCancelled) {\n        return false;\n      }\n      var containerStyle = [this.styles.topContainer, this.props.useAbsolutePosition ? this.styles.absolutePosition : null];\n      return _jsx(View, {\n        useSafeArea: true,\n        style: containerStyle,\n        children: _jsx(View, {\n          style: this.styles.container,\n          children: _jsxs(View, {\n            style: {\n              flex: 1,\n              flexDirection: 'row'\n            },\n            children: [_jsx(Text, {\n              style: this.styles.text,\n              children: this.props.label\n            }), this.props.allowDismiss && _jsx(TouchableOpacity, {\n              style: this.styles.xContainer,\n              onPress: function onPress() {\n                return _this3.setState({\n                  isCancelled: true\n                });\n              },\n              children: _jsx(Text, {\n                style: this.styles.x,\n                children: \"\\u2715\"\n              })\n            })]\n          })\n        })\n      });\n    }\n  }], [{\n    key: \"registerGlobalOnConnectionLost\",\n    value: function registerGlobalOnConnectionLost(callback) {\n      ConnectionStatusBar.onConnectionLost = callback;\n    }\n  }, {\n    key: \"unregisterGlobalOnConnectionLost\",\n    value: function unregisterGlobalOnConnectionLost() {\n      delete ConnectionStatusBar.onConnectionLost;\n    }\n  }]);\n  return ConnectionStatusBar;\n}(PureComponent);\nConnectionStatusBar.displayName = 'ConnectionStatusBar';\nConnectionStatusBar.defaultProps = DEFAULT_PROPS;\nfunction createStyles() {\n  var _Typography$text;\n  var typography = Constants.isSmallScreen ? Typography.text90 : Typography.text80;\n  return StyleSheet.create({\n    topContainer: {\n      backgroundColor: Colors.grey30\n    },\n    absolutePosition: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      bottom: undefined\n    }),\n    container: {\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    text: _objectSpread(_objectSpread({\n      flex: 1\n    }, typography), {}, {\n      textAlign: 'center',\n      color: Colors.grey60,\n      marginTop: 8,\n      marginBottom: 8,\n      alignSelf: 'center'\n    }),\n    xContainer: {\n      paddingLeft: 10,\n      paddingRight: 10,\n      alignSelf: 'center'\n    },\n    x: {\n      fontSize: (_Typography$text = Typography.text80) == null ? void 0 : _Typography$text.fontSize,\n      color: Colors.black\n    }\n  });\n}\nexport { ConnectionStatusBar };\nexport default asBaseComponent(ConnectionStatusBar);","map":{"version":3,"names":["_lowerCase","_isFunction","React","PureComponent","NetInfoPackage","NetInfo","Colors","Typography","TouchableOpacity","View","Constants","asBaseComponent","ConnectionStatusBarProps","DEFAULT_PROPS","ConnectionStatusBar","props","generateStyles","onConnectionChange","bind","state","isConnected","isCancelled","getInitialConnectionState","console","error","styles","createStyles","unsubscribe","addEventListener","isStateConnected","setState","setTimeout","onConnectionLost","fetch","lowerCaseState","type","containerStyle","topContainer","useAbsolutePosition","absolutePosition","container","flex","flexDirection","text","label","allowDismiss","xContainer","x","callback","displayName","defaultProps","typography","isSmallScreen","text90","text80","StyleSheet","create","backgroundColor","grey30","absoluteFillObject","bottom","undefined","justifyContent","textAlign","color","grey60","marginTop","marginBottom","alignSelf","paddingLeft","paddingRight","fontSize","black"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/connectionStatusBar/index.js"],"sourcesContent":["import _lowerCase from \"lodash/lowerCase\";\nimport _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Text } from 'react-native';\nimport { NetInfoPackage as NetInfo } from \"../../optionalDependencies\";\nimport { Colors, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { ConnectionStatusBarProps, DEFAULT_PROPS } from \"./Types\";\nexport { ConnectionStatusBarProps };\n\n/**\n * @description: Top bar to show a \"no internet\" connection status. Note: Run on real device for best results\n * @image: https://user-images.githubusercontent.com/33805983/34683190-f3b1904c-f4a9-11e7-9d46-9a340bd35448.png, https://user-images.githubusercontent.com/33805983/34484206-edc6c6e4-efcb-11e7-88b2-cd394c19dd5e.png\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ConnectionStatusBarScreen.tsx\n * @notes: The component requires installing the '@react-native-community/netinfo' native library\n */\nclass ConnectionStatusBar extends PureComponent {\n  static displayName = 'ConnectionStatusBar';\n  static defaultProps = DEFAULT_PROPS;\n  static registerGlobalOnConnectionLost(callback) {\n    ConnectionStatusBar.onConnectionLost = callback;\n  }\n  static unregisterGlobalOnConnectionLost() {\n    delete ConnectionStatusBar.onConnectionLost;\n  }\n  constructor(props) {\n    super(props);\n    this.generateStyles();\n    this.onConnectionChange = this.onConnectionChange.bind(this);\n    this.state = {\n      isConnected: true,\n      isCancelled: false\n    };\n    if (NetInfo) {\n      this.getInitialConnectionState();\n    } else {\n      console.error(`RNUILib ConnectionStatusBar component requires installing \"@react-native-community/netinfo\" dependency`);\n    }\n  }\n  generateStyles() {\n    this.styles = createStyles();\n  }\n  componentDidMount() {\n    this.unsubscribe = NetInfo?.addEventListener(this.onConnectionChange);\n  }\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n  onConnectionChange(state) {\n    const isConnected = this.isStateConnected(state);\n    if (isConnected !== this.state.isConnected) {\n      this.setState({\n        isConnected,\n        isCancelled: false\n      });\n      if (this.props.onConnectionChange) {\n        this.props.onConnectionChange(isConnected, false);\n      }\n      if (!isConnected) {\n        setTimeout(() => {\n          this.getInitialConnectionState();\n        }, 3000);\n      }\n      if (!isConnected && _isFunction(ConnectionStatusBar.onConnectionLost)) {\n        ConnectionStatusBar.onConnectionLost();\n      }\n    }\n  }\n  async getInitialConnectionState() {\n    const isConnected = (await NetInfo?.fetch()).isConnected;\n    this.setState({\n      isConnected\n    });\n    if (this.props.onConnectionChange) {\n      this.props.onConnectionChange(isConnected, true);\n    }\n  }\n  isStateConnected(state) {\n    const lowerCaseState = _lowerCase(state.type);\n    const isConnected = lowerCaseState !== 'none';\n    return isConnected;\n  }\n  render() {\n    if (this.state.isConnected || this.state.isCancelled) {\n      return false;\n    }\n    const containerStyle = [this.styles.topContainer, this.props.useAbsolutePosition ? this.styles.absolutePosition : null];\n    return <View useSafeArea style={containerStyle}>\n        <View style={this.styles.container}>\n          <View style={{\n          flex: 1,\n          flexDirection: 'row'\n        }}>\n            <Text style={this.styles.text}>{this.props.label}</Text>\n            {this.props.allowDismiss && <TouchableOpacity style={this.styles.xContainer} onPress={() => this.setState({\n            isCancelled: true\n          })}>\n                <Text style={this.styles.x}>✕</Text>\n              </TouchableOpacity>}\n          </View>\n        </View>\n      </View>;\n  }\n}\nfunction createStyles() {\n  const typography = Constants.isSmallScreen ? Typography.text90 : Typography.text80;\n  return StyleSheet.create({\n    topContainer: {\n      backgroundColor: Colors.grey30\n    },\n    absolutePosition: {\n      ...StyleSheet.absoluteFillObject,\n      bottom: undefined\n    },\n    container: {\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    text: {\n      flex: 1,\n      ...typography,\n      textAlign: 'center',\n      color: Colors.grey60,\n      marginTop: 8,\n      marginBottom: 8,\n      alignSelf: 'center'\n    },\n    xContainer: {\n      paddingLeft: 10,\n      paddingRight: 10,\n      alignSelf: 'center'\n    },\n    x: {\n      fontSize: Typography.text80?.fontSize,\n      color: Colors.black\n    }\n  });\n}\nexport { ConnectionStatusBar }; // For tests\n\nexport default asBaseComponent(ConnectionStatusBar);"],"mappings":"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"},"metadata":{},"sourceType":"module"}