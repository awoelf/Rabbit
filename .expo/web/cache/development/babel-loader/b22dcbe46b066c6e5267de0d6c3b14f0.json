{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport NativeInterface from \"./nativeInterface\";\nimport InternetReachability from \"./internetReachability\";\nimport * as PrivateTypes from \"./privateTypes\";\nvar State = _createClass(function State(configuration) {\n  var _this = this;\n  _classCallCheck(this, State);\n  _defineProperty(this, \"_nativeEventSubscription\", null);\n  _defineProperty(this, \"_subscriptions\", new Set());\n  _defineProperty(this, \"_latestState\", null);\n  _defineProperty(this, \"_internetReachability\", void 0);\n  _defineProperty(this, \"_handleNativeStateUpdate\", function (state) {\n    _this._internetReachability.update(state);\n    var convertedState = _this._convertState(state);\n    _this._latestState = convertedState;\n    _this._subscriptions.forEach(function (handler) {\n      return handler(convertedState);\n    });\n  });\n  _defineProperty(this, \"_handleInternetReachabilityUpdate\", function (isInternetReachable) {\n    if (!_this._latestState) {\n      return;\n    }\n    var nextState = _objectSpread(_objectSpread({}, _this._latestState), {}, {\n      isInternetReachable: isInternetReachable\n    });\n    _this._latestState = nextState;\n    _this._subscriptions.forEach(function (handler) {\n      return handler(nextState);\n    });\n  });\n  _defineProperty(this, \"_fetchCurrentState\", function () {\n    var _ref = _asyncToGenerator(function* (requestedInterface) {\n      var state = yield NativeInterface.getCurrentState(requestedInterface);\n      _this._internetReachability.update(state);\n      var convertedState = _this._convertState(state);\n      if (!requestedInterface) {\n        _this._latestState = convertedState;\n        _this._subscriptions.forEach(function (handler) {\n          return handler(convertedState);\n        });\n      }\n      return convertedState;\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  _defineProperty(this, \"_convertState\", function (input) {\n    if (typeof input.isInternetReachable === 'boolean') {\n      return input;\n    } else {\n      return _objectSpread(_objectSpread({}, input), {}, {\n        isInternetReachable: _this._internetReachability.currentState()\n      });\n    }\n  });\n  _defineProperty(this, \"latest\", function (requestedInterface) {\n    if (requestedInterface) {\n      return _this._fetchCurrentState(requestedInterface);\n    } else if (_this._latestState) {\n      return Promise.resolve(_this._latestState);\n    } else {\n      return _this._fetchCurrentState();\n    }\n  });\n  _defineProperty(this, \"add\", function (handler) {\n    _this._subscriptions.add(handler);\n    if (_this._latestState) {\n      handler(_this._latestState);\n    } else {\n      _this.latest().then(handler);\n    }\n  });\n  _defineProperty(this, \"remove\", function (handler) {\n    _this._subscriptions.delete(handler);\n  });\n  _defineProperty(this, \"tearDown\", function () {\n    if (_this._internetReachability) {\n      _this._internetReachability.tearDown();\n    }\n    if (_this._nativeEventSubscription) {\n      _this._nativeEventSubscription.remove();\n    }\n    _this._subscriptions.clear();\n  });\n  this._internetReachability = new InternetReachability(configuration, this._handleInternetReachabilityUpdate);\n  this._nativeEventSubscription = NativeInterface.eventEmitter.addListener(PrivateTypes.DEVICE_CONNECTIVITY_EVENT, this._handleNativeStateUpdate);\n  this._fetchCurrentState();\n});\nexport { State as default };","map":{"version":3,"mappings":"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","names":["NativeInterface","InternetReachability","PrivateTypes","State","constructor","configuration","_defineProperty","Set","state","_internetReachability","update","convertedState","_convertState","_latestState","_subscriptions","forEach","handler","isInternetReachable","nextState","requestedInterface","getCurrentState","input","currentState","_fetchCurrentState","Promise","resolve","add","latest","then","delete","tearDown","_nativeEventSubscription","remove","clear","_handleInternetReachabilityUpdate","eventEmitter","addListener","DEVICE_CONNECTIVITY_EVENT","_handleNativeStateUpdate"],"sources":["state.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport {NativeEventSubscription} from 'react-native';\nimport NativeInterface from './nativeInterface';\nimport InternetReachability from './internetReachability';\nimport * as Types from './types';\nimport * as PrivateTypes from './privateTypes';\n\nexport default class State {\n  private _nativeEventSubscription: NativeEventSubscription | null = null;\n  private _subscriptions = new Set<Types.NetInfoChangeHandler>();\n  private _latestState: Types.NetInfoState | null = null;\n  private _internetReachability: InternetReachability;\n\n  constructor(configuration: Types.NetInfoConfiguration) {\n    // Add the listener to the internet connectivity events\n    this._internetReachability = new InternetReachability(\n      configuration,\n      this._handleInternetReachabilityUpdate,\n    );\n\n    // Add the subscription to the native events\n    this._nativeEventSubscription = NativeInterface.eventEmitter.addListener(\n      PrivateTypes.DEVICE_CONNECTIVITY_EVENT,\n      this._handleNativeStateUpdate,\n    );\n\n    // Fetch the current state from the native module\n    this._fetchCurrentState();\n  }\n\n  private _handleNativeStateUpdate = (\n    state: PrivateTypes.NetInfoNativeModuleState,\n  ): void => {\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n\n    // Convert the state from native to JS shape\n    const convertedState = this._convertState(state);\n\n    // Update the listeners\n    this._latestState = convertedState;\n    this._subscriptions.forEach((handler): void => handler(convertedState));\n  };\n\n  private _handleInternetReachabilityUpdate = (\n    isInternetReachable: boolean | null | undefined,\n  ): void => {\n    if (!this._latestState) {\n      return;\n    }\n\n    const nextState = {\n      ...this._latestState,\n      isInternetReachable,\n    } as Types.NetInfoState;\n    this._latestState = nextState;\n    this._subscriptions.forEach((handler): void => handler(nextState));\n  };\n\n  public _fetchCurrentState = async (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    const state = await NativeInterface.getCurrentState(requestedInterface);\n\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n    // Convert and store the new state\n    const convertedState = this._convertState(state);\n    if (!requestedInterface) {\n      this._latestState = convertedState;\n      this._subscriptions.forEach((handler): void => handler(convertedState));\n    }\n\n    return convertedState;\n  };\n\n  private _convertState = (\n    input: PrivateTypes.NetInfoNativeModuleState,\n  ): Types.NetInfoState => {\n    if (typeof input.isInternetReachable === 'boolean') {\n      return input as Types.NetInfoState;\n    } else {\n      return {\n        ...input,\n        isInternetReachable: this._internetReachability.currentState(),\n      } as Types.NetInfoState;\n    }\n  };\n\n  public latest = (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    if (requestedInterface) {\n      return this._fetchCurrentState(requestedInterface);\n    } else if (this._latestState) {\n      return Promise.resolve(this._latestState);\n    } else {\n      return this._fetchCurrentState();\n    }\n  };\n\n  public add = (handler: Types.NetInfoChangeHandler): void => {\n    // Add the subscription handler to our set\n    this._subscriptions.add(handler);\n\n    // Send it the latest data we have\n    if (this._latestState) {\n      handler(this._latestState);\n    } else {\n      this.latest().then(handler);\n    }\n  };\n\n  public remove = (handler: Types.NetInfoChangeHandler): void => {\n    this._subscriptions.delete(handler);\n  };\n\n  public tearDown = (): void => {\n    if (this._internetReachability) {\n      this._internetReachability.tearDown();\n    }\n\n    if (this._nativeEventSubscription) {\n      this._nativeEventSubscription.remove();\n    }\n\n    this._subscriptions.clear();\n  };\n}\n"]},"metadata":{},"sourceType":"module"}