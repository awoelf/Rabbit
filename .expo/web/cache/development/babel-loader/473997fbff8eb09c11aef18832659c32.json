{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\"],\n  _excluded2 = [\"containerStyle\", \"backgroundColor\"],\n  _excluded3 = [\"containerStyle\", \"loop\", \"backgroundColor\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _chunk from \"lodash/chunk\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _inRange from \"lodash/inRange\";\nimport _uniq from \"lodash/uniq\";\nimport _map from \"lodash/map\";\nimport _toUpper from \"lodash/toUpper\";\nimport _times from \"lodash/times\";\nimport memoize from 'memoize-one';\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Carousel from \"../carousel\";\nimport ScrollBar from \"../scrollBar\";\nimport PageControl from \"../pageControl\";\nimport ColorSwatch, { SWATCH_SIZE, SWATCH_MARGIN } from \"../colorSwatch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VERTICAL_PADDING = 16;\nvar HORIZONTAL_PADDING = 20;\nvar MINIMUM_MARGIN = 16;\nvar SCROLLABLE_HEIGHT = 92;\nvar DEFAULT_NUMBER_OF_ROWS = 3;\nvar ColorPalette = function (_PureComponent) {\n  _inherits(ColorPalette, _PureComponent);\n  var _super = _createSuper(ColorPalette);\n  function ColorPalette(props) {\n    var _this;\n    _classCallCheck(this, ColorPalette);\n    _this = _super.call(this, props);\n    _this.carousel = React.createRef();\n    _this.scrollBar = React.createRef();\n    _this.itemsRefs = React.createRef();\n    _this.selectedColorIndex = undefined;\n    _this.selectedPage = undefined;\n    _this.currentColorsCount = undefined;\n    _this.itemsPerRow = 0;\n    _this.itemsPerPage = 0;\n    _this.usePagination = undefined;\n    _this.innerMargin = undefined;\n    _this.swatchStyles = undefined;\n    _this.onOrientationChanged = function () {\n      if (_this.state.orientation !== Constants.orientation) {\n        _this.initLocalVariables();\n        _this.setState({\n          orientation: Constants.orientation\n        });\n      }\n    };\n    _this.getUniqueColors = memoize(function (colors) {\n      var c = _map(colors, function (color) {\n        if (Colors.isTransparent(color)) {\n          return color;\n        }\n        return _toUpper(color);\n      });\n      return _uniq(c);\n    });\n    _this.scrollToSelected = function () {\n      return setTimeout(function () {\n        var _this$state = _this.state,\n          scrollable = _this$state.scrollable,\n          currentPage = _this$state.currentPage;\n        if (scrollable && _this.selectedColorIndex !== undefined && _this.itemsRefs.current) {\n          var _this$itemsRefs$curre;\n          var childRef = (_this$itemsRefs$curre = _this.itemsRefs.current[_this.selectedColorIndex - 1]) == null ? void 0 : _this$itemsRefs$curre.current;\n          if (childRef) {\n            var childLayout = childRef.getLayout();\n            var leftMargins = _this.getHorizontalMargins(_this.selectedColorIndex).marginLeft;\n            var childX = childLayout.x + childLayout.width + SWATCH_MARGIN + leftMargins + SWATCH_SIZE;\n            if (childX > _this.containerWidth) {\n              var _this$scrollBar, _this$scrollBar$curre;\n              (_this$scrollBar = _this.scrollBar) == null ? void 0 : (_this$scrollBar$curre = _this$scrollBar.current) == null ? void 0 : _this$scrollBar$curre.scrollTo({\n                x: childX + HORIZONTAL_PADDING - _this.containerWidth,\n                y: 0,\n                animated: false\n              });\n            }\n          } else if (_this.usePagination) {\n            var _this$carousel, _this$carousel$curren;\n            (_this$carousel = _this.carousel) == null ? void 0 : (_this$carousel$curren = _this$carousel.current) == null ? void 0 : _this$carousel$curren.goToPage(_this.selectedPage || currentPage, false);\n          }\n        }\n      }, 100);\n    };\n    _this.onContentSizeChange = function (contentWidth) {\n      _this.setState({\n        scrollable: contentWidth > _this.containerWidth,\n        contentWidth: contentWidth\n      });\n    };\n    _this.onChangePage = function (index) {\n      _this.setState({\n        currentPage: index\n      });\n    };\n    _this.onValueChange = function (value, options) {\n      _this.props.onValueChange == null ? void 0 : _this.props.onValueChange(value, options);\n    };\n    _this.getHorizontalMargins = function (index) {\n      var isFirst = index === 0;\n      var isOnLeft = isFirst || index % _this.itemsPerRow === 0;\n      var isOnRight = index % _this.itemsPerRow === _this.itemsPerRow - 1;\n      var marginLeft;\n      var marginRight;\n      if (_this.usePagination) {\n        marginLeft = isOnLeft ? 0 : _this.innerMargin;\n        marginRight = isOnRight ? 0 : _this.innerMargin;\n      } else {\n        var isLast = index === _this.colors.length - 1;\n        marginLeft = isFirst ? 8 : _this.innerMargin;\n        marginRight = isLast ? 20 : _this.innerMargin;\n      }\n      return {\n        marginLeft: marginLeft,\n        marginRight: marginRight\n      };\n    };\n    _this.getSwatchStyle = function (index) {\n      var sizeHasChanged = _this.colors.length !== _this.currentColorsCount;\n      var isNextToLastIndex = index === _this.colors.length - 2;\n      if (!_isUndefined(_this.swatchStyles)) {\n        if (_isUndefined(_this.swatchStyles[index]) || !_this.usePagination && sizeHasChanged && isNextToLastIndex) {\n          _this.swatchStyles[index] = [_this.getHorizontalMargins(index), _this.props.swatchStyle];\n          if (sizeHasChanged && isNextToLastIndex) {\n            _this.currentColorsCount = _this.colors.length;\n          }\n        }\n        return _this.swatchStyles[index];\n      }\n    };\n    _this.state = {\n      currentPage: 0,\n      scrollable: false,\n      orientation: undefined,\n      contentWidth: undefined\n    };\n    _this.initLocalVariables();\n    return _this;\n  }\n  _createClass(ColorPalette, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n      _times(this.props.colors.length, function (i) {\n        _this2.itemsRefs.current[i] = React.createRef();\n      });\n      this.scrollToSelected();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.colors !== prevProps.colors) {\n        var newIndex = this.itemsRefs.current.length;\n        this.itemsRefs.current[newIndex] = React.createRef();\n        this.scrollToSelected();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n    }\n  }, {\n    key: \"initLocalVariables\",\n    value: function initLocalVariables() {\n      this.itemsRefs.current = [];\n      this.selectedColorIndex = undefined;\n      this.selectedPage = undefined;\n      this.currentColorsCount = this.colors.length;\n      this.itemsPerRow = this.getItemsPerRow();\n      this.itemsPerPage = this.itemsPerRow * this.getNumberOfRows();\n      this.usePagination = this.shouldUsePagination();\n      this.innerMargin = this.getInnerMargin();\n      this.swatchStyles = [];\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      var value = this.props.value;\n      if (Colors.isTransparent(value)) {\n        return value;\n      }\n      return _toUpper(value);\n    }\n  }, {\n    key: \"colors\",\n    get: function get() {\n      return this.getUniqueColors(this.props.colors);\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      var containerWidth = this.props.containerWidth;\n      return containerWidth || Constants.screenWidth;\n    }\n  }, {\n    key: \"getNumberOfRows\",\n    value: function getNumberOfRows() {\n      var _this$props$numberOfR = this.props.numberOfRows,\n        numberOfRows = _this$props$numberOfR === void 0 ? DEFAULT_NUMBER_OF_ROWS : _this$props$numberOfR;\n      if (!_inRange(numberOfRows, 2, 6)) {\n        console.warn(numberOfRows + \" is not within valid range of color rows (2 to 5);\\n        defaulting to \" + DEFAULT_NUMBER_OF_ROWS + \".\");\n        return DEFAULT_NUMBER_OF_ROWS;\n      }\n      return numberOfRows;\n    }\n  }, {\n    key: \"getItemsPerRow\",\n    value: function getItemsPerRow() {\n      var itemsPerRow = 1;\n      var firstItemWidth = 2 * HORIZONTAL_PADDING + SWATCH_SIZE;\n      var additionalItemMinimumWidth = SWATCH_SIZE + MINIMUM_MARGIN;\n      itemsPerRow += Math.floor((this.containerWidth - firstItemWidth) / additionalItemMinimumWidth);\n      return itemsPerRow;\n    }\n  }, {\n    key: \"shouldUsePagination\",\n    value: function shouldUsePagination() {\n      var usePagination = this.props.usePagination;\n      return usePagination && this.colors.length > this.itemsPerPage;\n    }\n  }, {\n    key: \"getInnerMargin\",\n    value: function getInnerMargin() {\n      if (!this.usePagination) {\n        return HORIZONTAL_PADDING / 2;\n      }\n      var remainingSpace = this.containerWidth - this.itemsPerRow * SWATCH_SIZE - 2 * HORIZONTAL_PADDING;\n      var numberOfMargins = this.itemsPerRow - 1;\n      var margin = remainingSpace / numberOfMargins;\n      return (margin - 0.001) / 2;\n    }\n  }, {\n    key: \"renderColorSwatch\",\n    value: function renderColorSwatch(color, index) {\n      var _this$props = this.props,\n        animatedIndex = _this$props.animatedIndex,\n        testID = _this$props.testID;\n      return _jsx(ColorSwatch, {\n        style: this.getSwatchStyle(index),\n        index: index,\n        color: color,\n        value: color,\n        selected: this.value === color,\n        animated: index === animatedIndex,\n        onPress: this.onValueChange,\n        ref: this.itemsRefs.current[index],\n        testID: testID + \"-\" + color\n      }, color);\n    }\n  }, {\n    key: \"renderPalette\",\n    value: function renderPalette(props, contentStyle, colors, pageIndex) {\n      var _this3 = this;\n      var style = props.style,\n        others = _objectWithoutProperties(props, _excluded);\n      return _jsx(View, _objectSpread(_objectSpread({}, others), {}, {\n        style: [styles.paletteContainer, contentStyle, style],\n        children: _map(colors, function (color, i) {\n          if (color === _this3.value) {\n            _this3.selectedColorIndex = i;\n            _this3.selectedPage = pageIndex;\n          }\n          return _this3.renderColorSwatch(color, i);\n        })\n      }), pageIndex);\n    }\n  }, {\n    key: \"renderScrollableContent\",\n    value: function renderScrollableContent() {\n      var _this$props2 = this.props,\n        containerStyle = _this$props2.containerStyle,\n        backgroundColor = _this$props2.backgroundColor,\n        others = _objectWithoutProperties(_this$props2, _excluded2);\n      var _this$state2 = this.state,\n        scrollable = _this$state2.scrollable,\n        contentWidth = _this$state2.contentWidth;\n      return _jsx(ScrollBar, {\n        ref: this.scrollBar,\n        style: [containerStyle, {\n          backgroundColor: backgroundColor\n        }],\n        scrollEnabled: scrollable,\n        onContentSizeChange: this.onContentSizeChange,\n        height: SCROLLABLE_HEIGHT,\n        containerProps: {\n          width: !scrollable ? contentWidth : undefined\n        },\n        gradientHeight: SCROLLABLE_HEIGHT - 12,\n        gradientColor: backgroundColor,\n        children: this.renderPalette(others, styles.scrollContent, this.colors, 0)\n      });\n    }\n  }, {\n    key: \"renderPaginationContent\",\n    value: function renderPaginationContent() {\n      var _this4 = this;\n      var _this$props3 = this.props,\n        containerStyle = _this$props3.containerStyle,\n        loop = _this$props3.loop,\n        backgroundColor = _this$props3.backgroundColor,\n        others = _objectWithoutProperties(_this$props3, _excluded3);\n      var currentPage = this.state.currentPage;\n      var colorGroups = _chunk(this.colors, this.itemsPerPage);\n      return _jsxs(View, {\n        center: true,\n        style: [containerStyle, styles.paginationContainer, {\n          backgroundColor: backgroundColor\n        }],\n        children: [_jsx(Carousel, {\n          loop: loop,\n          onChangePage: this.onChangePage,\n          ref: this.carousel,\n          children: _map(colorGroups, function (colorsPerPage, index) {\n            return _this4.renderPalette(others, _objectSpread(_objectSpread({}, styles.page), {}, {\n              width: _this4.containerWidth\n            }), colorsPerPage, index);\n          })\n        }), _jsx(PageControl, {\n          size: 6,\n          color: Colors.$backgroundInverted,\n          inactiveColor: Colors.$backgroundDisabled,\n          spacing: 8,\n          numOfPages: colorGroups.length,\n          currentPage: currentPage\n        })]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.usePagination ? this.renderPaginationContent() : this.renderScrollableContent();\n    }\n  }]);\n  return ColorPalette;\n}(PureComponent);\nColorPalette.displayName = 'ColorPalette';\nColorPalette.defaultProps = {\n  numberOfRows: DEFAULT_NUMBER_OF_ROWS,\n  usePagination: true,\n  loop: true,\n  backgroundColor: Colors.$backgroundDefault\n};\nexport default ColorPalette;\nvar styles = StyleSheet.create({\n  paletteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: HORIZONTAL_PADDING,\n    paddingVertical: VERTICAL_PADDING\n  },\n  paginationContainer: {\n    flex: 1,\n    paddingBottom: VERTICAL_PADDING\n  },\n  page: {\n    flexWrap: 'wrap'\n  },\n  scrollContent: {\n    height: SCROLLABLE_HEIGHT,\n    paddingLeft: 12\n  }\n});","map":{"version":3,"names":["_chunk","_isUndefined","_inRange","_uniq","_map","_toUpper","_times","memoize","React","PureComponent","Colors","Constants","View","Carousel","ScrollBar","PageControl","ColorSwatch","SWATCH_SIZE","SWATCH_MARGIN","VERTICAL_PADDING","HORIZONTAL_PADDING","MINIMUM_MARGIN","SCROLLABLE_HEIGHT","DEFAULT_NUMBER_OF_ROWS","ColorPalette","props","carousel","createRef","scrollBar","itemsRefs","selectedColorIndex","undefined","selectedPage","currentColorsCount","itemsPerRow","itemsPerPage","usePagination","innerMargin","swatchStyles","onOrientationChanged","state","orientation","initLocalVariables","setState","getUniqueColors","colors","c","color","isTransparent","scrollToSelected","setTimeout","scrollable","currentPage","current","childRef","childLayout","getLayout","leftMargins","getHorizontalMargins","marginLeft","childX","x","width","containerWidth","scrollTo","y","animated","goToPage","onContentSizeChange","contentWidth","onChangePage","index","onValueChange","value","options","isFirst","isOnLeft","isOnRight","marginRight","isLast","length","getSwatchStyle","sizeHasChanged","isNextToLastIndex","swatchStyle","dimensionsChangeListener","addDimensionsEventListener","i","prevProps","newIndex","removeDimensionsEventListener","getItemsPerRow","getNumberOfRows","shouldUsePagination","getInnerMargin","screenWidth","numberOfRows","console","warn","firstItemWidth","additionalItemMinimumWidth","Math","floor","remainingSpace","numberOfMargins","margin","animatedIndex","testID","contentStyle","pageIndex","style","others","styles","paletteContainer","renderColorSwatch","containerStyle","backgroundColor","renderPalette","scrollContent","loop","colorGroups","paginationContainer","colorsPerPage","page","$backgroundInverted","$backgroundDisabled","renderPaginationContent","renderScrollableContent","displayName","defaultProps","$backgroundDefault","StyleSheet","create","flexDirection","alignItems","paddingLeft","paddingVertical","flex","paddingBottom","flexWrap","height"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/colorPalette/index.js"],"sourcesContent":["import _chunk from \"lodash/chunk\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _inRange from \"lodash/inRange\";\nimport _uniq from \"lodash/uniq\";\nimport _map from \"lodash/map\";\nimport _toUpper from \"lodash/toUpper\";\nimport _times from \"lodash/times\";\nimport memoize from 'memoize-one';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Carousel from \"../carousel\";\nimport ScrollBar from \"../scrollBar\";\nimport PageControl from \"../pageControl\";\nimport ColorSwatch, { SWATCH_SIZE, SWATCH_MARGIN } from \"../colorSwatch\";\nconst VERTICAL_PADDING = 16;\nconst HORIZONTAL_PADDING = 20;\nconst MINIMUM_MARGIN = 16;\nconst SCROLLABLE_HEIGHT = 92;\nconst DEFAULT_NUMBER_OF_ROWS = 3;\n\n/**\n * @description: A color palette component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx\n * @notes: This is a screen width component\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorPalette/ColorPalette.gif?raw=true\n */\nclass ColorPalette extends PureComponent {\n  static displayName = 'ColorPalette';\n  static defaultProps = {\n    numberOfRows: DEFAULT_NUMBER_OF_ROWS,\n    usePagination: true,\n    loop: true,\n    backgroundColor: Colors.$backgroundDefault\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 0,\n      scrollable: false,\n      orientation: undefined,\n      contentWidth: undefined\n    };\n    this.initLocalVariables();\n  }\n  carousel = React.createRef();\n  scrollBar = React.createRef();\n  itemsRefs = React.createRef();\n  selectedColorIndex = undefined;\n  selectedPage = undefined;\n  currentColorsCount = undefined;\n  itemsPerRow = 0;\n  itemsPerPage = 0;\n  usePagination = undefined;\n  innerMargin = undefined;\n  swatchStyles = undefined;\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n    _times(this.props.colors.length, i => {\n      this.itemsRefs.current[i] = React.createRef();\n    });\n    this.scrollToSelected();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.colors !== prevProps.colors) {\n      const newIndex = this.itemsRefs.current.length;\n      this.itemsRefs.current[newIndex] = React.createRef();\n      this.scrollToSelected();\n    }\n  }\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n  }\n  onOrientationChanged = () => {\n    if (this.state.orientation !== Constants.orientation) {\n      this.initLocalVariables();\n      this.setState({\n        orientation: Constants.orientation\n      }); // only to trigger render\n    }\n  };\n\n  initLocalVariables() {\n    this.itemsRefs.current = [];\n    this.selectedColorIndex = undefined;\n    this.selectedPage = undefined;\n    this.currentColorsCount = this.colors.length;\n    this.itemsPerRow = this.getItemsPerRow();\n    this.itemsPerPage = this.itemsPerRow * this.getNumberOfRows();\n    this.usePagination = this.shouldUsePagination();\n    this.innerMargin = this.getInnerMargin();\n    this.swatchStyles = [];\n  }\n  get value() {\n    const {\n      value\n    } = this.props;\n    if (Colors.isTransparent(value)) {\n      return value;\n    }\n    return _toUpper(value);\n  }\n  get colors() {\n    return this.getUniqueColors(this.props.colors);\n  }\n  get containerWidth() {\n    const {\n      containerWidth\n    } = this.props;\n    return containerWidth || Constants.screenWidth;\n  }\n  getUniqueColors = memoize(colors => {\n    const c = _map(colors, color => {\n      if (Colors.isTransparent(color)) {\n        return color;\n      }\n      return _toUpper(color);\n    });\n    return _uniq(c);\n  });\n  getNumberOfRows() {\n    const {\n      numberOfRows = DEFAULT_NUMBER_OF_ROWS\n    } = this.props;\n    if (!_inRange(numberOfRows, 2, 6)) {\n      console.warn(`${numberOfRows} is not within valid range of color rows (2 to 5);\n        defaulting to ${DEFAULT_NUMBER_OF_ROWS}.`);\n      return DEFAULT_NUMBER_OF_ROWS;\n    }\n    return numberOfRows;\n  }\n  getItemsPerRow() {\n    let itemsPerRow = 1;\n    // first item has the page's padding around it\n    const firstItemWidth = 2 * HORIZONTAL_PADDING + SWATCH_SIZE;\n    // additional items have the minimum width of the margin between them and the previous item's width\n    const additionalItemMinimumWidth = SWATCH_SIZE + MINIMUM_MARGIN;\n    // floor(space left / size of additional items)\n    itemsPerRow += Math.floor((this.containerWidth - firstItemWidth) / additionalItemMinimumWidth);\n    return itemsPerRow;\n  }\n  shouldUsePagination() {\n    const {\n      usePagination\n    } = this.props;\n    return usePagination && this.colors.length > this.itemsPerPage;\n  }\n  getInnerMargin() {\n    if (!this.usePagination) {\n      return HORIZONTAL_PADDING / 2;\n    }\n\n    // Now that we have the itemsPerRow set, we can calculate the actual innerMargin\n    const remainingSpace = this.containerWidth - this.itemsPerRow * SWATCH_SIZE - 2 * HORIZONTAL_PADDING;\n    // With pagination - there's 1 less space than the number of items\n    const numberOfMargins = this.itemsPerRow - 1;\n    const margin = remainingSpace / numberOfMargins;\n    // We have to subtract something since otherwise some Android devices will overflow into the next line\n    return (margin - 0.001) / 2;\n  }\n  scrollToSelected = () => setTimeout(() => {\n    const {\n      scrollable,\n      currentPage\n    } = this.state;\n    if (scrollable && this.selectedColorIndex !== undefined && this.itemsRefs.current) {\n      // The this.selectedColorIndex layout doesn't update on time\n      // so we use this.selectedColorIndex - 1 and add an offset of 1 Swatch\n      const childRef = this.itemsRefs.current[this.selectedColorIndex - 1]?.current;\n      if (childRef) {\n        const childLayout = childRef.getLayout();\n        const leftMargins = this.getHorizontalMargins(this.selectedColorIndex).marginLeft;\n        const childX = childLayout.x + childLayout.width + SWATCH_MARGIN + leftMargins + SWATCH_SIZE;\n        if (childX > this.containerWidth) {\n          this.scrollBar?.current?.scrollTo({\n            x: childX + HORIZONTAL_PADDING - this.containerWidth,\n            y: 0,\n            animated: false\n          });\n        }\n      } else if (this.usePagination) {\n        this.carousel?.current?.goToPage(this.selectedPage || currentPage, false);\n      }\n    }\n  }, 100);\n  onContentSizeChange = contentWidth => {\n    this.setState({\n      scrollable: contentWidth > this.containerWidth,\n      contentWidth\n    });\n  };\n  onChangePage = index => {\n    this.setState({\n      currentPage: index\n    });\n  };\n  onValueChange = (value, options) => {\n    this.props.onValueChange?.(value, options);\n  };\n  getHorizontalMargins = index => {\n    const isFirst = index === 0;\n    const isOnLeft = isFirst || index % this.itemsPerRow === 0;\n    const isOnRight = index % this.itemsPerRow === this.itemsPerRow - 1;\n    let marginLeft;\n    let marginRight;\n    if (this.usePagination) {\n      marginLeft = isOnLeft ? 0 : this.innerMargin;\n      marginRight = isOnRight ? 0 : this.innerMargin;\n    } else {\n      const isLast = index === this.colors.length - 1;\n      marginLeft = isFirst ? 8 : this.innerMargin;\n      marginRight = isLast ? 20 : this.innerMargin;\n    }\n    return {\n      marginLeft,\n      marginRight\n    };\n  };\n  getSwatchStyle = index => {\n    const sizeHasChanged = this.colors.length !== this.currentColorsCount;\n    const isNextToLastIndex = index === this.colors.length - 2;\n\n    // Need to update the next to last item because it's margin needs to changed\n    if (!_isUndefined(this.swatchStyles)) {\n      if (_isUndefined(this.swatchStyles[index]) || !this.usePagination && sizeHasChanged && isNextToLastIndex) {\n        this.swatchStyles[index] = [this.getHorizontalMargins(index), this.props.swatchStyle];\n        if (sizeHasChanged && isNextToLastIndex) {\n          this.currentColorsCount = this.colors.length;\n        }\n      }\n      return this.swatchStyles[index];\n    }\n  };\n  renderColorSwatch(color, index) {\n    const {\n      animatedIndex,\n      testID\n    } = this.props;\n    return <ColorSwatch style={this.getSwatchStyle(index)} index={index} key={color} color={color} value={color} selected={this.value === color} animated={index === animatedIndex} onPress={this.onValueChange} ref={this.itemsRefs.current[index]} testID={`${testID}-${color}`} />;\n  }\n  renderPalette(props, contentStyle, colors, pageIndex) {\n    const {\n      style,\n      ...others\n    } = props;\n    return <View key={pageIndex} {...others} style={[styles.paletteContainer, contentStyle, style]}>\n        {_map(colors, (color, i) => {\n        if (color === this.value) {\n          this.selectedColorIndex = i;\n          this.selectedPage = pageIndex;\n        }\n        return this.renderColorSwatch(color, i);\n      })}\n      </View>;\n  }\n  renderScrollableContent() {\n    const {\n      containerStyle,\n      backgroundColor,\n      ...others\n    } = this.props;\n    const {\n      scrollable,\n      contentWidth\n    } = this.state;\n    return <ScrollBar ref={this.scrollBar} style={[containerStyle, {\n      backgroundColor\n    }]} scrollEnabled={scrollable} onContentSizeChange={this.onContentSizeChange} height={SCROLLABLE_HEIGHT} containerProps={{\n      width: !scrollable ? contentWidth : undefined\n    }} gradientHeight={SCROLLABLE_HEIGHT - 12} gradientColor={backgroundColor}>\n        {this.renderPalette(others, styles.scrollContent, this.colors, 0)}\n      </ScrollBar>;\n  }\n  renderPaginationContent() {\n    const {\n      containerStyle,\n      loop,\n      backgroundColor,\n      ...others\n    } = this.props;\n    const {\n      currentPage\n    } = this.state;\n    const colorGroups = _chunk(this.colors, this.itemsPerPage);\n    return <View center style={[containerStyle, styles.paginationContainer, {\n      backgroundColor\n    }]}>\n        <Carousel loop={loop} onChangePage={this.onChangePage} ref={this.carousel}>\n          {_map(colorGroups, (colorsPerPage, index) => {\n          return this.renderPalette(others, {\n            ...styles.page,\n            width: this.containerWidth\n          }, colorsPerPage, index);\n        })}\n        </Carousel>\n        <PageControl size={6} color={Colors.$backgroundInverted} inactiveColor={Colors.$backgroundDisabled} spacing={8} numOfPages={colorGroups.length} currentPage={currentPage} />\n      </View>;\n  }\n  render() {\n    return this.usePagination ? this.renderPaginationContent() : this.renderScrollableContent();\n  }\n}\nexport default ColorPalette;\nconst styles = StyleSheet.create({\n  paletteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: HORIZONTAL_PADDING,\n    paddingVertical: VERTICAL_PADDING\n  },\n  paginationContainer: {\n    flex: 1,\n    paddingBottom: VERTICAL_PADDING\n  },\n  page: {\n    flexWrap: 'wrap'\n  },\n  scrollContent: {\n    height: SCROLLABLE_HEIGHT,\n    paddingLeft: 12\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}