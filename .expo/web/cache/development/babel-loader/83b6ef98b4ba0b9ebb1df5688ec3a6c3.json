{"ast":null,"code":"import { useContext, useImperativeHandle, useRef } from 'react';\nimport FieldContext from \"./FieldContext\";\nvar useImperativeInputHandle = function useImperativeInputHandle(ref, props) {\n  var inputRef = useRef();\n  var context = useContext(FieldContext);\n  useImperativeHandle(ref, function () {\n    return {\n      isFocused: function isFocused() {\n        var _inputRef$current;\n        return (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.isFocused();\n      },\n      focus: function focus() {\n        var _inputRef$current2;\n        return (_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.focus();\n      },\n      blur: function blur() {\n        var _inputRef$current3;\n        return (_inputRef$current3 = inputRef.current) == null ? void 0 : _inputRef$current3.blur();\n      },\n      clear: function clear() {\n        var _inputRef$current4;\n        (_inputRef$current4 = inputRef.current) == null ? void 0 : _inputRef$current4.clear();\n        props.onChangeText == null ? void 0 : props.onChangeText('');\n      },\n      validate: function validate() {\n        return context.validateField();\n      },\n      isValid: function isValid() {\n        return context.checkValidity();\n      }\n    };\n  });\n  return inputRef;\n};\nexport default useImperativeInputHandle;","map":{"version":3,"names":["useContext","useImperativeHandle","useRef","FieldContext","useImperativeInputHandle","ref","props","inputRef","context","isFocused","current","focus","blur","clear","onChangeText","validate","validateField","isValid","checkValidity"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/incubator/TextField/useImperativeInputHandle.js"],"sourcesContent":["import { useContext, useImperativeHandle, useRef } from 'react';\nimport FieldContext from \"./FieldContext\";\nconst useImperativeInputHandle = (ref, props) => {\n  const inputRef = useRef();\n  const context = useContext(FieldContext);\n  useImperativeHandle(ref, () => {\n    return {\n      isFocused: () => inputRef.current?.isFocused(),\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      clear: () => {\n        inputRef.current?.clear();\n        // NOTE: This fixes an RN issue - when triggering imperative clear method, it doesn't call onChangeText\n        props.onChangeText?.('');\n      },\n      validate: () => {\n        return context.validateField();\n      },\n      // Note: This returns field validity without actually validating it\n      isValid: () => {\n        return context.checkValidity();\n      }\n    };\n  });\n  return inputRef;\n};\nexport default useImperativeInputHandle;"],"mappings":"AAAA,SAASA,UAAU,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAC/D,OAAOC,YAAY;AACnB,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAIC,GAAG,EAAEC,KAAK,EAAK;EAC/C,IAAMC,QAAQ,GAAGL,MAAM,EAAE;EACzB,IAAMM,OAAO,GAAGR,UAAU,CAACG,YAAY,CAAC;EACxCF,mBAAmB,CAACI,GAAG,EAAE,YAAM;IAC7B,OAAO;MACLI,SAAS,EAAE;QAAA;QAAA,4BAAMF,QAAQ,CAACG,OAAO,qBAAhB,kBAAkBD,SAAS,EAAE;MAAA;MAC9CE,KAAK,EAAE;QAAA;QAAA,6BAAMJ,QAAQ,CAACG,OAAO,qBAAhB,mBAAkBC,KAAK,EAAE;MAAA;MACtCC,IAAI,EAAE;QAAA;QAAA,6BAAML,QAAQ,CAACG,OAAO,qBAAhB,mBAAkBE,IAAI,EAAE;MAAA;MACpCC,KAAK,EAAE,iBAAM;QAAA;QACX,sBAAAN,QAAQ,CAACG,OAAO,qBAAhB,mBAAkBG,KAAK,EAAE;QAEzBP,KAAK,CAACQ,YAAY,oBAAlBR,KAAK,CAACQ,YAAY,CAAG,EAAE,CAAC;MAC1B,CAAC;MACDC,QAAQ,EAAE,oBAAM;QACd,OAAOP,OAAO,CAACQ,aAAa,EAAE;MAChC,CAAC;MAEDC,OAAO,EAAE,mBAAM;QACb,OAAOT,OAAO,CAACU,aAAa,EAAE;MAChC;IACF,CAAC;EACH,CAAC,CAAC;EACF,OAAOX,QAAQ;AACjB,CAAC;AACD,eAAeH,wBAAwB"},"metadata":{},"sourceType":"module"}