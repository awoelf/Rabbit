{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"lodash/get\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nfunction assignProperties(a, b) {\n  if (a) {\n    Object.keys(b).forEach(function (key) {\n      Object.defineProperty(a, key, Object.getOwnPropertyDescriptor(b, key));\n    });\n  }\n  return a;\n}\nfunction ensurePath(obj, path) {\n  var pointer = obj;\n  var pathArray = path.split('.');\n  var n = pathArray.length;\n  for (var i = 0; i < n; i++) {\n    var segment = pathArray[i];\n    if (pointer[segment]) {\n      var descriptor = Object.getOwnPropertyDescriptor(pointer, segment);\n      if (descriptor != null && descriptor.get) {\n        Object.defineProperty(pointer, segment, descriptor);\n      }\n    } else {\n      pointer[segment] = pointer[segment] || {};\n    }\n    pointer = pointer[segment];\n  }\n  return pointer;\n}\nexport var Assets = function () {\n  function Assets() {\n    _classCallCheck(this, Assets);\n  }\n  _createClass(Assets, [{\n    key: \"loadAssetsGroup\",\n    value: function loadAssetsGroup(groupName, assets) {\n      if (!_isString(groupName)) {\n        throw new Error('group name should be a string');\n      }\n      if (!_isPlainObject(assets)) {\n        throw new Error('assets should be a hash map or a function (for lazy access)');\n      }\n      if (groupName === '') {\n        assignProperties(this, assets);\n      } else {\n        assignProperties(ensurePath(this, groupName), assets);\n      }\n      return this;\n    }\n  }, {\n    key: \"getAssetByPath\",\n    value: function getAssetByPath(path) {\n      return _get(this, path);\n    }\n  }]);\n  return Assets;\n}();","map":{"version":3,"names":["_get","_isPlainObject","_isString","assignProperties","a","b","Object","keys","forEach","key","defineProperty","getOwnPropertyDescriptor","ensurePath","obj","path","pointer","pathArray","split","n","length","i","segment","descriptor","get","Assets","groupName","assets","Error"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/assets/Assets.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nfunction assignProperties(a, b) {\n  if (a) {\n    Object.keys(b).forEach(key => {\n      // @ts-ignore\n      Object.defineProperty(a, key, Object.getOwnPropertyDescriptor(b, key));\n    });\n  }\n  return a;\n}\nfunction ensurePath(obj, path) {\n  let pointer = obj;\n  const pathArray = path.split('.');\n  const n = pathArray.length;\n  for (let i = 0; i < n; i++) {\n    const segment = pathArray[i];\n    if (pointer[segment]) {\n      const descriptor = Object.getOwnPropertyDescriptor(pointer, segment);\n      if (descriptor?.get) {\n        Object.defineProperty(pointer, segment, descriptor);\n      }\n    } else {\n      pointer[segment] = pointer[segment] || {};\n    }\n    pointer = pointer[segment];\n  }\n  return pointer;\n}\nexport class Assets {\n  loadAssetsGroup(groupName, assets) {\n    if (!_isString(groupName)) {\n      throw new Error('group name should be a string');\n    }\n    if (!_isPlainObject(assets)) {\n      throw new Error('assets should be a hash map or a function (for lazy access)');\n    }\n    if (groupName === '') {\n      assignProperties(this, assets);\n    } else {\n      assignProperties(ensurePath(this, groupName), assets);\n    }\n    return this;\n  }\n  getAssetByPath(path) {\n    return _get(this, path);\n  }\n}"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,gBAAgB,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC9B,IAAID,CAAC,EAAE;IACLE,MAAM,CAACC,IAAI,CAACF,CAAC,CAAC,CAACG,OAAO,CAAC,UAAAC,GAAG,EAAI;MAE5BH,MAAM,CAACI,cAAc,CAACN,CAAC,EAAEK,GAAG,EAAEH,MAAM,CAACK,wBAAwB,CAACN,CAAC,EAAEI,GAAG,CAAC,CAAC;IACxE,CAAC,CAAC;EACJ;EACA,OAAOL,CAAC;AACV;AACA,SAASQ,UAAU,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC7B,IAAIC,OAAO,GAAGF,GAAG;EACjB,IAAMG,SAAS,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACjC,IAAMC,CAAC,GAAGF,SAAS,CAACG,MAAM;EAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;IAC1B,IAAMC,OAAO,GAAGL,SAAS,CAACI,CAAC,CAAC;IAC5B,IAAIL,OAAO,CAACM,OAAO,CAAC,EAAE;MACpB,IAAMC,UAAU,GAAGhB,MAAM,CAACK,wBAAwB,CAACI,OAAO,EAAEM,OAAO,CAAC;MACpE,IAAIC,UAAU,YAAVA,UAAU,CAAEC,GAAG,EAAE;QACnBjB,MAAM,CAACI,cAAc,CAACK,OAAO,EAAEM,OAAO,EAAEC,UAAU,CAAC;MACrD;IACF,CAAC,MAAM;MACLP,OAAO,CAACM,OAAO,CAAC,GAAGN,OAAO,CAACM,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3C;IACAN,OAAO,GAAGA,OAAO,CAACM,OAAO,CAAC;EAC5B;EACA,OAAON,OAAO;AAChB;AACA,WAAaS,MAAM;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACjB,yBAAgBC,SAAS,EAAEC,MAAM,EAAE;MACjC,IAAI,CAACxB,SAAS,CAACuB,SAAS,CAAC,EAAE;QACzB,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;MAClD;MACA,IAAI,CAAC1B,cAAc,CAACyB,MAAM,CAAC,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,6DAA6D,CAAC;MAChF;MACA,IAAIF,SAAS,KAAK,EAAE,EAAE;QACpBtB,gBAAgB,CAAC,IAAI,EAAEuB,MAAM,CAAC;MAChC,CAAC,MAAM;QACLvB,gBAAgB,CAACS,UAAU,CAAC,IAAI,EAAEa,SAAS,CAAC,EAAEC,MAAM,CAAC;MACvD;MACA,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OACD,wBAAeZ,IAAI,EAAE;MACnB,OAAOd,IAAI,CAAC,IAAI,EAAEc,IAAI,CAAC;IACzB;EAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}