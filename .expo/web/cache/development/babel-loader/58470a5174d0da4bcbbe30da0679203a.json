{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _toLower from \"lodash/toLower\";\nimport _split from \"lodash/split\";\nimport React, { useEffect, useMemo, forwardRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LogService } from \"../../services\";\nimport { Colors, BorderRadiuses } from \"../../style\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport Badge from \"../badge\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport AnimatedImage from \"../animatedImage\";\nimport * as AvatarHelper from \"../../helpers/AvatarHelper\";\nimport { useThemeProps } from \"../../hooks\";\nimport { isSvg } from \"../../utils/imageUtils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var BadgePosition;\n(function (BadgePosition) {\n  BadgePosition[\"TOP_RIGHT\"] = \"TOP_RIGHT\";\n  BadgePosition[\"TOP_LEFT\"] = \"TOP_LEFT\";\n  BadgePosition[\"BOTTOM_RIGHT\"] = \"BOTTOM_RIGHT\";\n  BadgePosition[\"BOTTOM_LEFT\"] = \"BOTTOM_LEFT\";\n})(BadgePosition || (BadgePosition = {}));\nvar DEFAULT_BADGE_SIZE = 10;\nvar Avatar = forwardRef(function (props, ref) {\n  var themeProps = useThemeProps(props, 'Avatar');\n  var imageSource = themeProps.imageSource,\n    source = themeProps.source,\n    _themeProps$size = themeProps.size,\n    size = _themeProps$size === void 0 ? 50 : _themeProps$size,\n    _themeProps$labelColo = themeProps.labelColor,\n    labelColor = _themeProps$labelColo === void 0 ? Colors.$textDefault : _themeProps$labelColo,\n    _themeProps$badgeProp = themeProps.badgeProps,\n    badgeProps = _themeProps$badgeProp === void 0 ? {} : _themeProps$badgeProp,\n    _themeProps$badgePosi = themeProps.badgePosition,\n    badgePosition = _themeProps$badgePosi === void 0 ? BadgePosition.TOP_RIGHT : _themeProps$badgePosi,\n    testID = themeProps.testID,\n    ribbonLabel = themeProps.ribbonLabel,\n    customRibbon = themeProps.customRibbon,\n    ribbonStyle = themeProps.ribbonStyle,\n    ribbonLabelStyle = themeProps.ribbonLabelStyle,\n    _themeProps$animate = themeProps.animate,\n    animate = _themeProps$animate === void 0 ? false : _themeProps$animate,\n    imageStyle = themeProps.imageStyle,\n    onImageLoadStart = themeProps.onImageLoadStart,\n    onImageLoadEnd = themeProps.onImageLoadEnd,\n    onImageLoadError = themeProps.onImageLoadError,\n    imageProps = themeProps.imageProps,\n    label = themeProps.label,\n    name = themeProps.name,\n    backgroundColor = themeProps.backgroundColor,\n    useAutoColors = themeProps.useAutoColors,\n    autoColorsConfig = themeProps.autoColorsConfig,\n    containerStyle = themeProps.containerStyle,\n    onPress = themeProps.onPress,\n    children = themeProps.children;\n  var _badgeSize = badgeProps.size,\n    _badgeProps$borderWid = badgeProps.borderWidth,\n    badgeBorderWidth = _badgeProps$borderWid === void 0 ? 0 : _badgeProps$borderWid;\n  var badgeSize = _badgeSize || DEFAULT_BADGE_SIZE;\n  useEffect(function () {\n    if (imageSource) {\n      LogService.warn('uilib: imageSource prop is deprecated, use source instead.');\n    }\n  }, [imageSource]);\n  var _source = useMemo(function () {\n    return source || imageSource;\n  }, [source, imageSource]);\n  var _baseContainerStyle = useMemo(function () {\n    return {\n      width: size,\n      height: size,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: BorderRadiuses.br100\n    };\n  }, [size]);\n  var initialsStyle = useMemo(function () {\n    return {\n      color: labelColor,\n      backgroundColor: 'transparent',\n      lineHeight: undefined\n    };\n  }, [labelColor]);\n  var _baseRibbonStyle = useMemo(function () {\n    return {\n      position: 'absolute',\n      top: '10%',\n      left: size / 1.7,\n      borderRadius: size / 2\n    };\n  }, [size]);\n  var _ribbonStyle = useMemo(function () {\n    return [_baseRibbonStyle, styles.ribbon, ribbonStyle];\n  }, [_baseRibbonStyle, ribbonStyle]);\n  var _badgePosition = useMemo(function () {\n    var _ref;\n    var radius = size / 2;\n    var x = Math.sqrt(Math.pow(radius, 2) * 2);\n    var y = x - radius;\n    var shift = Math.sqrt(Math.pow(y, 2) / 2) - (badgeSize + badgeBorderWidth * 2) / 2;\n    var badgeLocation = _split(_toLower(badgePosition), '_', 2);\n    return _ref = {\n      position: 'absolute'\n    }, _defineProperty(_ref, badgeLocation[0], shift), _defineProperty(_ref, badgeLocation[1], shift), _ref;\n  }, [size, badgeBorderWidth, badgeSize, badgePosition]);\n  var text = useMemo(function () {\n    var text = label;\n    if (_isNil(label) && !_isNil(name)) {\n      text = AvatarHelper.getInitials(name);\n    }\n    return text;\n  }, [label, name]);\n  var _backgroundColor = useMemo(function () {\n    if (backgroundColor) {\n      return backgroundColor;\n    }\n    var _ref2 = autoColorsConfig || {},\n      _ref2$avatarColors = _ref2.avatarColors,\n      avatarColors = _ref2$avatarColors === void 0 ? AvatarHelper.getAvatarColors() : _ref2$avatarColors,\n      _ref2$hashFunction = _ref2.hashFunction,\n      hashFunction = _ref2$hashFunction === void 0 ? AvatarHelper.hashStringToNumber : _ref2$hashFunction,\n      _ref2$defaultColor = _ref2.defaultColor,\n      defaultColor = _ref2$defaultColor === void 0 ? Colors.$backgroundNeutralLight : _ref2$defaultColor;\n    if (useAutoColors) {\n      return AvatarHelper.getBackgroundColor(name, avatarColors, hashFunction, defaultColor);\n    } else {\n      return defaultColor;\n    }\n  }, [backgroundColor, autoColorsConfig, useAutoColors, name]);\n  var _containerStyle = useMemo(function () {\n    return [_baseContainerStyle, containerStyle];\n  }, [_baseContainerStyle, containerStyle]);\n  var textStyle = useMemo(function () {\n    var fontSizeToImageSizeRatio = 0.32;\n    var fontSize = size * fontSizeToImageSizeRatio;\n    return [{\n      fontSize: fontSize\n    }, initialsStyle, {\n      color: labelColor\n    }];\n  }, [size, initialsStyle, labelColor]);\n  var textContainerStyle = useMemo(function () {\n    var hasImage = !_isUndefined(_source);\n    return [styles.initialsContainer, {\n      backgroundColor: _backgroundColor\n    }, hasImage && styles.initialsContainerWithInset];\n  }, [_source, _backgroundColor]);\n  var accessibilityProps = useMemo(function () {\n    return extractAccessibilityProps(props);\n  }, [props]);\n  var _imageStyle = useMemo(function () {\n    return [_baseContainerStyle, StyleSheet.absoluteFillObject, imageStyle];\n  }, [_baseContainerStyle, imageStyle]);\n  var renderImage = function renderImage() {\n    if (_source !== undefined) {\n      var ImageContainer = animate && !isSvg(_source) ? AnimatedImage : Image;\n      return _jsx(ImageContainer, _objectSpread({\n        style: _imageStyle,\n        source: _source,\n        onLoadStart: onImageLoadStart,\n        onLoadEnd: onImageLoadEnd,\n        onError: onImageLoadError,\n        testID: testID + \".image\",\n        width: size,\n        height: size,\n        containerStyle: _baseContainerStyle\n      }, imageProps));\n    }\n  };\n  var renderBadge = function renderBadge() {\n    if (!_isEmpty(badgeProps)) {\n      return _jsx(Badge, _objectSpread(_objectSpread({\n        testID: testID + \".onlineBadge\",\n        iconProps: {\n          tintColor: null\n        }\n      }, badgeProps), {}, {\n        size: badgeSize,\n        containerStyle: _badgePosition\n      }));\n    }\n  };\n  var renderRibbon = function renderRibbon() {\n    if (ribbonLabel) {\n      return _jsx(View, {\n        style: _ribbonStyle,\n        children: _jsx(Text, {\n          numberOfLines: 1,\n          text100: true,\n          $textDefaultLight: true,\n          style: ribbonLabelStyle,\n          children: ribbonLabel\n        })\n      });\n    }\n  };\n  var renderCustomRibbon = function renderCustomRibbon() {\n    if (customRibbon) {\n      return _jsx(View, {\n        style: _baseRibbonStyle,\n        children: customRibbon\n      });\n    }\n  };\n  var Container = onPress ? TouchableOpacity : View;\n  return _jsxs(Container, _objectSpread(_objectSpread({\n    style: _containerStyle,\n    ref: ref,\n    testID: testID,\n    onPress: onPress,\n    accessible: !_isUndefined(onPress),\n    accessibilityLabel: 'Avatar',\n    accessibilityRole: onPress ? 'button' : 'image'\n  }, accessibilityProps), {}, {\n    children: [_jsx(View, {\n      testID: testID + \".container\",\n      style: textContainerStyle,\n      children: !_isUndefined(text) && _jsx(Text, {\n        numberOfLines: 1,\n        style: textStyle,\n        testID: testID + \".label\",\n        children: text\n      })\n    }), renderImage(), renderBadge(), renderCustomRibbon(), renderRibbon(), children]\n  }));\n});\nvar styles = StyleSheet.create({\n  initialsContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100\n  }),\n  initialsContainerWithInset: {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  },\n  ribbon: {\n    backgroundColor: Colors.$backgroundPrimaryHeavy,\n    paddingHorizontal: 6,\n    paddingVertical: 3\n  }\n});\nAvatar.badgePosition = BadgePosition;\nexport { Avatar };\nexport default Avatar;","map":{"version":3,"names":["_isEmpty","_isUndefined","_isNil","_toLower","_split","React","useEffect","useMemo","forwardRef","LogService","Colors","BorderRadiuses","extractAccessibilityProps","Badge","View","Text","Image","AnimatedImage","AvatarHelper","useThemeProps","isSvg","BadgePosition","DEFAULT_BADGE_SIZE","Avatar","props","ref","themeProps","imageSource","source","size","labelColor","$textDefault","badgeProps","badgePosition","TOP_RIGHT","testID","ribbonLabel","customRibbon","ribbonStyle","ribbonLabelStyle","animate","imageStyle","onImageLoadStart","onImageLoadEnd","onImageLoadError","imageProps","label","name","backgroundColor","useAutoColors","autoColorsConfig","containerStyle","onPress","children","_badgeSize","borderWidth","badgeBorderWidth","badgeSize","warn","_source","_baseContainerStyle","width","height","alignItems","justifyContent","borderRadius","br100","initialsStyle","color","lineHeight","undefined","_baseRibbonStyle","position","top","left","_ribbonStyle","styles","ribbon","_badgePosition","radius","x","Math","sqrt","y","shift","badgeLocation","text","getInitials","_backgroundColor","avatarColors","getAvatarColors","hashFunction","hashStringToNumber","defaultColor","$backgroundNeutralLight","getBackgroundColor","_containerStyle","textStyle","fontSizeToImageSizeRatio","fontSize","textContainerStyle","hasImage","initialsContainer","initialsContainerWithInset","accessibilityProps","_imageStyle","StyleSheet","absoluteFillObject","renderImage","ImageContainer","renderBadge","tintColor","renderRibbon","renderCustomRibbon","Container","TouchableOpacity","create","right","bottom","$backgroundPrimaryHeavy","paddingHorizontal","paddingVertical"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/avatar/index.js"],"sourcesContent":["import _isEmpty from \"lodash/isEmpty\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _toLower from \"lodash/toLower\";\nimport _split from \"lodash/split\";\nimport React, { useEffect, useMemo, forwardRef } from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { LogService } from \"../../services\";\nimport { Colors, BorderRadiuses } from \"../../style\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport Badge from \"../badge\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\n// @ts-ignore\nimport AnimatedImage from \"../animatedImage\";\nimport * as AvatarHelper from \"../../helpers/AvatarHelper\";\nimport { useThemeProps } from \"../../hooks\";\nimport { isSvg } from \"../../utils/imageUtils\";\nexport let BadgePosition;\n(function (BadgePosition) {\n  BadgePosition[\"TOP_RIGHT\"] = \"TOP_RIGHT\";\n  BadgePosition[\"TOP_LEFT\"] = \"TOP_LEFT\";\n  BadgePosition[\"BOTTOM_RIGHT\"] = \"BOTTOM_RIGHT\";\n  BadgePosition[\"BOTTOM_LEFT\"] = \"BOTTOM_LEFT\";\n})(BadgePosition || (BadgePosition = {}));\nconst DEFAULT_BADGE_SIZE = 10;\n/**\n * @description: Avatar component for displaying user profile images\n * @extends: TouchableOpacity, Image\n * @image: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Avatar/Avarat_1.png?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Avatar/Avarat_2.png?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AvatarsScreen.tsx\n */\nconst Avatar = forwardRef((props, ref) => {\n  const themeProps = useThemeProps(props, 'Avatar');\n  const {\n    imageSource,\n    source,\n    size = 50,\n    labelColor = Colors.$textDefault,\n    badgeProps = {},\n    badgePosition = BadgePosition.TOP_RIGHT,\n    testID,\n    ribbonLabel,\n    customRibbon,\n    ribbonStyle,\n    ribbonLabelStyle,\n    animate = false,\n    imageStyle,\n    onImageLoadStart,\n    onImageLoadEnd,\n    onImageLoadError,\n    imageProps,\n    label,\n    name,\n    backgroundColor,\n    useAutoColors,\n    autoColorsConfig,\n    containerStyle,\n    onPress,\n    children\n  } = themeProps;\n  const {\n    size: _badgeSize,\n    borderWidth: badgeBorderWidth = 0\n  } = badgeProps;\n  const badgeSize = _badgeSize || DEFAULT_BADGE_SIZE;\n  useEffect(() => {\n    if (imageSource) {\n      LogService.warn('uilib: imageSource prop is deprecated, use source instead.');\n    }\n  }, [imageSource]);\n  const _source = useMemo(() => {\n    return source || imageSource;\n  }, [source, imageSource]);\n  const _baseContainerStyle = useMemo(() => {\n    return {\n      width: size,\n      height: size,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: BorderRadiuses.br100\n    };\n  }, [size]);\n  const initialsStyle = useMemo(() => {\n    return {\n      color: labelColor,\n      backgroundColor: 'transparent',\n      lineHeight: undefined\n    };\n  }, [labelColor]);\n  const _baseRibbonStyle = useMemo(() => {\n    return {\n      position: 'absolute',\n      top: '10%',\n      left: size / 1.7,\n      borderRadius: size / 2\n    };\n  }, [size]);\n  const _ribbonStyle = useMemo(() => {\n    return [_baseRibbonStyle, styles.ribbon, ribbonStyle];\n  }, [_baseRibbonStyle, ribbonStyle]);\n  const _badgePosition = useMemo(() => {\n    const radius = size / 2;\n    const x = Math.sqrt(radius ** 2 * 2);\n    const y = x - radius;\n    const shift = Math.sqrt(y ** 2 / 2) - (badgeSize + badgeBorderWidth * 2) / 2;\n    const badgeLocation = _split(_toLower(badgePosition), '_', 2);\n    return {\n      position: 'absolute',\n      [badgeLocation[0]]: shift,\n      [badgeLocation[1]]: shift\n    };\n  }, [size, badgeBorderWidth, badgeSize, badgePosition]);\n  const text = useMemo(() => {\n    let text = label;\n    if (_isNil(label) && !_isNil(name)) {\n      text = AvatarHelper.getInitials(name);\n    }\n    return text;\n  }, [label, name]);\n  const _backgroundColor = useMemo(() => {\n    if (backgroundColor) {\n      return backgroundColor;\n    }\n    const {\n      avatarColors = AvatarHelper.getAvatarColors(),\n      hashFunction = AvatarHelper.hashStringToNumber,\n      defaultColor = Colors.$backgroundNeutralLight\n    } = autoColorsConfig || {};\n    if (useAutoColors) {\n      return AvatarHelper.getBackgroundColor(name, avatarColors, hashFunction, defaultColor);\n    } else {\n      return defaultColor;\n    }\n  }, [backgroundColor, autoColorsConfig, useAutoColors, name]);\n  const _containerStyle = useMemo(() => {\n    return [_baseContainerStyle, containerStyle];\n  }, [_baseContainerStyle, containerStyle]);\n  const textStyle = useMemo(() => {\n    const fontSizeToImageSizeRatio = 0.32;\n    const fontSize = size * fontSizeToImageSizeRatio;\n    return [{\n      fontSize\n    }, initialsStyle, {\n      color: labelColor\n    }];\n  }, [size, initialsStyle, labelColor]);\n  const textContainerStyle = useMemo(() => {\n    const hasImage = !_isUndefined(_source);\n    return [styles.initialsContainer, {\n      backgroundColor: _backgroundColor\n    }, hasImage && styles.initialsContainerWithInset];\n  }, [_source, _backgroundColor]);\n  const accessibilityProps = useMemo(() => {\n    return extractAccessibilityProps(props);\n  }, [props]);\n  const _imageStyle = useMemo(() => {\n    return [_baseContainerStyle, StyleSheet.absoluteFillObject, imageStyle];\n  }, [_baseContainerStyle, imageStyle]);\n  const renderImage = () => {\n    if (_source !== undefined) {\n      // Looks like reanimated does not support SVG\n      const ImageContainer = animate && !isSvg(_source) ? AnimatedImage : Image;\n      return <ImageContainer style={_imageStyle} source={_source} onLoadStart={onImageLoadStart} onLoadEnd={onImageLoadEnd} onError={onImageLoadError} testID={`${testID}.image`} width={size} height={size} containerStyle={_baseContainerStyle} {...imageProps} />;\n    }\n  };\n  const renderBadge = () => {\n    if (!_isEmpty(badgeProps)) {\n      return <Badge testID={`${testID}.onlineBadge`} iconProps={{\n        tintColor: null\n      }} {...badgeProps} size={badgeSize} containerStyle={_badgePosition} />;\n    }\n  };\n  const renderRibbon = () => {\n    if (ribbonLabel) {\n      return <View style={_ribbonStyle}>\n          <Text numberOfLines={1} text100 $textDefaultLight style={ribbonLabelStyle}>\n            {ribbonLabel}\n          </Text>\n        </View>;\n    }\n  };\n  const renderCustomRibbon = () => {\n    if (customRibbon) {\n      return <View style={_baseRibbonStyle}>{customRibbon}</View>;\n    }\n  };\n  const Container = onPress ? TouchableOpacity : View;\n  return <Container style={_containerStyle} ref={ref} testID={testID} onPress={onPress} accessible={!_isUndefined(onPress)} accessibilityLabel={'Avatar'} accessibilityRole={onPress ? 'button' : 'image'} {...accessibilityProps}>\n      <View testID={`${testID}.container`} style={textContainerStyle}>\n        {!_isUndefined(text) && <Text numberOfLines={1} style={textStyle} testID={`${testID}.label`}>\n            {text}\n          </Text>}\n      </View>\n      {renderImage()}\n      {renderBadge()}\n      {renderCustomRibbon()}\n      {renderRibbon()}\n      {children}\n    </Container>;\n});\nconst styles = StyleSheet.create({\n  initialsContainer: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100\n  },\n  initialsContainerWithInset: {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  },\n  ribbon: {\n    backgroundColor: Colors.$backgroundPrimaryHeavy,\n    paddingHorizontal: 6,\n    paddingVertical: 3\n  }\n});\n\n// @ts-expect-error\nAvatar.badgePosition = BadgePosition;\nexport { Avatar }; // For tests\n\nexport default Avatar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}