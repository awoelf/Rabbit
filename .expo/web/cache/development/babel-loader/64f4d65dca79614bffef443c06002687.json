{"ast":null,"code":"import _isPlainObject from \"lodash/isPlainObject\";\nimport { useEffect } from 'react';\nimport { LogService } from \"../../../services\";\nimport { PickerModes } from \"../types\";\nvar usePickerMigrationWarnings = function usePickerMigrationWarnings(props) {\n  var value = props.value,\n    mode = props.mode,\n    useNativePicker = props.useNativePicker;\n  useEffect(function () {\n    if (mode === PickerModes.SINGLE && Array.isArray(value)) {\n      LogService.warn('Picker in SINGLE mode cannot accept an array for value');\n    }\n    if (mode === PickerModes.MULTI && !Array.isArray(value)) {\n      LogService.warn('Picker in MULTI mode must accept an array for value');\n    }\n    if (_isPlainObject(value)) {\n      LogService.warn('UILib Picker will stop supporting passing object as value in the next major version. Please use either string or a number as value');\n    }\n    if (useNativePicker) {\n      LogService.warn(\"UILib Picker will stop supporting the 'useNativePicker' prop soon, please pass instead the 'useWheelPicker' prop and handle relevant TextField migration if required to\");\n    }\n  }, []);\n};\nexport default usePickerMigrationWarnings;","map":{"version":3,"names":["_isPlainObject","useEffect","LogService","PickerModes","usePickerMigrationWarnings","props","value","mode","useNativePicker","SINGLE","Array","isArray","warn","MULTI"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/picker/helpers/usePickerMigrationWarnings.js"],"sourcesContent":["import _isPlainObject from \"lodash/isPlainObject\";\nimport { useEffect } from 'react';\nimport { LogService } from \"../../../services\";\nimport { PickerModes } from \"../types\";\nconst usePickerMigrationWarnings = props => {\n  const {\n    value,\n    mode,\n    useNativePicker\n  } = props;\n  useEffect(() => {\n    if (mode === PickerModes.SINGLE && Array.isArray(value)) {\n      LogService.warn('Picker in SINGLE mode cannot accept an array for value');\n    }\n    if (mode === PickerModes.MULTI && !Array.isArray(value)) {\n      LogService.warn('Picker in MULTI mode must accept an array for value');\n    }\n    if (_isPlainObject(value)) {\n      LogService.warn('UILib Picker will stop supporting passing object as value in the next major version. Please use either string or a number as value');\n    }\n    if (useNativePicker) {\n      LogService.warn(`UILib Picker will stop supporting the 'useNativePicker' prop soon, please pass instead the 'useWheelPicker' prop and handle relevant TextField migration if required to`);\n    }\n  }, []);\n};\nexport default usePickerMigrationWarnings;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sBAAsB;AACjD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU;AACnB,SAASC,WAAW;AACpB,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0B,CAAGC,KAAK,EAAI;EAC1C,IACEC,KAAK,GAGHD,KAAK,CAHPC,KAAK;IACLC,IAAI,GAEFF,KAAK,CAFPE,IAAI;IACJC,eAAe,GACbH,KAAK,CADPG,eAAe;EAEjBP,SAAS,CAAC,YAAM;IACd,IAAIM,IAAI,KAAKJ,WAAW,CAACM,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;MACvDJ,UAAU,CAACU,IAAI,CAAC,wDAAwD,CAAC;IAC3E;IACA,IAAIL,IAAI,KAAKJ,WAAW,CAACU,KAAK,IAAI,CAACH,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;MACvDJ,UAAU,CAACU,IAAI,CAAC,qDAAqD,CAAC;IACxE;IACA,IAAIZ,cAAc,CAACM,KAAK,CAAC,EAAE;MACzBJ,UAAU,CAACU,IAAI,CAAC,oIAAoI,CAAC;IACvJ;IACA,IAAIJ,eAAe,EAAE;MACnBN,UAAU,CAACU,IAAI,2KAA2K;IAC5L;EACF,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AACD,eAAeR,0BAA0B"},"metadata":{},"sourceType":"module"}