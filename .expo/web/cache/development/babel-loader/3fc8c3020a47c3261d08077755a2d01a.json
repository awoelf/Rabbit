{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport ColorPalette from \"../colorPalette\";\nimport { SWATCH_MARGIN, SWATCH_SIZE } from \"../colorSwatch\";\nimport ColorPickerDialog from \"./ColorPickerDialog\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ACCESSIBILITY_LABELS = {\n  addButton: 'add custom color using hex code',\n  dismissButton: 'dismiss',\n  doneButton: 'done',\n  input: 'custom hex color code'\n};\nvar ColorPicker = function (_PureComponent) {\n  _inherits(ColorPicker, _PureComponent);\n  var _super = _createSuper(ColorPicker);\n  function ColorPicker() {\n    var _this;\n    _classCallCheck(this, ColorPicker);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      show: false\n    };\n    _this.showDialog = function () {\n      _this.setState({\n        show: true\n      });\n    };\n    _this.hideDialog = function () {\n      _this.setState({\n        show: false\n      });\n    };\n    _this.onValueChange = function (value, options) {\n      _this.props.onValueChange == null ? void 0 : _this.props.onValueChange(value, options);\n    };\n    return _this;\n  }\n  _createClass(ColorPicker, [{\n    key: \"animatedIndex\",\n    get: function get() {\n      var _this$props = this.props,\n        animatedIndex = _this$props.animatedIndex,\n        colors = _this$props.colors;\n      if (animatedIndex === undefined) {\n        return colors.length - 1;\n      }\n      return animatedIndex;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        initialColor = _this$props2.initialColor,\n        colors = _this$props2.colors,\n        value = _this$props2.value,\n        testID = _this$props2.testID,\n        accessibilityLabels = _this$props2.accessibilityLabels,\n        backgroundColor = _this$props2.backgroundColor;\n      var show = this.state.show;\n      return _jsxs(View, {\n        row: true,\n        testID: testID,\n        style: {\n          backgroundColor: backgroundColor\n        },\n        children: [_jsx(ColorPalette, {\n          value: value,\n          colors: colors,\n          style: styles.palette,\n          usePagination: false,\n          animatedIndex: this.animatedIndex,\n          onValueChange: this.onValueChange,\n          testID: testID + \"-palette\",\n          backgroundColor: backgroundColor\n        }), _jsx(View, {\n          style: [styles.buttonContainer, {\n            backgroundColor: backgroundColor\n          }],\n          children: _jsx(Button, {\n            color: Colors.$textDefault,\n            outlineColor: Colors.$textDefault,\n            style: styles.button,\n            round: true,\n            outline: true,\n            iconSource: Assets.icons.plusSmall,\n            onPress: this.showDialog,\n            testID: testID + \"-button\",\n            accessibilityLabel: accessibilityLabels == null ? void 0 : accessibilityLabels.addButton\n          })\n        }), _createElement(ColorPickerDialog, _objectSpread(_objectSpread({}, this.props), {}, {\n          key: initialColor,\n          visible: show,\n          onDismiss: this.hideDialog,\n          accessibilityLabels: {\n            dismissButton: accessibilityLabels == null ? void 0 : accessibilityLabels.dismissButton,\n            doneButton: accessibilityLabels == null ? void 0 : accessibilityLabels.doneButton,\n            input: accessibilityLabels == null ? void 0 : accessibilityLabels.input\n          }\n        }))]\n      });\n    }\n  }]);\n  return ColorPicker;\n}(PureComponent);\nColorPicker.displayName = 'ColorPicker';\nColorPicker.defaultProps = {\n  accessibilityLabels: ACCESSIBILITY_LABELS,\n  backgroundColor: Colors.$backgroundDefault\n};\nexport default ColorPicker;\nvar plusButtonContainerWidth = SWATCH_SIZE + 20 + 12;\nvar plusButtonContainerHeight = 92 - 2 * SWATCH_MARGIN;\nvar styles = StyleSheet.create({\n  palette: {\n    paddingLeft: plusButtonContainerWidth\n  },\n  buttonContainer: {\n    position: 'absolute',\n    left: 0,\n    width: plusButtonContainerWidth,\n    height: plusButtonContainerHeight,\n    marginTop: SWATCH_MARGIN,\n    marginBottom: SWATCH_MARGIN,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    paddingTop: 1\n  },\n  button: {\n    width: SWATCH_SIZE,\n    height: SWATCH_SIZE,\n    marginRight: 12\n  }\n});","map":{"version":3,"names":["React","PureComponent","Assets","Colors","View","Button","ColorPalette","SWATCH_MARGIN","SWATCH_SIZE","ColorPickerDialog","ACCESSIBILITY_LABELS","addButton","dismissButton","doneButton","input","ColorPicker","state","show","showDialog","setState","hideDialog","onValueChange","value","options","props","animatedIndex","colors","undefined","length","initialColor","testID","accessibilityLabels","backgroundColor","styles","palette","buttonContainer","$textDefault","button","icons","plusSmall","displayName","defaultProps","$backgroundDefault","plusButtonContainerWidth","plusButtonContainerHeight","StyleSheet","create","paddingLeft","position","left","width","height","marginTop","marginBottom","alignItems","justifyContent","paddingTop","marginRight"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/colorPicker/index.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport ColorPalette from \"../colorPalette\";\nimport { SWATCH_MARGIN, SWATCH_SIZE } from \"../colorSwatch\";\nimport ColorPickerDialog from \"./ColorPickerDialog\";\nconst ACCESSIBILITY_LABELS = {\n  addButton: 'add custom color using hex code',\n  dismissButton: 'dismiss',\n  doneButton: 'done',\n  input: 'custom hex color code'\n};\n\n/**\n * @description: A color picker component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx\n * @notes: This is a screen width component\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorPicker/ColorPicker.gif?raw=true\n */\nclass ColorPicker extends PureComponent {\n  static displayName = 'ColorPicker';\n  static defaultProps = {\n    accessibilityLabels: ACCESSIBILITY_LABELS,\n    backgroundColor: Colors.$backgroundDefault\n  };\n  state = {\n    show: false\n  };\n  get animatedIndex() {\n    const {\n      animatedIndex,\n      colors\n    } = this.props;\n    if (animatedIndex === undefined) {\n      return colors.length - 1;\n    }\n    return animatedIndex;\n  }\n  showDialog = () => {\n    this.setState({\n      show: true\n    });\n  };\n  hideDialog = () => {\n    this.setState({\n      show: false\n    });\n  };\n  render() {\n    const {\n      initialColor,\n      colors,\n      value,\n      testID,\n      accessibilityLabels,\n      backgroundColor\n    } = this.props;\n    const {\n      show\n    } = this.state;\n    return <View row testID={testID} style={{\n      backgroundColor\n    }}>\n        <ColorPalette value={value} colors={colors} style={styles.palette} usePagination={false} animatedIndex={this.animatedIndex} onValueChange={this.onValueChange} testID={`${testID}-palette`} backgroundColor={backgroundColor} />\n        <View style={[styles.buttonContainer, {\n        backgroundColor\n      }]}>\n          <Button color={Colors.$textDefault} outlineColor={Colors.$textDefault} style={styles.button} round outline iconSource={Assets.icons.plusSmall} onPress={this.showDialog} testID={`${testID}-button`} accessibilityLabel={accessibilityLabels?.addButton} />\n        </View>\n        <ColorPickerDialog {...this.props} key={initialColor} visible={show} onDismiss={this.hideDialog} accessibilityLabels={{\n        dismissButton: accessibilityLabels?.dismissButton,\n        doneButton: accessibilityLabels?.doneButton,\n        input: accessibilityLabels?.input\n      }} />\n      </View>;\n  }\n\n  // ColorPalette\n  onValueChange = (value, options) => {\n    this.props.onValueChange?.(value, options);\n  };\n}\nexport default ColorPicker;\nconst plusButtonContainerWidth = SWATCH_SIZE + 20 + 12;\nconst plusButtonContainerHeight = 92 - 2 * SWATCH_MARGIN;\nconst styles = StyleSheet.create({\n  palette: {\n    paddingLeft: plusButtonContainerWidth\n  },\n  buttonContainer: {\n    position: 'absolute',\n    left: 0,\n    width: plusButtonContainerWidth,\n    height: plusButtonContainerHeight,\n    marginTop: SWATCH_MARGIN,\n    marginBottom: SWATCH_MARGIN,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    paddingTop: 1\n  },\n  button: {\n    width: SWATCH_SIZE,\n    height: SWATCH_SIZE,\n    marginRight: 12\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}