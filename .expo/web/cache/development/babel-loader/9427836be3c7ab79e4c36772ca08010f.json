{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"label\", \"labelColor\", \"selectedLabelColor\", \"labelStyle\", \"selectedLabelStyle\", \"icon\", \"badge\", \"leadingAccessory\", \"trailingAccessory\", \"uppercase\", \"activeOpacity\", \"backgroundColor\", \"activeBackgroundColor\", \"testID\", \"ignore\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _toUpper from \"lodash/toUpper\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport React, { useCallback, useContext, useEffect, useRef, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Reanimated, { runOnJS, useAnimatedStyle, useSharedValue } from 'react-native-reanimated';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport Badge from \"../badge\";\nimport View from \"../view\";\nimport TabBarContext from \"./TabBarContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DEFAULT_LABEL_COLOR = Colors.$textDefault;\nvar DEFAULT_SELECTED_LABEL_COLOR = Colors.$textPrimary;\nexport default function TabBarItem(_ref) {\n  var index = _ref.index,\n    label = _ref.label,\n    _ref$labelColor = _ref.labelColor,\n    labelColor = _ref$labelColor === void 0 ? DEFAULT_LABEL_COLOR : _ref$labelColor,\n    _ref$selectedLabelCol = _ref.selectedLabelColor,\n    selectedLabelColor = _ref$selectedLabelCol === void 0 ? DEFAULT_SELECTED_LABEL_COLOR : _ref$selectedLabelCol,\n    labelStyle = _ref.labelStyle,\n    selectedLabelStyle = _ref.selectedLabelStyle,\n    icon = _ref.icon,\n    badge = _ref.badge,\n    leadingAccessory = _ref.leadingAccessory,\n    trailingAccessory = _ref.trailingAccessory,\n    uppercase = _ref.uppercase,\n    _ref$activeOpacity = _ref.activeOpacity,\n    activeOpacity = _ref$activeOpacity === void 0 ? 0.9 : _ref$activeOpacity,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? Colors.$backgroundElevated : _ref$backgroundColor,\n    activeBackgroundColor = _ref.activeBackgroundColor,\n    testID = _ref.testID,\n    ignore = _ref.ignore,\n    style = _ref.style,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useContext = useContext(TabBarContext),\n    currentPage = _useContext.currentPage,\n    setCurrentIndex = _useContext.setCurrentIndex;\n  var itemRef = useRef();\n  var itemWidth = useRef(props.width);\n  var isPressed = useSharedValue(false);\n  var sharedLabelStyle = useSharedValue(JSON.parse(JSON.stringify(labelStyle)));\n  var sharedSelectedLabelStyle = useSharedValue(JSON.parse(JSON.stringify(selectedLabelStyle)));\n  var inactiveColor = useRef(_cloneDeep(labelColor));\n  var activeColor = useRef(_cloneDeep(!ignore ? selectedLabelColor : inactiveColor.current));\n  useEffect(function () {\n    if (props.width) {\n      props.onLayout == null ? void 0 : props.onLayout({\n        nativeEvent: {\n          layout: {\n            x: 0,\n            y: 0,\n            width: itemWidth.current,\n            height: 0\n          }\n        }\n      }, index);\n    }\n  }, []);\n  var onLayout = useCallback(function (event) {\n    var width = event.nativeEvent.layout.width;\n    if (!itemWidth.current && itemRef != null && itemRef.current) {\n      var _itemRef$current;\n      itemWidth.current = width;\n      (_itemRef$current = itemRef.current) == null ? void 0 : _itemRef$current.setNativeProps({\n        style: {\n          width: width,\n          paddingHorizontal: null,\n          flex: null\n        }\n      });\n      props.onLayout == null ? void 0 : props.onLayout(event, index);\n    }\n  }, [index, props.onLayout]);\n  var animatedLabelStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var isActive = currentPage.value === index;\n      return isActive ? sharedSelectedLabelStyle.value : sharedLabelStyle.value;\n    };\n    _f._closure = {\n      currentPage: currentPage,\n      index: index,\n      sharedSelectedLabelStyle: sharedSelectedLabelStyle,\n      sharedLabelStyle: sharedLabelStyle\n    };\n    _f.asString = \"function _f(){const{currentPage,index,sharedSelectedLabelStyle,sharedLabelStyle}=jsThis._closure;{const isActive=currentPage.value===index;return isActive?sharedSelectedLabelStyle.value:sharedLabelStyle.value;}}\";\n    _f.__workletHash = 6771164847876;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBarItem.js (87:46)\";\n    _f.__optimalization = 3;\n    return _f;\n  }(), [currentPage]);\n  var animatedLabelColorStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var isActive = currentPage.value === index;\n      return {\n        color: isActive ? activeColor.current : inactiveColor.current\n      };\n    };\n    _f._closure = {\n      currentPage: currentPage,\n      index: index,\n      activeColor: {\n        current: activeColor.current\n      },\n      inactiveColor: {\n        current: inactiveColor.current\n      }\n    };\n    _f.asString = \"function _f(){const{currentPage,index,activeColor,inactiveColor}=jsThis._closure;{const isActive=currentPage.value===index;return{color:isActive?activeColor.current:inactiveColor.current};}}\";\n    _f.__workletHash = 457692443749;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBarItem.js (91:51)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var animatedIconStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var isActive = currentPage.value === index;\n      return {\n        tintColor: isActive ? activeColor.current : inactiveColor.current\n      };\n    };\n    _f._closure = {\n      currentPage: currentPage,\n      index: index,\n      activeColor: {\n        current: activeColor.current\n      },\n      inactiveColor: {\n        current: inactiveColor.current\n      }\n    };\n    _f.asString = \"function _f(){const{currentPage,index,activeColor,inactiveColor}=jsThis._closure;{const isActive=currentPage.value===index;return{tintColor:isActive?activeColor.current:inactiveColor.current};}}\";\n    _f.__workletHash = 14962198302946;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBarItem.js (97:45)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var pressStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        backgroundColor: isPressed.value ? activeBackgroundColor : backgroundColor,\n        opacity: isPressed.value ? activeOpacity : 1\n      };\n    };\n    _f._closure = {\n      isPressed: isPressed,\n      activeBackgroundColor: activeBackgroundColor,\n      backgroundColor: backgroundColor,\n      activeOpacity: activeOpacity\n    };\n    _f.asString = \"function _f(){const{isPressed,activeBackgroundColor,backgroundColor,activeOpacity}=jsThis._closure;{return{backgroundColor:isPressed.value?activeBackgroundColor:backgroundColor,opacity:isPressed.value?activeOpacity:1};}}\";\n    _f.__workletHash = 5582846907735;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBarItem.js (103:38)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var _style = useMemo(function () {\n    var constantWidthStyle = itemWidth.current ? {\n      flex: 0,\n      width: itemWidth.current\n    } : undefined;\n    return [styles.tabItem, style, constantWidthStyle, pressStyle];\n  }, [style]);\n  var gesture = Gesture.Tap().maxDuration(60000).onEnd(function () {\n    var _f = function _f() {\n      if (!ignore) {\n        setCurrentIndex(index);\n      }\n      props.onPress && runOnJS(props.onPress)(index);\n    };\n    _f._closure = {\n      ignore: ignore,\n      setCurrentIndex: setCurrentIndex,\n      index: index,\n      props: {\n        onPress: props.onPress\n      },\n      runOnJS: runOnJS\n    };\n    _f.asString = \"function _f(){const{ignore,setCurrentIndex,index,props,runOnJS}=jsThis._closure;{if(!ignore){setCurrentIndex(index);}props.onPress&&runOnJS(props.onPress)(index);}}\";\n    _f.__workletHash = 8352479598751;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBarItem.js (116:57)\";\n    return _f;\n  }()).onFinalize(function () {\n    var _f = function _f() {\n      isPressed.value = false;\n    };\n    _f._closure = {\n      isPressed: isPressed\n    };\n    _f.asString = \"function _f(){const{isPressed}=jsThis._closure;{isPressed.value=false;}}\";\n    _f.__workletHash = 5469462184409;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBarItem.js (121:16)\";\n    return _f;\n  }()).onTouchesDown(function () {\n    var _f = function _f() {\n      isPressed.value = true;\n    };\n    _f._closure = {\n      isPressed: isPressed\n    };\n    _f.asString = \"function _f(){const{isPressed}=jsThis._closure;{isPressed.value=true;}}\";\n    _f.__workletHash = 11277478272338;\n    _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBarItem.js (123:19)\";\n    return _f;\n  }());\n  return _jsx(GestureDetector, {\n    gesture: gesture,\n    children: _jsxs(View, {\n      reanimated: true,\n      ref: itemRef,\n      style: _style,\n      onLayout: onLayout,\n      testID: testID,\n      children: [leadingAccessory, icon && _jsx(Reanimated.Image, {\n        source: icon,\n        style: [!_isUndefined(label) && styles.tabItemIconWithLabel, animatedIconStyle]\n      }), !_isEmpty(label) && _jsx(Reanimated.Text, {\n        style: [styles.tabItemLabel, labelStyle, animatedLabelStyle, animatedLabelColorStyle],\n        children: uppercase ? _toUpper(label) : label\n      }), badge && _jsx(Badge, _objectSpread(_objectSpread({\n        backgroundColor: Colors.$backgroundDangerHeavy,\n        size: 20\n      }, badge), {}, {\n        containerStyle: styles.badge\n      })), trailingAccessory]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  tabItem: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: Spacings.s4\n  },\n  tabItemLabel: _objectSpread({}, Typography.text80),\n  tabItemIconWithLabel: {\n    marginRight: 10\n  },\n  badge: {\n    marginLeft: Spacings.s1\n  }\n});","map":{"version":3,"names":["_toUpper","_isEmpty","_isUndefined","_cloneDeep","React","useCallback","useContext","useEffect","useRef","useMemo","Reanimated","runOnJS","useAnimatedStyle","useSharedValue","Gesture","GestureDetector","Colors","Typography","Spacings","Badge","View","TabBarContext","DEFAULT_LABEL_COLOR","$textDefault","DEFAULT_SELECTED_LABEL_COLOR","$textPrimary","TabBarItem","index","label","labelColor","selectedLabelColor","labelStyle","selectedLabelStyle","icon","badge","leadingAccessory","trailingAccessory","uppercase","activeOpacity","backgroundColor","$backgroundElevated","activeBackgroundColor","testID","ignore","style","props","currentPage","setCurrentIndex","itemRef","itemWidth","width","isPressed","sharedLabelStyle","JSON","parse","stringify","sharedSelectedLabelStyle","inactiveColor","activeColor","current","onLayout","nativeEvent","layout","x","y","height","event","setNativeProps","paddingHorizontal","flex","animatedLabelStyle","isActive","value","animatedLabelColorStyle","color","animatedIconStyle","tintColor","pressStyle","opacity","_style","constantWidthStyle","undefined","styles","tabItem","gesture","Tap","maxDuration","onEnd","onPress","onFinalize","onTouchesDown","tabItemIconWithLabel","tabItemLabel","$backgroundDangerHeavy","StyleSheet","create","flexDirection","alignItems","justifyContent","s4","text80","marginRight","marginLeft","s1"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/tabController/TabBarItem.js"],"sourcesContent":["import _toUpper from \"lodash/toUpper\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\n// TODO: support commented props\nimport React, { useCallback, useContext, useEffect, useRef, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Reanimated, { runOnJS, useAnimatedStyle, useSharedValue } from 'react-native-reanimated';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport Badge from \"../badge\";\nimport View from \"../view\";\nimport TabBarContext from \"./TabBarContext\";\nconst DEFAULT_LABEL_COLOR = Colors.$textDefault;\nconst DEFAULT_SELECTED_LABEL_COLOR = Colors.$textPrimary;\n/**\n * @description: TabController's TabBarItem\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n * @notes: Must be rendered as a direct child of TabController.TabBar.\n */\nexport default function TabBarItem({\n  index,\n  label,\n  labelColor = DEFAULT_LABEL_COLOR,\n  selectedLabelColor = DEFAULT_SELECTED_LABEL_COLOR,\n  labelStyle,\n  selectedLabelStyle,\n  icon,\n  badge,\n  leadingAccessory,\n  trailingAccessory,\n  uppercase,\n  activeOpacity = 0.9,\n  backgroundColor = Colors.$backgroundElevated,\n  activeBackgroundColor,\n  testID,\n  ignore,\n  style,\n  ...props\n}) {\n  const {\n    currentPage,\n    setCurrentIndex\n  } = useContext(TabBarContext);\n  const itemRef = useRef();\n  const itemWidth = useRef(props.width);\n  const isPressed = useSharedValue(false);\n  // JSON.parse(JSON.stringify is due to an issue with reanimated\n  const sharedLabelStyle = useSharedValue(JSON.parse(JSON.stringify(labelStyle)));\n  const sharedSelectedLabelStyle = useSharedValue(JSON.parse(JSON.stringify(selectedLabelStyle)));\n\n  // NOTE: We clone these color values in refs because they might contain a PlatformColor value\n  //       which throws an error (see https://github.com/software-mansion/react-native-reanimated/issues/3164)\n  const inactiveColor = useRef(_cloneDeep(labelColor));\n  const activeColor = useRef(_cloneDeep(!ignore ? selectedLabelColor : inactiveColor.current));\n  useEffect(() => {\n    if (props.width) {\n      props.onLayout?.({\n        nativeEvent: {\n          layout: {\n            x: 0,\n            y: 0,\n            width: itemWidth.current,\n            height: 0\n          }\n        }\n      }, index);\n    }\n  }, []);\n  const onLayout = useCallback(event => {\n    const {\n      width\n    } = event.nativeEvent.layout;\n    if (!itemWidth.current && itemRef?.current) {\n      itemWidth.current = width;\n      // @ts-ignore\n      itemRef.current?.setNativeProps({\n        style: {\n          width,\n          paddingHorizontal: null,\n          flex: null\n        }\n      });\n      props.onLayout?.(event, index);\n    }\n  }, [index, props.onLayout]);\n  const animatedLabelStyle = useAnimatedStyle(() => {\n    const isActive = currentPage.value === index;\n    return isActive ? sharedSelectedLabelStyle.value : sharedLabelStyle.value;\n  }, [currentPage]);\n  const animatedLabelColorStyle = useAnimatedStyle(() => {\n    const isActive = currentPage.value === index;\n    return {\n      color: isActive ? activeColor.current : inactiveColor.current\n    };\n  });\n  const animatedIconStyle = useAnimatedStyle(() => {\n    const isActive = currentPage.value === index;\n    return {\n      tintColor: isActive ? activeColor.current : inactiveColor.current\n    };\n  });\n  const pressStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: isPressed.value ? activeBackgroundColor : backgroundColor,\n      opacity: isPressed.value ? activeOpacity : 1\n    };\n  });\n  const _style = useMemo(() => {\n    const constantWidthStyle = itemWidth.current ? {\n      flex: 0,\n      width: itemWidth.current\n    } : undefined;\n    return [styles.tabItem, style, constantWidthStyle, pressStyle];\n  }, [style]);\n  const gesture = Gesture.Tap().maxDuration(60000).onEnd(() => {\n    if (!ignore) {\n      setCurrentIndex(index);\n    }\n    props.onPress && runOnJS(props.onPress)(index);\n  }).onFinalize(() => {\n    isPressed.value = false;\n  }).onTouchesDown(() => {\n    isPressed.value = true;\n  });\n  return <GestureDetector gesture={gesture}>\n      <View reanimated\n    // @ts-expect-error\n    ref={itemRef} style={_style} onLayout={onLayout} testID={testID}>\n        {leadingAccessory}\n        {icon && <Reanimated.Image source={icon} style={[!_isUndefined(label) && styles.tabItemIconWithLabel, animatedIconStyle]} />}\n        {!_isEmpty(label) && <Reanimated.Text style={[styles.tabItemLabel, labelStyle, animatedLabelStyle, animatedLabelColorStyle]}>\n            {uppercase ? _toUpper(label) : label}\n          </Reanimated.Text>}\n        {badge && <Badge backgroundColor={Colors.$backgroundDangerHeavy} size={20} {...badge} containerStyle={styles.badge} />}\n        {trailingAccessory}\n      </View>\n    </GestureDetector>;\n}\nconst styles = StyleSheet.create({\n  tabItem: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: Spacings.s4\n  },\n  tabItemLabel: {\n    ...Typography.text80\n  },\n  tabItemIconWithLabel: {\n    marginRight: 10\n  },\n  badge: {\n    marginLeft: Spacings.s1\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}