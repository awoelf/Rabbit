{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useCallback, useState } from 'react';\nimport { Constants } from \"../../commons/new\";\nimport useDidUpdate from \"../useDidUpdate\";\nvar useOrientation = function useOrientation() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    onOrientationChange = _ref.onOrientationChange;\n  var _useState = useState(Constants.orientation),\n    _useState2 = _slicedToArray(_useState, 2),\n    orientation = _useState2[0],\n    setOrientation = _useState2[1];\n  var orientationChangeListener = useCallback(function () {\n    setOrientation(Constants.orientation);\n  }, []);\n  useEffect(function () {\n    var listener = Constants.addDimensionsEventListener(orientationChangeListener);\n    return function () {\n      return Constants.removeDimensionsEventListener(listener);\n    };\n  }, []);\n  useDidUpdate(function () {\n    onOrientationChange == null ? void 0 : onOrientationChange(orientation);\n  }, [orientation]);\n  return {\n    orientation: orientation\n  };\n};\nexport default useOrientation;","map":{"version":3,"names":["useEffect","useCallback","useState","Constants","useDidUpdate","useOrientation","onOrientationChange","orientation","setOrientation","orientationChangeListener","listener","addDimensionsEventListener","removeDimensionsEventListener"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/hooks/useOrientation/index.js"],"sourcesContent":["import { useEffect, useCallback, useState } from 'react';\nimport { Constants } from \"../../commons/new\";\nimport useDidUpdate from \"../useDidUpdate\";\nconst useOrientation = ({\n  onOrientationChange\n} = {}) => {\n  const [orientation, setOrientation] = useState(Constants.orientation);\n  const orientationChangeListener = useCallback(() => {\n    setOrientation(Constants.orientation);\n  }, []);\n  useEffect(() => {\n    const listener = Constants.addDimensionsEventListener(orientationChangeListener);\n    return () => Constants.removeDimensionsEventListener(listener);\n  }, []);\n  useDidUpdate(() => {\n    onOrientationChange?.(orientation);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orientation]);\n  return {\n    orientation\n  };\n};\nexport default useOrientation;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,SAAS;AAClB,OAAOC,YAAY;AACnB,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAET;EAAA,+EAAP,CAAC,CAAC;IADJC,mBAAmB,QAAnBA,mBAAmB;EAEnB,gBAAsCJ,QAAQ,CAACC,SAAS,CAACI,WAAW,CAAC;IAAA;IAA9DA,WAAW;IAAEC,cAAc;EAClC,IAAMC,yBAAyB,GAAGR,WAAW,CAAC,YAAM;IAClDO,cAAc,CAACL,SAAS,CAACI,WAAW,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EACNP,SAAS,CAAC,YAAM;IACd,IAAMU,QAAQ,GAAGP,SAAS,CAACQ,0BAA0B,CAACF,yBAAyB,CAAC;IAChF,OAAO;MAAA,OAAMN,SAAS,CAACS,6BAA6B,CAACF,QAAQ,CAAC;IAAA;EAChE,CAAC,EAAE,EAAE,CAAC;EACNN,YAAY,CAAC,YAAM;IACjBE,mBAAmB,oBAAnBA,mBAAmB,CAAGC,WAAW,CAAC;EAEpC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,OAAO;IACLA,WAAW,EAAXA;EACF,CAAC;AACH,CAAC;AACD,eAAeF,cAAc"},"metadata":{},"sourceType":"module"}