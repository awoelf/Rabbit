{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { ViewPropTypes } from 'deprecated-react-native-prop-types';\nimport BaseInput from \"../baseInput\";\nimport TextField from \"../textField\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MaskedInput = function (_BaseInput) {\n  _inherits(MaskedInput, _BaseInput);\n  var _super = _createSuper(MaskedInput);\n  function MaskedInput() {\n    _classCallCheck(this, MaskedInput);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MaskedInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n      this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n        if (_.invoke(_this, 'isFocused')) {\n          _.invoke(_this, 'blur');\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        value: ''\n      });\n      this.input.clear();\n    }\n  }, {\n    key: \"renderMaskedText\",\n    value: function renderMaskedText() {\n      var renderMaskedText = this.props.renderMaskedText;\n      var value = this.state.value;\n      if (_.isFunction(renderMaskedText)) {\n        return renderMaskedText(value);\n      }\n      return _jsx(Text, {\n        children: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var containerStyle = this.props.containerStyle;\n      var TextInputProps = TextField.extractOwnProps(this.props, ['containerStyle', 'style']);\n      return _jsxs(TouchableOpacity, {\n        style: containerStyle,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return _this2.input.focus();\n        },\n        children: [_jsx(TextField, _objectSpread(_objectSpread(_objectSpread({}, this.props), {}, {\n          ref: function ref(r) {\n            return _this2.input = r;\n          },\n          containerStyle: styles.hiddenInputContainer,\n          style: styles.hiddenInput,\n          enableErrors: false,\n          hideUnderline: true,\n          placeholder: \"\"\n        }, TextInputProps), {}, {\n          caretHidden: true,\n          multiline: false,\n          onChangeText: this.onChangeText\n        })), _jsx(View, {\n          style: styles.maskedInputWrapper,\n          children: this.renderMaskedText()\n        })]\n      });\n    }\n  }]);\n  return MaskedInput;\n}(BaseInput);\nMaskedInput.displayName = 'MaskedInput';\nMaskedInput.propTypes = _objectSpread(_objectSpread({}, TextField.propTypes), {}, {\n  renderMaskedText: PropTypes.elementType.isRequired,\n  containerStyle: ViewPropTypes.style\n});\nexport { MaskedInput as default };\nvar styles = StyleSheet.create({\n  hiddenInputContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    zIndex: 1\n  }),\n  hiddenInput: {\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  },\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});","map":{"version":3,"names":["_","PropTypes","React","ViewPropTypes","BaseInput","TextField","View","Text","TouchableOpacity","MaskedInput","keyboardDidHideListener","Keyboard","addListener","invoke","remove","setState","value","input","clear","renderMaskedText","props","state","isFunction","containerStyle","TextInputProps","extractOwnProps","focus","r","styles","hiddenInputContainer","hiddenInput","onChangeText","maskedInputWrapper","displayName","propTypes","elementType","isRequired","style","StyleSheet","create","absoluteFillObject","zIndex","color","backgroundColor","height","undefined"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/maskedInput/old.js"],"sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, Keyboard} from 'react-native';\nimport {ViewPropTypes} from 'deprecated-react-native-prop-types';\nimport BaseInput from '../baseInput';\nimport TextField from '../textField';\nimport View from '../view';\nimport Text from '../text';\nimport TouchableOpacity from '../touchableOpacity';\n\n/**\n * @description: Mask Input to create custom looking inputs with custom formats\n * @gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.tsx\n */\nexport default class MaskedInput extends BaseInput {\n  static displayName = 'MaskedInput';\n  static propTypes = {\n    ...TextField.propTypes,\n    /**\n     * callback for rendering the custom input out of the value returns from the actual input\n     */\n    renderMaskedText: PropTypes.elementType.isRequired,\n    /**\n     * container style for the masked input container\n     */\n    containerStyle: ViewPropTypes.style\n  };\n\n  componentDidMount() {\n    this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\n      if (_.invoke(this, 'isFocused')) {\n        _.invoke(this, 'blur');\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.keyboardDidHideListener.remove();\n  }\n\n  clear() {\n    this.setState({value: ''});\n    this.input.clear();\n  }\n\n  renderMaskedText() {\n    const {renderMaskedText} = this.props;\n    const {value} = this.state;\n\n    if (_.isFunction(renderMaskedText)) {\n      return renderMaskedText(value);\n    }\n    return <Text>{value}</Text>;\n  }\n\n  render() {\n    const {containerStyle} = this.props;\n    const TextInputProps = TextField.extractOwnProps(this.props, ['containerStyle', 'style']);\n\n    return (\n      <TouchableOpacity style={containerStyle} activeOpacity={1} onPress={() => this.input.focus()}>\n        <TextField\n          {...this.props}\n          ref={r => (this.input = r)}\n          containerStyle={styles.hiddenInputContainer}\n          style={styles.hiddenInput}\n          enableErrors={false}\n          hideUnderline\n          placeholder=\"\"\n          {...TextInputProps}\n          caretHidden\n          multiline={false}\n          onChangeText={this.onChangeText}\n        />\n        <View style={styles.maskedInputWrapper}>{this.renderMaskedText()}</View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  hiddenInputContainer: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1\n  },\n  hiddenInput: {\n    color: 'transparent',\n    backgroundColor: 'transparent',\n    height: undefined\n  },\n  maskedInputWrapper: {\n    zIndex: 0\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}