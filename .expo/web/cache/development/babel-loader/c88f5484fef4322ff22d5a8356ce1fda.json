{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _remove from \"lodash/remove\";\nimport _forEach from \"lodash/forEach\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nvar SafeAreaInsetsCache = null;\nvar NativeSafeAreaManager = NativeModules.SafeAreaManager;\nvar SafeAreaInsetsManager = function () {\n  function SafeAreaInsetsManager() {\n    _classCallCheck(this, SafeAreaInsetsManager);\n    this._defaultInsets = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n    this._safeAreaInsets = {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    };\n    this._safeAreaChangedDelegates = [];\n    this.addSafeAreaChangedListener();\n  }\n  _createClass(SafeAreaInsetsManager, [{\n    key: \"addSafeAreaChangedListener\",\n    value: function addSafeAreaChangedListener() {\n      var _this = this;\n      if (!NativeSafeAreaManager) {\n        return;\n      }\n      var NativeSafeAreaEvents = new NativeEventEmitter(NativeSafeAreaManager);\n      NativeSafeAreaEvents.addListener('SafeAreaInsetsDidChangeEvent', function (safeAreaInsets) {\n        SafeAreaInsetsCache = safeAreaInsets;\n        _this._safeAreaInsets = SafeAreaInsetsCache;\n        _forEach(_this._safeAreaChangedDelegates, function (delegate) {\n          if (delegate.onSafeAreaInsetsDidChangeEvent) {\n            delegate.onSafeAreaInsetsDidChangeEvent(_this._safeAreaInsets);\n          } else {\n            console.warn('ERROR', 'SafeAreaInsetsManager', 'safe area changed delegate was added, but it does not implement the onSafeAreaInsetsDidChangeEvent method');\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_updateInsets\",\n    value: function () {\n      var _updateInsets2 = _asyncToGenerator(function* () {\n        if (NativeSafeAreaManager && SafeAreaInsetsCache === null) {\n          SafeAreaInsetsCache = yield NativeSafeAreaManager.getSafeAreaInsets();\n          this._safeAreaInsets = SafeAreaInsetsCache;\n        }\n      });\n      function _updateInsets() {\n        return _updateInsets2.apply(this, arguments);\n      }\n      return _updateInsets;\n    }()\n  }, {\n    key: \"getSafeAreaInsets\",\n    value: function () {\n      var _getSafeAreaInsets = _asyncToGenerator(function* () {\n        yield this._updateInsets();\n        return this._safeAreaInsets;\n      });\n      function getSafeAreaInsets() {\n        return _getSafeAreaInsets.apply(this, arguments);\n      }\n      return getSafeAreaInsets;\n    }()\n  }, {\n    key: \"addSafeAreaChangedDelegate\",\n    value: function addSafeAreaChangedDelegate(delegate) {\n      this._safeAreaChangedDelegates.push(delegate);\n    }\n  }, {\n    key: \"removeSafeAreaChangedDelegate\",\n    value: function removeSafeAreaChangedDelegate(delegateToRemove) {\n      _remove(this._safeAreaChangedDelegates, function (currentDelegate) {\n        return currentDelegate === delegateToRemove;\n      });\n    }\n  }, {\n    key: \"defaultInsets\",\n    get: function get() {\n      return this._defaultInsets;\n    }\n  }]);\n  return SafeAreaInsetsManager;\n}();\nexport default new SafeAreaInsetsManager();","map":{"version":3,"names":["_remove","_forEach","SafeAreaInsetsCache","NativeSafeAreaManager","NativeModules","SafeAreaManager","SafeAreaInsetsManager","_defaultInsets","top","left","bottom","right","_safeAreaInsets","_safeAreaChangedDelegates","addSafeAreaChangedListener","NativeSafeAreaEvents","NativeEventEmitter","addListener","safeAreaInsets","delegate","onSafeAreaInsetsDidChangeEvent","console","warn","getSafeAreaInsets","_updateInsets","push","delegateToRemove","currentDelegate"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/lib/components/SafeArea/SafeAreaInsetsManager.js"],"sourcesContent":["import _remove from \"lodash/remove\";\nimport _forEach from \"lodash/forEach\";\n/* eslint no-underscore-dangle: 0 */\n\nimport { NativeModules, NativeEventEmitter } from 'react-native';\nlet SafeAreaInsetsCache = null;\nconst NativeSafeAreaManager = NativeModules.SafeAreaManager;\nclass SafeAreaInsetsManager {\n  _defaultInsets = {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  };\n  _safeAreaInsets = {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  };\n  _safeAreaChangedDelegates = [];\n  constructor() {\n    this.addSafeAreaChangedListener();\n  }\n  addSafeAreaChangedListener() {\n    if (!NativeSafeAreaManager) {\n      return;\n    }\n    const NativeSafeAreaEvents = new NativeEventEmitter(NativeSafeAreaManager);\n    NativeSafeAreaEvents.addListener('SafeAreaInsetsDidChangeEvent', safeAreaInsets => {\n      SafeAreaInsetsCache = safeAreaInsets;\n      this._safeAreaInsets = SafeAreaInsetsCache;\n      _forEach(this._safeAreaChangedDelegates, delegate => {\n        if (delegate.onSafeAreaInsetsDidChangeEvent) {\n          delegate.onSafeAreaInsetsDidChangeEvent(this._safeAreaInsets);\n        } else {\n          console.warn('ERROR', 'SafeAreaInsetsManager', 'safe area changed delegate was added, but it does not implement the onSafeAreaInsetsDidChangeEvent method'); //eslint-disable-line\n        }\n      });\n    });\n  }\n\n  async _updateInsets() {\n    if (NativeSafeAreaManager && SafeAreaInsetsCache === null) {\n      SafeAreaInsetsCache = await NativeSafeAreaManager.getSafeAreaInsets();\n      this._safeAreaInsets = SafeAreaInsetsCache;\n    }\n  }\n  async getSafeAreaInsets() {\n    await this._updateInsets();\n    return this._safeAreaInsets;\n  }\n  addSafeAreaChangedDelegate(delegate) {\n    this._safeAreaChangedDelegates.push(delegate);\n  }\n  removeSafeAreaChangedDelegate(delegateToRemove) {\n    _remove(this._safeAreaChangedDelegates, currentDelegate => {\n      return currentDelegate === delegateToRemove;\n    });\n  }\n  get defaultInsets() {\n    return this._defaultInsets;\n  }\n}\nexport default new SafeAreaInsetsManager();"],"mappings":";;;AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,gBAAgB;AAAC;AAAA;AAItC,IAAIC,mBAAmB,GAAG,IAAI;AAC9B,IAAMC,qBAAqB,GAAGC,aAAa,CAACC,eAAe;AAAC,IACtDC,qBAAqB;EAczB,iCAAc;IAAA;IAAA,KAbdC,cAAc,GAAG;MACfC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE;IACT,CAAC;IAAA,KACDC,eAAe,GAAG;MAChBJ,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE;IACT,CAAC;IAAA,KACDE,yBAAyB,GAAG,EAAE;IAE5B,IAAI,CAACC,0BAA0B,EAAE;EACnC;EAAC;IAAA;IAAA,OACD,sCAA6B;MAAA;MAC3B,IAAI,CAACX,qBAAqB,EAAE;QAC1B;MACF;MACA,IAAMY,oBAAoB,GAAG,IAAIC,kBAAkB,CAACb,qBAAqB,CAAC;MAC1EY,oBAAoB,CAACE,WAAW,CAAC,8BAA8B,EAAE,UAAAC,cAAc,EAAI;QACjFhB,mBAAmB,GAAGgB,cAAc;QACpC,KAAI,CAACN,eAAe,GAAGV,mBAAmB;QAC1CD,QAAQ,CAAC,KAAI,CAACY,yBAAyB,EAAE,UAAAM,QAAQ,EAAI;UACnD,IAAIA,QAAQ,CAACC,8BAA8B,EAAE;YAC3CD,QAAQ,CAACC,8BAA8B,CAAC,KAAI,CAACR,eAAe,CAAC;UAC/D,CAAC,MAAM;YACLS,OAAO,CAACC,IAAI,CAAC,OAAO,EAAE,uBAAuB,EAAE,2GAA2G,CAAC;UAC7J;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA;MAAA,uCAED,aAAsB;QACpB,IAAInB,qBAAqB,IAAID,mBAAmB,KAAK,IAAI,EAAE;UACzDA,mBAAmB,SAASC,qBAAqB,CAACoB,iBAAiB,EAAE;UACrE,IAAI,CAACX,eAAe,GAAGV,mBAAmB;QAC5C;MACF,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,2CACD,aAA0B;QACxB,MAAM,IAAI,CAACsB,aAAa,EAAE;QAC1B,OAAO,IAAI,CAACZ,eAAe;MAC7B,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OACD,oCAA2BO,QAAQ,EAAE;MACnC,IAAI,CAACN,yBAAyB,CAACY,IAAI,CAACN,QAAQ,CAAC;IAC/C;EAAC;IAAA;IAAA,OACD,uCAA8BO,gBAAgB,EAAE;MAC9C1B,OAAO,CAAC,IAAI,CAACa,yBAAyB,EAAE,UAAAc,eAAe,EAAI;QACzD,OAAOA,eAAe,KAAKD,gBAAgB;MAC7C,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,KACD,eAAoB;MAClB,OAAO,IAAI,CAACnB,cAAc;IAC5B;EAAC;EAAA;AAAA;AAEH,eAAe,IAAID,qBAAqB,EAAE"},"metadata":{},"sourceType":"module"}