{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"activeOpacity\", \"backgroundColor\", \"containerStyle\", \"hitSlop\", \"onPress\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _isNaN from \"lodash/isNaN\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { BorderRadiuses, Colors, Spacings, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport View from \"../view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LABEL_FORMATTER_VALUES = [1, 2, 3, 4];\nvar Badge = function (_PureComponent) {\n  _inherits(Badge, _PureComponent);\n  var _super = _createSuper(Badge);\n  function Badge(props) {\n    var _this;\n    _classCallCheck(this, Badge);\n    _this = _super.call(this, props);\n    _this.styles = createStyles(props);\n    return _this;\n  }\n  _createClass(Badge, [{\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var _this$props = this.props,\n        onPress = _this$props.onPress,\n        icon = _this$props.icon,\n        label = _this$props.label,\n        accessibilityLabel = _this$props.accessibilityLabel;\n      return _objectSpread(_objectSpread({\n        accessibilityLabel: accessibilityLabel || label ? label + \" new items\" : 'badge'\n      }, extractAccessibilityProps(this.props)), {}, {\n        accessible: !_isUndefined(label),\n        accessibilityRole: onPress ? 'button' : icon ? 'image' : 'text'\n      });\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.props.size || 20;\n    }\n  }, {\n    key: \"isSmallBadge\",\n    value: function isSmallBadge() {\n      return this.size <= 16;\n    }\n  }, {\n    key: \"getBadgeSizeStyle\",\n    value: function getBadgeSizeStyle() {\n      var _this$props2 = this.props,\n        borderWidth = _this$props2.borderWidth,\n        icon = _this$props2.icon,\n        customElement = _this$props2.customElement;\n      var label = this.getFormattedLabel();\n      var style = {\n        paddingHorizontal: this.isSmallBadge() ? 4 : 6,\n        height: this.size,\n        minWidth: this.size\n      };\n      if (icon && label) {\n        style.paddingRight = 6;\n        style.paddingLeft = 4;\n        style.height = Spacings.s5;\n        if (borderWidth) {\n          style.height += borderWidth * 2;\n        }\n        return style;\n      }\n      if (customElement) {\n        return style;\n      }\n      var isPimple = label === undefined;\n      if (isPimple || icon) {\n        style.paddingHorizontal = 0;\n        style.minWidth = undefined;\n        style.width = style.height;\n        if (borderWidth) {\n          style.height += borderWidth * 2;\n          style.width += borderWidth * 2;\n        }\n        return style;\n      }\n      if (borderWidth) {\n        style.height += borderWidth * 2;\n        style.minWidth += borderWidth * 2;\n      }\n      return style;\n    }\n  }, {\n    key: \"getFormattedLabel\",\n    value: function getFormattedLabel() {\n      var _this$props3 = this.props,\n        labelFormatterLimit = _this$props3.labelFormatterLimit,\n        label = _this$props3.label;\n      if (_isNaN(label)) {\n        return label;\n      }\n      if (LABEL_FORMATTER_VALUES.includes(labelFormatterLimit)) {\n        var maxLabelNumber = Math.pow(10, labelFormatterLimit) - 1;\n        var formattedLabel = label;\n        if (formattedLabel > maxLabelNumber) {\n          formattedLabel = maxLabelNumber + \"+\";\n        }\n        return formattedLabel;\n      } else {\n        return label;\n      }\n    }\n  }, {\n    key: \"getBorderStyling\",\n    value: function getBorderStyling() {\n      var _this$props4 = this.props,\n        borderWidth = _this$props4.borderWidth,\n        borderColor = _this$props4.borderColor,\n        borderRadius = _this$props4.borderRadius;\n      var style = {};\n      if (borderWidth) {\n        style.borderWidth = borderWidth;\n        style.borderColor = borderColor;\n      }\n      if (borderRadius) {\n        style.borderRadius = borderRadius;\n      }\n      return style;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this$props5 = this.props,\n        labelStyle = _this$props5.labelStyle,\n        label = _this$props5.label;\n      if (label) {\n        return _jsx(Text, {\n          style: [this.styles.label, this.isSmallBadge() && this.styles.labelSmall, labelStyle],\n          allowFontScaling: false,\n          numberOfLines: 1,\n          testID: \"badge\",\n          children: this.getFormattedLabel()\n        });\n      }\n    }\n  }, {\n    key: \"renderCustomElement\",\n    value: function renderCustomElement() {\n      var customElement = this.props.customElement;\n      return customElement;\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props6 = this.props,\n        icon = _this$props6.icon,\n        iconStyle = _this$props6.iconStyle,\n        iconProps = _this$props6.iconProps,\n        borderColor = _this$props6.borderColor,\n        label = _this$props6.label;\n      var flex = label ? 0 : 1;\n      return icon && _jsx(Image, _objectSpread(_objectSpread({\n        source: icon,\n        resizeMode: \"contain\",\n        tintColor: Colors.$iconDefaultLight,\n        borderColor: borderColor\n      }, iconProps), {}, {\n        style: _objectSpread({\n          flex: flex\n        }, iconStyle)\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n        activeOpacity = _this$props7.activeOpacity,\n        backgroundColor = _this$props7.backgroundColor,\n        containerStyle = _this$props7.containerStyle,\n        hitSlop = _this$props7.hitSlop,\n        onPress = _this$props7.onPress,\n        testID = _this$props7.testID,\n        others = _objectWithoutProperties(_this$props7, _excluded);\n      var backgroundStyle = backgroundColor && {\n        backgroundColor: backgroundColor\n      };\n      var sizeStyle = this.getBadgeSizeStyle();\n      var borderStyle = this.getBorderStyling();\n      var Container = onPress ? TouchableOpacity : View;\n      return _jsx(View, _objectSpread(_objectSpread(_objectSpread({\n        style: containerStyle\n      }, others), {}, {\n        backgroundColor: undefined,\n        borderWidth: undefined\n      }, this.getAccessibilityProps()), {}, {\n        children: _jsxs(Container, {\n          testID: testID,\n          pointerEvents: 'none',\n          style: [sizeStyle, this.styles.badge, borderStyle, backgroundStyle],\n          onPress: onPress,\n          activeOpacity: activeOpacity,\n          hitSlop: hitSlop,\n          row: true,\n          children: [this.renderCustomElement(), this.renderIcon(), this.renderLabel()]\n        })\n      }));\n    }\n  }]);\n  return Badge;\n}(PureComponent);\nBadge.displayName = 'Badge';\nfunction createStyles(props) {\n  var styles = StyleSheet.create({\n    badge: {\n      alignSelf: 'flex-start',\n      borderRadius: BorderRadiuses.br100,\n      backgroundColor: !props.icon || props.customElement ? Colors.$backgroundGeneralHeavy : undefined,\n      alignItems: 'center',\n      justifyContent: 'center',\n      overflow: 'hidden'\n    },\n    label: _objectSpread(_objectSpread({}, Typography.text90), {}, {\n      color: Colors.$textDefaultLight,\n      backgroundColor: 'transparent'\n    }),\n    labelSmall: _objectSpread(_objectSpread({}, Typography.text100), {}, {\n      lineHeight: undefined\n    })\n  });\n  return styles;\n}\nexport { Badge };\nexport default asBaseComponent(Badge);","map":{"version":3,"names":["_isNaN","_isUndefined","React","PureComponent","extractAccessibilityProps","asBaseComponent","BorderRadiuses","Colors","Spacings","Typography","TouchableOpacity","Image","View","LABEL_FORMATTER_VALUES","Badge","props","styles","createStyles","onPress","icon","label","accessibilityLabel","accessible","accessibilityRole","size","borderWidth","customElement","getFormattedLabel","style","paddingHorizontal","isSmallBadge","height","minWidth","paddingRight","paddingLeft","s5","isPimple","undefined","width","labelFormatterLimit","includes","maxLabelNumber","formattedLabel","borderColor","borderRadius","labelStyle","labelSmall","iconStyle","iconProps","flex","$iconDefaultLight","activeOpacity","backgroundColor","containerStyle","hitSlop","testID","others","backgroundStyle","sizeStyle","getBadgeSizeStyle","borderStyle","getBorderStyling","Container","getAccessibilityProps","badge","renderCustomElement","renderIcon","renderLabel","displayName","StyleSheet","create","alignSelf","br100","$backgroundGeneralHeavy","alignItems","justifyContent","overflow","text90","color","$textDefaultLight","text100","lineHeight"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/badge/index.js"],"sourcesContent":["import _isNaN from \"lodash/isNaN\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Text } from 'react-native';\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { BorderRadiuses, Colors, Spacings, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport View from \"../view\";\nconst LABEL_FORMATTER_VALUES = [1, 2, 3, 4];\n/**\n * @description: Round colored badge, typically used to show a number\n * @extends: View\n * @image: https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.tsx\n */\nclass Badge extends PureComponent {\n  static displayName = 'Badge';\n  constructor(props) {\n    super(props);\n    this.styles = createStyles(props);\n  }\n  getAccessibilityProps() {\n    const {\n      onPress,\n      icon,\n      label,\n      accessibilityLabel\n    } = this.props;\n    return {\n      accessibilityLabel: accessibilityLabel || label ? `${label} new items` : 'badge',\n      ...extractAccessibilityProps(this.props),\n      accessible: !_isUndefined(label),\n      accessibilityRole: onPress ? 'button' : icon ? 'image' : 'text'\n    };\n  }\n  get size() {\n    return this.props.size || 20;\n  }\n  isSmallBadge() {\n    return this.size <= 16;\n  }\n  getBadgeSizeStyle() {\n    const {\n      borderWidth,\n      icon,\n      customElement\n    } = this.props;\n    const label = this.getFormattedLabel();\n    const style = {\n      paddingHorizontal: this.isSmallBadge() ? 4 : 6,\n      height: this.size,\n      minWidth: this.size\n    };\n    if (icon && label) {\n      style.paddingRight = 6;\n      style.paddingLeft = 4;\n      style.height = Spacings.s5;\n      if (borderWidth) {\n        style.height += borderWidth * 2;\n      }\n      return style;\n    }\n    if (customElement) {\n      return style;\n    }\n    const isPimple = label === undefined;\n    if (isPimple || icon) {\n      style.paddingHorizontal = 0;\n      style.minWidth = undefined;\n      style.width = style.height;\n      if (borderWidth) {\n        style.height += borderWidth * 2;\n        style.width += borderWidth * 2;\n      }\n      return style;\n    }\n    if (borderWidth) {\n      style.height += borderWidth * 2;\n      style.minWidth += borderWidth * 2;\n    }\n    return style;\n  }\n  getFormattedLabel() {\n    const {\n      labelFormatterLimit,\n      label\n    } = this.props;\n    if (_isNaN(label)) {\n      return label;\n    }\n    if (LABEL_FORMATTER_VALUES.includes(labelFormatterLimit)) {\n      const maxLabelNumber = 10 ** labelFormatterLimit - 1;\n      let formattedLabel = label;\n      if (formattedLabel > maxLabelNumber) {\n        formattedLabel = `${maxLabelNumber}+`;\n      }\n      return formattedLabel;\n    } else {\n      return label;\n    }\n  }\n  getBorderStyling() {\n    const {\n      borderWidth,\n      borderColor,\n      borderRadius\n    } = this.props;\n    const style = {};\n    if (borderWidth) {\n      style.borderWidth = borderWidth;\n      style.borderColor = borderColor;\n    }\n    if (borderRadius) {\n      style.borderRadius = borderRadius;\n    }\n    return style;\n  }\n  renderLabel() {\n    const {\n      labelStyle,\n      label\n    } = this.props;\n    if (label) {\n      return <Text style={[this.styles.label, this.isSmallBadge() && this.styles.labelSmall, labelStyle]} allowFontScaling={false} numberOfLines={1} testID=\"badge\">\n          {this.getFormattedLabel()}\n        </Text>;\n    }\n  }\n  renderCustomElement() {\n    const {\n      customElement\n    } = this.props;\n    return customElement;\n  }\n  renderIcon() {\n    const {\n      icon,\n      iconStyle,\n      iconProps,\n      borderColor,\n      label\n    } = this.props;\n    const flex = label ? 0 : 1;\n    return icon && <Image source={icon} resizeMode=\"contain\" tintColor={Colors.$iconDefaultLight}\n    //@ts-ignore\n    borderColor={borderColor} {...iconProps} style={{\n      flex,\n      ...iconStyle\n    }} />;\n  }\n  render() {\n    const {\n      activeOpacity,\n      backgroundColor,\n      containerStyle,\n      hitSlop,\n      onPress,\n      testID,\n      ...others\n    } = this.props;\n    const backgroundStyle = backgroundColor && {\n      backgroundColor\n    };\n    const sizeStyle = this.getBadgeSizeStyle();\n    const borderStyle = this.getBorderStyling();\n    const Container = onPress ? TouchableOpacity : View;\n    return (\n      // The extra View wrapper is to break badge's flex-ness\n      // @ts-ignore\n      <View style={containerStyle} {...others} backgroundColor={undefined}\n      // @ts-expect-error\n      borderWidth={undefined} {...this.getAccessibilityProps()}>\n        <Container testID={testID} pointerEvents={'none'} style={[sizeStyle, this.styles.badge, borderStyle, backgroundStyle]} onPress={onPress} activeOpacity={activeOpacity} hitSlop={hitSlop} row>\n          {this.renderCustomElement()}\n          {this.renderIcon()}\n          {this.renderLabel()}\n        </Container>\n      </View>\n    );\n  }\n}\nfunction createStyles(props) {\n  const styles = StyleSheet.create({\n    badge: {\n      alignSelf: 'flex-start',\n      borderRadius: BorderRadiuses.br100,\n      backgroundColor: !props.icon || props.customElement ? Colors.$backgroundGeneralHeavy : undefined,\n      alignItems: 'center',\n      justifyContent: 'center',\n      overflow: 'hidden'\n    },\n    label: {\n      ...Typography.text90,\n      color: Colors.$textDefaultLight,\n      backgroundColor: 'transparent'\n    },\n    labelSmall: {\n      ...Typography.text100,\n      lineHeight: undefined\n    }\n  });\n  return styles;\n}\nexport { Badge }; // For tests\n\nexport default asBaseComponent(Badge);"],"mappings":"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"},"metadata":{},"sourceType":"module"}