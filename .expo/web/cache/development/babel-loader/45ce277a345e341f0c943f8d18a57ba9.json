{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"isAnimated\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { PureComponent } from 'react';\nimport View from \"../view\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PanResponderView = function (_PureComponent) {\n  _inherits(PanResponderView, _PureComponent);\n  var _super = _createSuper(PanResponderView);\n  function PanResponderView() {\n    var _this;\n    _classCallCheck(this, PanResponderView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.initialLeft = 0;\n    _this.initialTop = 0;\n    _this.ref = React.createRef();\n    return _this;\n  }\n  _createClass(PanResponderView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setNativeProps(this.initialLeft, this.initialTop);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var ignorePanning = this.props.ignorePanning;\n      var _this$props$context = this.props.context,\n        isPanning = _this$props$context.isPanning,\n        dragDeltas = _this$props$context.dragDeltas;\n      var _prevProps$context = prevProps.context,\n        prevIsPanning = _prevProps$context.isPanning,\n        prevDragDeltas = _prevProps$context.dragDeltas;\n      if (!ignorePanning && !isPanning && prevIsPanning) {\n        this.onPanEnd();\n      }\n      if (!ignorePanning && isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n        this.onDrag(dragDeltas);\n      }\n    }\n  }, {\n    key: \"onPanEnd\",\n    value: function onPanEnd() {\n      var _this$props$onPanLoca, _this$props, _this$props$context$o, _this$props$context2;\n      var location = {\n        left: this.left,\n        top: this.top\n      };\n      this.initialLeft = this.left || this.initialLeft;\n      this.initialTop = this.top || this.initialTop;\n      (_this$props$onPanLoca = (_this$props = this.props).onPanLocationChanged) == null ? void 0 : _this$props$onPanLoca.call(_this$props, location);\n      (_this$props$context$o = (_this$props$context2 = this.props.context).onPanLocationChanged) == null ? void 0 : _this$props$context$o.call(_this$props$context2, location);\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(deltas) {\n      var left = this.initialLeft + (deltas.x ? Math.round(deltas.x) : 0);\n      var top = this.initialTop + (deltas.y ? Math.round(deltas.y) : 0);\n      this.setNativeProps(left, top);\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(left, top) {\n      if (this.ref.current) {\n        this.ref.current.setNativeProps({\n          style: {\n            left: left,\n            top: top\n          }\n        });\n        this.left = left;\n        this.top = top;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        isAnimated = _this$props2.isAnimated,\n        others = _objectWithoutProperties(_this$props2, _excluded);\n      return _jsx(View, _objectSpread(_objectSpread({\n        animated: isAnimated,\n        ref: this.ref,\n        pointerEvents: 'box-none'\n      }, others), {}, {\n        children: this.props.children\n      }));\n    }\n  }]);\n  return PanResponderView;\n}(PureComponent);\nPanResponderView.displayName = 'PanResponderView';\nPanResponderView.defaultProps = {\n  isAnimated: false\n};\nexport default asPanViewConsumer(PanResponderView);","map":{"version":3,"names":["React","PureComponent","View","asPanViewConsumer","PanResponderView","initialLeft","initialTop","ref","createRef","setNativeProps","prevProps","ignorePanning","props","context","isPanning","dragDeltas","prevIsPanning","prevDragDeltas","onPanEnd","x","y","onDrag","location","left","top","onPanLocationChanged","deltas","Math","round","current","style","isAnimated","others","children","displayName","defaultProps"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/panningViews/panResponderView.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport View from \"../view\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\n/**\n * @description: panResponderView component created to making listening to swipe and drag events easier.\n * @notes: Has to be used as a child of a PanningProvider that also has a PanListenerView.\n *         The PanListenerView is the one that sends the drag\\swipe events.\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PanResponderScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/PanResponderView/PanResponderView.gif?raw=true\n */\nclass PanResponderView extends PureComponent {\n  static displayName = 'PanResponderView';\n  static defaultProps = {\n    isAnimated: false\n  };\n  initialLeft = 0;\n  initialTop = 0;\n  ref = React.createRef();\n  componentDidMount() {\n    this.setNativeProps(this.initialLeft, this.initialTop);\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      ignorePanning\n    } = this.props;\n    const {\n      isPanning,\n      dragDeltas\n    } = this.props.context;\n    const {\n      isPanning: prevIsPanning,\n      dragDeltas: prevDragDeltas\n    } = prevProps.context;\n    if (!ignorePanning && !isPanning && prevIsPanning) {\n      this.onPanEnd();\n    }\n    if (!ignorePanning && isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n      this.onDrag(dragDeltas);\n    }\n  }\n  onPanEnd() {\n    const location = {\n      left: this.left,\n      top: this.top\n    };\n    this.initialLeft = this.left || this.initialLeft;\n    this.initialTop = this.top || this.initialTop;\n    this.props.onPanLocationChanged?.(location);\n    //@ts-expect-error\n    this.props.context.onPanLocationChanged?.(location);\n  }\n  onDrag(deltas) {\n    const left = this.initialLeft + (deltas.x ? Math.round(deltas.x) : 0);\n    const top = this.initialTop + (deltas.y ? Math.round(deltas.y) : 0);\n    this.setNativeProps(left, top);\n  }\n  setNativeProps(left, top) {\n    if (this.ref.current) {\n      this.ref.current.setNativeProps({\n        style: {\n          left,\n          top\n        }\n      });\n      this.left = left;\n      this.top = top;\n    }\n  }\n  render() {\n    const {\n      isAnimated,\n      ...others\n    } = this.props;\n    return <View animated={isAnimated} ref={this.ref} pointerEvents={'box-none'} {...others}>\n        {this.props.children}\n      </View>;\n  }\n}\nexport default asPanViewConsumer(PanResponderView);"],"mappings":"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"},"metadata":{},"sourceType":"module"}