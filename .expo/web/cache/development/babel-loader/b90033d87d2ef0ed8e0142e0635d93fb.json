{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { PureComponent } from 'react';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport PanningProvider from \"./panningProvider\";\nimport View from \"../view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DEFAULT_DIRECTIONS = [PanningProvider.Directions.UP, PanningProvider.Directions.DOWN, PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT];\nvar DEFAULT_PAN_SENSITIVITY = 5;\nvar DEFAULT_SWIPE_VELOCITY = 1.8;\nvar PanListenerView = function (_PureComponent) {\n  _inherits(PanListenerView, _PureComponent);\n  var _super = _createSuper(PanListenerView);\n  function PanListenerView(props) {\n    var _this;\n    _classCallCheck(this, PanListenerView);\n    _this = _super.call(this, props);\n    _this.yes = function () {\n      return true;\n    };\n    _this.no = function () {\n      return false;\n    };\n    _this.shouldPan = function (_e, gestureState) {\n      var dy = gestureState.dy,\n        dx = gestureState.dx;\n      var _this$props = _this.props,\n        directions = _this$props.directions,\n        _this$props$panSensit = _this$props.panSensitivity,\n        panSensitivity = _this$props$panSensit === void 0 ? DEFAULT_PAN_SENSITIVITY : _this$props$panSensit;\n      return Boolean(directions && (directions.includes(PanningProvider.Directions.UP) && dy < -panSensitivity || directions.includes(PanningProvider.Directions.DOWN) && dy > panSensitivity || directions.includes(PanningProvider.Directions.LEFT) && dx < -panSensitivity || directions.includes(PanningProvider.Directions.RIGHT) && dx > panSensitivity));\n    };\n    _this.handlePanStart = function () {\n      var _this$props$context;\n      _this.props.onPanStart == null ? void 0 : _this.props.onPanStart();\n      (_this$props$context = _this.props.context) == null ? void 0 : _this$props$context.onPanStart == null ? void 0 : _this$props$context.onPanStart();\n    };\n    _this.getSwipeDirection = function (_ref) {\n      var vx = _ref.vx,\n        vy = _ref.vy;\n      var _this$props$swipeVelo = _this.props.swipeVelocitySensitivity,\n        swipeVelocitySensitivity = _this$props$swipeVelo === void 0 ? DEFAULT_SWIPE_VELOCITY : _this$props$swipeVelo;\n      return _this.getDirectionsOverSensitivity(vx, vy, swipeVelocitySensitivity);\n    };\n    _this.getDragDirection = function (_ref2) {\n      var dx = _ref2.dx,\n        dy = _ref2.dy;\n      return _this.getDirectionsOverSensitivity(dx, dy, 0);\n    };\n    _this.getDirectionsOverSensitivity = function (x, y, sensitivity) {\n      var _this$props$direction = _this.props.directions,\n        directions = _this$props$direction === void 0 ? DEFAULT_DIRECTIONS : _this$props$direction;\n      var selectedDirections = {};\n      var selectedAmounts = {};\n      if (directions.includes(PanningProvider.Directions.LEFT) && x < -sensitivity) {\n        selectedDirections.x = PanningProvider.Directions.LEFT;\n        selectedAmounts.x = x;\n      } else if (directions.includes(PanningProvider.Directions.RIGHT) && x > sensitivity) {\n        selectedDirections.x = PanningProvider.Directions.RIGHT;\n        selectedAmounts.x = x;\n      }\n      if (directions.includes(PanningProvider.Directions.UP) && y < -sensitivity) {\n        selectedDirections.y = PanningProvider.Directions.UP;\n        selectedAmounts.y = y;\n      } else if (directions.includes(PanningProvider.Directions.DOWN) && y > sensitivity) {\n        selectedDirections.y = PanningProvider.Directions.DOWN;\n        selectedAmounts.y = y;\n      }\n      return {\n        selectedDirections: selectedDirections,\n        selectedAmounts: selectedAmounts\n      };\n    };\n    _this.panResultHasValue = function (panResult) {\n      return Boolean(panResult && (panResult.selectedDirections.x || panResult.selectedDirections.y));\n    };\n    _this.handlePanMove = function (_e, gestureState) {\n      var _this$props2 = _this.props,\n        onSwipe = _this$props2.onSwipe,\n        onDrag = _this$props2.onDrag,\n        context = _this$props2.context;\n      var hasSwipe = !_isUndefined(onSwipe);\n      var hasDrag = !_isUndefined(onDrag);\n      var hasContext = !_isUndefined(context);\n      var panResult;\n      if (hasSwipe || hasContext) {\n        panResult = _this.getSwipeDirection(gestureState);\n      }\n      if (_this.panResultHasValue(panResult)) {\n        var data = {\n          directions: panResult.selectedDirections,\n          velocities: panResult.selectedAmounts\n        };\n        _this.props.onSwipe == null ? void 0 : _this.props.onSwipe(data);\n        context == null ? void 0 : context.onSwipe == null ? void 0 : context.onSwipe(data);\n      } else if (hasDrag || hasContext) {\n        panResult = _this.getDragDirection(gestureState);\n        if (_this.panResultHasValue(panResult)) {\n          var _data = {\n            directions: panResult.selectedDirections,\n            deltas: panResult.selectedAmounts\n          };\n          _this.props.onDrag == null ? void 0 : _this.props.onDrag(_data);\n          context == null ? void 0 : context.onDrag == null ? void 0 : context.onDrag(_data);\n        }\n      }\n    };\n    _this.handlePanRelease = function () {\n      var _this$props$context2;\n      _this.props.onPanRelease == null ? void 0 : _this.props.onPanRelease();\n      (_this$props$context2 = _this.props.context) == null ? void 0 : _this$props$context2.onPanRelease == null ? void 0 : _this$props$context2.onPanRelease();\n    };\n    _this.handlePanTerminate = function () {\n      var _this$props$context3;\n      _this.props.onPanTerminated == null ? void 0 : _this.props.onPanTerminated();\n      (_this$props$context3 = _this.props.context) == null ? void 0 : _this$props$context3.onPanTerminated == null ? void 0 : _this$props$context3.onPanTerminated();\n    };\n    var isClickable = props.isClickable;\n    _this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: isClickable ? _this.shouldPan : _this.yes,\n      onMoveShouldSetPanResponder: _this.shouldPan,\n      onStartShouldSetPanResponderCapture: _this.no,\n      onMoveShouldSetPanResponderCapture: _this.no,\n      onPanResponderGrant: _this.handlePanStart,\n      onPanResponderMove: _this.handlePanMove,\n      onPanResponderRelease: _this.handlePanRelease,\n      onPanResponderTerminate: _this.handlePanTerminate\n    });\n    return _this;\n  }\n  _createClass(PanListenerView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        children = _this$props3.children,\n        others = _objectWithoutProperties(_this$props3, _excluded);\n      return _jsx(View, _objectSpread(_objectSpread(_objectSpread({}, others), this.panResponder.panHandlers), {}, {\n        children: children\n      }));\n    }\n  }]);\n  return PanListenerView;\n}(PureComponent);\nPanListenerView.displayName = 'PanListenerView';\nPanListenerView.defaultProps = {\n  directions: DEFAULT_DIRECTIONS,\n  panSensitivity: DEFAULT_PAN_SENSITIVITY,\n  swipeVelocitySensitivity: DEFAULT_SWIPE_VELOCITY\n};\nexport default asPanViewConsumer(PanListenerView);","map":{"version":3,"names":["_isUndefined","React","PureComponent","asPanViewConsumer","PanningProvider","View","DEFAULT_DIRECTIONS","Directions","UP","DOWN","LEFT","RIGHT","DEFAULT_PAN_SENSITIVITY","DEFAULT_SWIPE_VELOCITY","PanListenerView","props","yes","no","shouldPan","_e","gestureState","dy","dx","directions","panSensitivity","Boolean","includes","handlePanStart","onPanStart","context","getSwipeDirection","vx","vy","swipeVelocitySensitivity","getDirectionsOverSensitivity","getDragDirection","x","y","sensitivity","selectedDirections","selectedAmounts","panResultHasValue","panResult","handlePanMove","onSwipe","onDrag","hasSwipe","hasDrag","hasContext","data","velocities","deltas","handlePanRelease","onPanRelease","handlePanTerminate","onPanTerminated","isClickable","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","children","others","panHandlers","displayName","defaultProps"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/panningViews/panListenerView.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport React, { PureComponent } from 'react';\nimport { PanResponder } from 'react-native';\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport PanningProvider from \"./panningProvider\";\nimport View from \"../view\";\nconst DEFAULT_DIRECTIONS = [PanningProvider.Directions.UP, PanningProvider.Directions.DOWN, PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT];\nconst DEFAULT_PAN_SENSITIVITY = 5;\nconst DEFAULT_SWIPE_VELOCITY = 1.8;\n\n/**\n * @description: PanListenerView component created to making listening to swipe and drag events easier\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PanListenerScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/PanListenerView/PanListenerView.gif?raw=true\n */\nclass PanListenerView extends PureComponent {\n  static displayName = 'PanListenerView';\n  static defaultProps = {\n    directions: DEFAULT_DIRECTIONS,\n    panSensitivity: DEFAULT_PAN_SENSITIVITY,\n    swipeVelocitySensitivity: DEFAULT_SWIPE_VELOCITY\n  };\n  constructor(props) {\n    super(props);\n    const {\n      isClickable\n    } = props;\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: isClickable ? this.shouldPan : this.yes,\n      onMoveShouldSetPanResponder: this.shouldPan,\n      onStartShouldSetPanResponderCapture: this.no,\n      onMoveShouldSetPanResponderCapture: this.no,\n      onPanResponderGrant: this.handlePanStart,\n      onPanResponderMove: this.handlePanMove,\n      onPanResponderRelease: this.handlePanRelease,\n      onPanResponderTerminate: this.handlePanTerminate\n    });\n  }\n  yes = () => {\n    return true;\n  };\n  no = () => {\n    return false;\n  };\n  shouldPan = (_e, gestureState) => {\n    // return true if user is swiping, return false if it's a single click\n    const {\n      dy,\n      dx\n    } = gestureState;\n    const {\n      directions,\n      panSensitivity = DEFAULT_PAN_SENSITIVITY\n    } = this.props;\n    return Boolean(directions && (directions.includes(PanningProvider.Directions.UP) && dy < -panSensitivity || directions.includes(PanningProvider.Directions.DOWN) && dy > panSensitivity || directions.includes(PanningProvider.Directions.LEFT) && dx < -panSensitivity || directions.includes(PanningProvider.Directions.RIGHT) && dx > panSensitivity));\n  };\n  handlePanStart = () => {\n    this.props.onPanStart?.();\n    this.props.context?.onPanStart?.();\n  };\n  getSwipeDirection = ({\n    vx,\n    vy\n  }) => {\n    const {\n      swipeVelocitySensitivity = DEFAULT_SWIPE_VELOCITY\n    } = this.props;\n    return this.getDirectionsOverSensitivity(vx, vy, swipeVelocitySensitivity);\n  };\n  getDragDirection = ({\n    dx,\n    dy\n  }) => {\n    return this.getDirectionsOverSensitivity(dx, dy, 0);\n  };\n  getDirectionsOverSensitivity = (x, y, sensitivity) => {\n    const {\n      directions = DEFAULT_DIRECTIONS\n    } = this.props;\n    const selectedDirections = {};\n    const selectedAmounts = {};\n    if (directions.includes(PanningProvider.Directions.LEFT) && x < -sensitivity) {\n      selectedDirections.x = PanningProvider.Directions.LEFT;\n      selectedAmounts.x = x;\n    } else if (directions.includes(PanningProvider.Directions.RIGHT) && x > sensitivity) {\n      selectedDirections.x = PanningProvider.Directions.RIGHT;\n      selectedAmounts.x = x;\n    }\n    if (directions.includes(PanningProvider.Directions.UP) && y < -sensitivity) {\n      selectedDirections.y = PanningProvider.Directions.UP;\n      selectedAmounts.y = y;\n    } else if (directions.includes(PanningProvider.Directions.DOWN) && y > sensitivity) {\n      selectedDirections.y = PanningProvider.Directions.DOWN;\n      selectedAmounts.y = y;\n    }\n    return {\n      selectedDirections,\n      selectedAmounts\n    };\n  };\n  panResultHasValue = panResult => {\n    return Boolean(panResult && (panResult.selectedDirections.x || panResult.selectedDirections.y));\n  };\n  handlePanMove = (_e, gestureState) => {\n    const {\n      onSwipe,\n      onDrag,\n      context\n    } = this.props;\n    const hasSwipe = !_isUndefined(onSwipe);\n    const hasDrag = !_isUndefined(onDrag);\n    const hasContext = !_isUndefined(context);\n    let panResult;\n    if (hasSwipe || hasContext) {\n      panResult = this.getSwipeDirection(gestureState);\n    }\n    if (this.panResultHasValue(panResult)) {\n      // @ts-ignore\n      const data = {\n        directions: panResult.selectedDirections,\n        velocities: panResult.selectedAmounts\n      };\n      this.props.onSwipe?.(data);\n      context?.onSwipe?.(data);\n    } else if (hasDrag || hasContext) {\n      panResult = this.getDragDirection(gestureState);\n      if (this.panResultHasValue(panResult)) {\n        const data = {\n          directions: panResult.selectedDirections,\n          deltas: panResult.selectedAmounts\n        };\n        this.props.onDrag?.(data);\n        context?.onDrag?.(data);\n      }\n    }\n  };\n  handlePanRelease = () => {\n    this.props.onPanRelease?.();\n    this.props.context?.onPanRelease?.();\n  };\n  handlePanTerminate = () => {\n    this.props.onPanTerminated?.();\n    this.props.context?.onPanTerminated?.();\n  };\n  render() {\n    const {\n      children,\n      ...others\n    } = this.props;\n    return <View {...others} {...this.panResponder.panHandlers}>\n        {children}\n      </View>;\n  }\n}\nexport default asPanViewConsumer(PanListenerView);"],"mappings":"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"},"metadata":{},"sourceType":"module"}