{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ViewPropTypes } from 'deprecated-react-native-prop-types';\nimport { Colors } from \"../../style\";\nimport { BaseComponent } from \"../../commons\";\nimport View from \"../../components/view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedScanner = function (_BaseComponent) {\n  _inherits(AnimatedScanner, _BaseComponent);\n  var _super = _createSuper(AnimatedScanner);\n  function AnimatedScanner(props) {\n    var _this;\n    _classCallCheck(this, AnimatedScanner);\n    _this = _super.call(this, props);\n    _this.state = {\n      animatedProgress: new Animated.Value(0),\n      isDone: false\n    };\n    return _this;\n  }\n  _createClass(AnimatedScanner, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        progress = _this$props.progress,\n        duration = _this$props.duration;\n      if (progress > 0) {\n        this.animate(progress, duration);\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n        progress = _this$props2.progress,\n        duration = _this$props2.duration;\n      if (prevProps.progress !== progress) {\n        this.animate(progress, duration);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.animatedProgress.stopAnimation();\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(toValue, duration) {\n      var _this2 = this;\n      var animatedProgress = this.state.animatedProgress;\n      Animated.timing(animatedProgress, {\n        toValue: toValue,\n        duration: duration,\n        useNativeDriver: false\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n        if (finished) {\n          var isDone = toValue >= 100;\n          _this2.setState({\n            isDone: isDone\n          });\n          _.invoke(_this2.props, 'onBreakpoint', {\n            progress: toValue,\n            isDone: isDone\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        opacity = _this$props3.opacity,\n        backgroundColor = _this$props3.backgroundColor,\n        hideScannerLine = _this$props3.hideScannerLine,\n        style = _this$props3.style,\n        containerStyle = _this$props3.containerStyle;\n      var _this$state = this.state,\n        isDone = _this$state.isDone,\n        animatedProgress = _this$state.animatedProgress;\n      return _jsx(View, {\n        style: [_objectSpread({}, StyleSheet.absoluteFillObject), containerStyle],\n        children: _jsx(Animated.View, {\n          style: [this.styles.container, style, opacity && {\n            opacity: opacity\n          }, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, {\n            left: animatedProgress.interpolate({\n              inputRange: [0, 100],\n              outputRange: ['0%', '100%']\n            })\n          }],\n          children: isDone && !hideScannerLine && _jsx(View, {\n            style: this.styles.scanner\n          })\n        })\n      });\n    }\n  }]);\n  return AnimatedScanner;\n}(BaseComponent);\nAnimatedScanner.displayName = 'AnimatedScanner';\nAnimatedScanner.propTypes = {\n  progress: PropTypes.number,\n  duration: PropTypes.number,\n  opacity: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  onBreakpoint: PropTypes.func,\n  hideScannerLine: PropTypes.bool,\n  containerStyle: ViewPropTypes.style\n};\nAnimatedScanner.defaultProps = {\n  progress: 0,\n  duration: 1000\n};\nexport { AnimatedScanner as default };\nfunction createStyles() {\n  return StyleSheet.create({\n    container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      backgroundColor: Colors.white,\n      opacity: 0.9\n    }),\n    scanner: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      borderWidth: StyleSheet.hairlineWidth,\n      borderColor: Colors.grey50\n    })\n  });\n}","map":{"version":3,"names":["_","PropTypes","React","ViewPropTypes","Colors","BaseComponent","View","AnimatedScanner","props","state","animatedProgress","Animated","Value","isDone","progress","duration","animate","styles","createStyles","prevProps","stopAnimation","toValue","timing","useNativeDriver","start","finished","setState","invoke","opacity","backgroundColor","hideScannerLine","style","containerStyle","StyleSheet","absoluteFillObject","container","left","interpolate","inputRange","outputRange","scanner","displayName","propTypes","number","string","onBreakpoint","func","bool","defaultProps","create","white","borderWidth","hairlineWidth","borderColor","grey50"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/animatedScanner/index.js"],"sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, Animated} from 'react-native';\nimport {ViewPropTypes} from 'deprecated-react-native-prop-types';\nimport {Colors} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport View from '../../components/view';\n\n// TODO: add finisher animation (check icon animation or something)\n/**\n * @description: Scanner component for progress indication\n * @extends: Animated.View\n * @gif: https://media.giphy.com/media/l49JVcxoclUXbryiA/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardScannerScreen.js\n */\nexport default class AnimatedScanner extends BaseComponent {\n  static displayName = 'AnimatedScanner';\n  static propTypes = {\n    /**\n     * animated value between 0 and 100\n     */\n    // progress: PropTypes.object,\n    progress: PropTypes.number,\n    /**\n     * Duration of current break (can be change between breaks)\n     */\n    duration: PropTypes.number,\n    /**\n     * scanner opacity\n     */\n    opacity: PropTypes.number,\n    /**\n     * scanner background color\n     */\n    backgroundColor: PropTypes.string,\n    /**\n     * breakpoint callback - ({progress, isDone}) => {}\n     */\n    onBreakpoint: PropTypes.func,\n    /**\n     * should hide the scanner line\n     */\n    hideScannerLine: PropTypes.bool,\n    /**\n     * the container style\n     */\n    containerStyle: ViewPropTypes.style\n  };\n\n  static defaultProps = {\n    progress: 0,\n    duration: 1000\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animatedProgress: new Animated.Value(0),\n      isDone: false\n    };\n  }\n\n  componentDidMount() {\n    const {progress, duration} = this.props;\n\n    if (progress > 0) {\n      this.animate(progress, duration);\n    }\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {progress, duration} = this.props;\n\n    if (prevProps.progress !== progress) {\n      this.animate(progress, duration);\n    }\n  }\n\n  componentWillUnmount() {\n    this.state.animatedProgress.stopAnimation();\n  }\n\n  animate(toValue, duration) {\n    const {animatedProgress} = this.state;\n\n    Animated.timing(animatedProgress, {\n      toValue,\n      duration,\n      useNativeDriver: false\n    }).start(({finished}) => {\n      if (finished) {\n        const isDone = toValue >= 100;\n        this.setState({isDone});\n        _.invoke(this.props, 'onBreakpoint', {progress: toValue, isDone});\n      }\n    });\n  }\n\n  render() {\n    const {opacity, backgroundColor, hideScannerLine, style, containerStyle} = this.props;\n    const {isDone, animatedProgress} = this.state;\n\n    return (\n      <View style={[{...StyleSheet.absoluteFillObject}, containerStyle]}>\n        <Animated.View\n          style={[\n            this.styles.container,\n            style,\n            opacity && {opacity},\n            backgroundColor && {backgroundColor},\n            {\n              left: animatedProgress.interpolate({\n                inputRange: [0, 100],\n                outputRange: ['0%', '100%']\n              })\n            }\n          ]}\n        >\n          {isDone && !hideScannerLine && <View style={this.styles.scanner}/>}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      ...StyleSheet.absoluteFillObject,\n      backgroundColor: Colors.white,\n      opacity: 0.9\n    },\n    scanner: {\n      ...StyleSheet.absoluteFillObject,\n      borderWidth: StyleSheet.hairlineWidth,\n      borderColor: Colors.grey50\n    }\n  });\n}\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAAQC,aAAa,QAAO,oCAAoC;AAChE,SAAQC,MAAM;AACd,SAAQC,aAAa;AACrB,OAAOC,IAAI;AAA8B;AAAA,IASpBC,eAAe;EAAA;EAAA;EAuClC,yBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAEX,MAAKC,KAAK,GAAG;MACXC,gBAAgB,EAAE,IAAIC,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;MACvCC,MAAM,EAAE;IACV,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OAED,6BAAoB;MAClB,kBAA6B,IAAI,CAACL,KAAK;QAAhCM,QAAQ,eAARA,QAAQ;QAAEC,QAAQ,eAARA,QAAQ;MAEzB,IAAID,QAAQ,GAAG,CAAC,EAAE;QAChB,IAAI,CAACE,OAAO,CAACF,QAAQ,EAAEC,QAAQ,CAAC;MAClC;IACF;EAAC;IAAA;IAAA,OAED,0BAAiB;MACf,IAAI,CAACE,MAAM,GAAGC,YAAY,CAAC,IAAI,CAACV,KAAK,CAAC;IACxC;EAAC;IAAA;IAAA,OAED,4BAAmBW,SAAS,EAAE;MAC5B,mBAA6B,IAAI,CAACX,KAAK;QAAhCM,QAAQ,gBAARA,QAAQ;QAAEC,QAAQ,gBAARA,QAAQ;MAEzB,IAAII,SAAS,CAACL,QAAQ,KAAKA,QAAQ,EAAE;QACnC,IAAI,CAACE,OAAO,CAACF,QAAQ,EAAEC,QAAQ,CAAC;MAClC;IACF;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB,IAAI,CAACN,KAAK,CAACC,gBAAgB,CAACU,aAAa,EAAE;IAC7C;EAAC;IAAA;IAAA,OAED,iBAAQC,OAAO,EAAEN,QAAQ,EAAE;MAAA;MACzB,IAAOL,gBAAgB,GAAI,IAAI,CAACD,KAAK,CAA9BC,gBAAgB;MAEvBC,QAAQ,CAACW,MAAM,CAACZ,gBAAgB,EAAE;QAChCW,OAAO,EAAPA,OAAO;QACPN,QAAQ,EAARA,QAAQ;QACRQ,eAAe,EAAE;MACnB,CAAC,CAAC,CAACC,KAAK,CAAC,gBAAgB;QAAA,IAAdC,QAAQ,QAARA,QAAQ;QACjB,IAAIA,QAAQ,EAAE;UACZ,IAAMZ,MAAM,GAAGQ,OAAO,IAAI,GAAG;UAC7B,MAAI,CAACK,QAAQ,CAAC;YAACb,MAAM,EAANA;UAAM,CAAC,CAAC;UACvBb,CAAC,CAAC2B,MAAM,CAAC,MAAI,CAACnB,KAAK,EAAE,cAAc,EAAE;YAACM,QAAQ,EAAEO,OAAO;YAAER,MAAM,EAANA;UAAM,CAAC,CAAC;QACnE;MACF,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OAED,kBAAS;MACP,mBAA2E,IAAI,CAACL,KAAK;QAA9EoB,OAAO,gBAAPA,OAAO;QAAEC,eAAe,gBAAfA,eAAe;QAAEC,eAAe,gBAAfA,eAAe;QAAEC,KAAK,gBAALA,KAAK;QAAEC,cAAc,gBAAdA,cAAc;MACvE,kBAAmC,IAAI,CAACvB,KAAK;QAAtCI,MAAM,eAANA,MAAM;QAAEH,gBAAgB,eAAhBA,gBAAgB;MAE/B,OACE,KAAC,IAAI;QAAC,KAAK,EAAE,mBAAKuB,UAAU,CAACC,kBAAkB,GAAGF,cAAc,CAAE;QAAA,UAChE,KAAC,QAAQ,CAAC,IAAI;UACZ,KAAK,EAAE,CACL,IAAI,CAACf,MAAM,CAACkB,SAAS,EACrBJ,KAAK,EACLH,OAAO,IAAI;YAACA,OAAO,EAAPA;UAAO,CAAC,EACpBC,eAAe,IAAI;YAACA,eAAe,EAAfA;UAAe,CAAC,EACpC;YACEO,IAAI,EAAE1B,gBAAgB,CAAC2B,WAAW,CAAC;cACjCC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;cACpBC,WAAW,EAAE,CAAC,IAAI,EAAE,MAAM;YAC5B,CAAC;UACH,CAAC,CACD;UAAA,UAED1B,MAAM,IAAI,CAACiB,eAAe,IAAI,KAAC,IAAI;YAAC,KAAK,EAAE,IAAI,CAACb,MAAM,CAACuB;UAAQ;QAAE;MACpD,EACX;IAEX;EAAC;EAAA;AAAA,EAhH0CnC,aAAa;AAArCE,eAAe,CAC3BkC,WAAW,GAAG,iBAAiB;AADnBlC,eAAe,CAE3BmC,SAAS,GAAG;EAKjB5B,QAAQ,EAAEb,SAAS,CAAC0C,MAAM;EAI1B5B,QAAQ,EAAEd,SAAS,CAAC0C,MAAM;EAI1Bf,OAAO,EAAE3B,SAAS,CAAC0C,MAAM;EAIzBd,eAAe,EAAE5B,SAAS,CAAC2C,MAAM;EAIjCC,YAAY,EAAE5C,SAAS,CAAC6C,IAAI;EAI5BhB,eAAe,EAAE7B,SAAS,CAAC8C,IAAI;EAI/Bf,cAAc,EAAE7B,aAAa,CAAC4B;AAChC,CAAC;AAhCkBxB,eAAe,CAkC3ByC,YAAY,GAAG;EACpBlC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC;AAAA,SArCkBR,eAAe;AAmHpC,SAASW,YAAY,GAAG;EACtB,OAAOe,UAAU,CAACgB,MAAM,CAAC;IACvBd,SAAS,kCACJF,UAAU,CAACC,kBAAkB;MAChCL,eAAe,EAAEzB,MAAM,CAAC8C,KAAK;MAC7BtB,OAAO,EAAE;IAAG,EACb;IACDY,OAAO,kCACFP,UAAU,CAACC,kBAAkB;MAChCiB,WAAW,EAAElB,UAAU,CAACmB,aAAa;MACrCC,WAAW,EAAEjD,MAAM,CAACkD;IAAM;EAE9B,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}