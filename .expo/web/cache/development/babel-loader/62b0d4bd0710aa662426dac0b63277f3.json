{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isString from \"lodash/isString\";\nimport React, { Component, isValidElement } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Typography, Spacings, Colors, BorderRadiuses, Shadows } from \"../../style\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Modal from \"../modal\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar sideTip = require(\"./assets/hintTipSide.png\");\nvar middleTip = require(\"./assets/hintTipMiddle.png\");\nvar DEFAULT_COLOR = Colors.$backgroundPrimaryHeavy;\nvar DEFAULT_HINT_OFFSET = Spacings.s4;\nvar DEFAULT_EDGE_MARGINS = Spacings.s5;\nvar TARGET_POSITIONS;\n(function (TARGET_POSITIONS) {\n  TARGET_POSITIONS[\"LEFT\"] = \"left\";\n  TARGET_POSITIONS[\"RIGHT\"] = \"right\";\n  TARGET_POSITIONS[\"CENTER\"] = \"center\";\n})(TARGET_POSITIONS || (TARGET_POSITIONS = {}));\nvar HintPositions;\n(function (HintPositions) {\n  HintPositions[\"TOP\"] = \"top\";\n  HintPositions[\"BOTTOM\"] = \"bottom\";\n})(HintPositions || (HintPositions = {}));\nvar Hint = function (_Component) {\n  _inherits(Hint, _Component);\n  var _super = _createSuper(Hint);\n  function Hint() {\n    var _this;\n    _classCallCheck(this, Hint);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.targetRef = null;\n    _this.hintRef = React.createRef();\n    _this.animationDuration = 170;\n    _this.state = {\n      targetLayoutInWindow: undefined,\n      targetLayout: _this.props.targetFrame,\n      hintUnmounted: !_this.props.visible\n    };\n    _this.visibleAnimated = new Animated.Value(Number(!!_this.props.visible));\n    _this.animateHint = function () {\n      Animated.timing(_this.visibleAnimated, {\n        toValue: Number(!!_this.props.visible),\n        duration: _this.animationDuration,\n        useNativeDriver: true\n      }).start(_this.toggleAnimationEndedToRemoveHint);\n    };\n    _this.toggleAnimationEndedToRemoveHint = function () {\n      _this.setState({\n        hintUnmounted: !_this.props.visible\n      });\n    };\n    _this.focusAccessibilityOnHint = function () {\n      var message = _this.props.message;\n      var targetRefTag = findNodeHandle(_this.targetRef);\n      var hintRefTag = findNodeHandle(_this.hintRef.current);\n      if (targetRefTag && _isString(message)) {\n        AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n      } else if (hintRefTag) {\n        AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n      }\n    };\n    _this.setTargetRef = function (ref) {\n      _this.targetRef = ref;\n      _this.focusAccessibilityOnHint();\n    };\n    _this.onTargetLayout = function (_ref) {\n      var layout = _ref.nativeEvent.layout;\n      if (!_isEqual(_this.state.targetLayout, layout)) {\n        _this.setState({\n          targetLayout: layout\n        });\n      }\n      if (!_this.state.targetLayoutInWindow || _this.props.onBackgroundPress) {\n        setTimeout(function () {\n          var _this$targetRef;\n          (_this$targetRef = _this.targetRef) == null ? void 0 : _this$targetRef.measureInWindow(function (x, y, width, height) {\n            var targetLayoutInWindow = {\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            };\n            _this.setState({\n              targetLayoutInWindow: targetLayoutInWindow\n            });\n          });\n        });\n      }\n    };\n    _this.getHintAnimatedStyle = function () {\n      var position = _this.props.position;\n      var translateY = position === HintPositions.TOP ? -10 : 10;\n      return {\n        opacity: _this.visibleAnimated,\n        transform: [{\n          translateY: _this.visibleAnimated.interpolate({\n            inputRange: [0, 1],\n            outputRange: [translateY, 0]\n          })\n        }]\n      };\n    };\n    _this.isUsingModal = function () {\n      var _this$props = _this.props,\n        onBackgroundPress = _this$props.onBackgroundPress,\n        useModal = _this$props.useModal;\n      return onBackgroundPress && useModal;\n    };\n    return _this;\n  }\n  _createClass(Hint, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.focusAccessibilityOnHint();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.animateHint();\n      }\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var _this$props2 = this.props,\n        visible = _this$props2.visible,\n        message = _this$props2.message;\n      if (visible && _isString(message)) {\n        return {\n          accessible: true,\n          accessibilityLabel: \"hint: \" + message\n        };\n      }\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      var _this$props$container = this.props.containerWidth,\n        containerWidth = _this$props$container === void 0 ? Constants.screenWidth : _this$props$container;\n      return containerWidth;\n    }\n  }, {\n    key: \"targetLayout\",\n    get: function get() {\n      var _this$props3 = this.props,\n        onBackgroundPress = _this$props3.onBackgroundPress,\n        useModal = _this$props3.useModal,\n        targetFrame = _this$props3.targetFrame;\n      var _this$state = this.state,\n        targetLayout = _this$state.targetLayout,\n        targetLayoutInWindow = _this$state.targetLayoutInWindow;\n      if (targetFrame) {\n        return targetFrame;\n      }\n      return onBackgroundPress && useModal ? targetLayoutInWindow : targetLayout;\n    }\n  }, {\n    key: \"showHint\",\n    get: function get() {\n      return !!this.targetLayout;\n    }\n  }, {\n    key: \"tipSize\",\n    get: function get() {\n      return this.useSideTip ? {\n        width: 14,\n        height: 7\n      } : {\n        width: 20,\n        height: 7\n      };\n    }\n  }, {\n    key: \"hintOffset\",\n    get: function get() {\n      var _this$props$offset = this.props.offset,\n        offset = _this$props$offset === void 0 ? DEFAULT_HINT_OFFSET : _this$props$offset;\n      return offset;\n    }\n  }, {\n    key: \"edgeMargins\",\n    get: function get() {\n      var _this$props$edgeMargi = this.props.edgeMargins,\n        edgeMargins = _this$props$edgeMargi === void 0 ? DEFAULT_EDGE_MARGINS : _this$props$edgeMargi;\n      return edgeMargins;\n    }\n  }, {\n    key: \"useSideTip\",\n    get: function get() {\n      var useSideTip = this.props.useSideTip;\n      if (!_isUndefined(useSideTip)) {\n        return useSideTip;\n      }\n      return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n    }\n  }, {\n    key: \"getTargetPositionOnScreen\",\n    value: function getTargetPositionOnScreen() {\n      var _this$targetLayout, _this$targetLayout2;\n      if ((_this$targetLayout = this.targetLayout) != null && _this$targetLayout.x && (_this$targetLayout2 = this.targetLayout) != null && _this$targetLayout2.width) {\n        var targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n        if (targetMidPosition > this.containerWidth * (2 / 3)) {\n          return TARGET_POSITIONS.RIGHT;\n        } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n          return TARGET_POSITIONS.LEFT;\n        }\n      }\n      return TARGET_POSITIONS.CENTER;\n    }\n  }, {\n    key: \"getContainerPosition\",\n    value: function getContainerPosition() {\n      if (this.targetLayout) {\n        return {\n          top: this.targetLayout.y,\n          left: this.targetLayout.x\n        };\n      }\n    }\n  }, {\n    key: \"getHintPosition\",\n    value: function getHintPosition() {\n      var _this$targetLayout3, _this$targetLayout4;\n      var position = this.props.position;\n      var hintPositionStyle = {\n        alignItems: 'center'\n      };\n      if ((_this$targetLayout3 = this.targetLayout) != null && _this$targetLayout3.x) {\n        hintPositionStyle.left = -this.targetLayout.x;\n      }\n      if (position === HintPositions.TOP) {\n        hintPositionStyle.bottom = 0;\n      } else if ((_this$targetLayout4 = this.targetLayout) != null && _this$targetLayout4.height) {\n        hintPositionStyle.top = this.targetLayout.height;\n      }\n      var targetPositionOnScreen = this.getTargetPositionOnScreen();\n      if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n        hintPositionStyle.alignItems = Constants.isRTL ? 'flex-start' : 'flex-end';\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        hintPositionStyle.alignItems = Constants.isRTL ? 'flex-end' : 'flex-start';\n      }\n      return hintPositionStyle;\n    }\n  }, {\n    key: \"getHintPadding\",\n    value: function getHintPadding() {\n      var _this$targetLayout5;\n      var paddings = {\n        paddingVertical: this.hintOffset,\n        paddingHorizontal: this.edgeMargins\n      };\n      if (this.useSideTip && (_this$targetLayout5 = this.targetLayout) != null && _this$targetLayout5.x) {\n        var _this$targetLayout6;\n        var targetPositionOnScreen = this.getTargetPositionOnScreen();\n        if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n          paddings.paddingLeft = this.targetLayout.x;\n        } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT && (_this$targetLayout6 = this.targetLayout) != null && _this$targetLayout6.width) {\n          paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n        }\n      }\n      return paddings;\n    }\n  }, {\n    key: \"getTipPosition\",\n    value: function getTipPosition() {\n      var _this$targetLayout7, _this$targetLayout8;\n      var position = this.props.position;\n      var tipPositionStyle = {};\n      if (position === HintPositions.TOP) {\n        tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n        !this.useSideTip ? tipPositionStyle.bottom += 1 : undefined;\n      } else {\n        tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n      }\n      var layoutWidth = ((_this$targetLayout7 = this.targetLayout) == null ? void 0 : _this$targetLayout7.width) || 0;\n      if ((_this$targetLayout8 = this.targetLayout) != null && _this$targetLayout8.x) {\n        var targetMidWidth = layoutWidth / 2;\n        var tipMidWidth = this.tipSize.width / 2;\n        var leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n        var rightPosition = this.useSideTip ? this.containerWidth - this.targetLayout.x - layoutWidth : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n        var targetPositionOnScreen = this.getTargetPositionOnScreen();\n        switch (targetPositionOnScreen) {\n          case TARGET_POSITIONS.LEFT:\n            tipPositionStyle.left = Constants.isRTL ? rightPosition : leftPosition;\n            break;\n          case TARGET_POSITIONS.RIGHT:\n            tipPositionStyle.right = Constants.isRTL ? leftPosition : rightPosition;\n            break;\n          case TARGET_POSITIONS.CENTER:\n          default:\n            tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n            break;\n        }\n      }\n      return tipPositionStyle;\n    }\n  }, {\n    key: \"renderOverlay\",\n    value: function renderOverlay() {\n      var targetLayoutInWindow = this.state.targetLayoutInWindow;\n      var _this$props4 = this.props,\n        onBackgroundPress = _this$props4.onBackgroundPress,\n        backdropColor = _this$props4.backdropColor,\n        testID = _this$props4.testID;\n      if (targetLayoutInWindow) {\n        var containerPosition = this.getContainerPosition();\n        return _jsx(Animated.View, {\n          style: [styles.overlay, {\n            top: containerPosition.top - targetLayoutInWindow.y,\n            left: containerPosition.left - targetLayoutInWindow.x,\n            backgroundColor: backdropColor,\n            opacity: this.visibleAnimated\n          }],\n          pointerEvents: \"box-none\",\n          testID: testID + \".overlay\",\n          children: onBackgroundPress && _jsx(TouchableWithoutFeedback, {\n            style: StyleSheet.absoluteFillObject,\n            onPress: onBackgroundPress,\n            children: _jsx(View, {\n              flex: true\n            })\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderHintTip\",\n    value: function renderHintTip() {\n      var _this$props5 = this.props,\n        position = _this$props5.position,\n        _this$props5$color = _this$props5.color,\n        color = _this$props5$color === void 0 ? DEFAULT_COLOR : _this$props5$color;\n      var source = this.useSideTip ? sideTip : middleTip;\n      var flipVertically = position === HintPositions.TOP;\n      var flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n      var flipStyle = {\n        transform: [{\n          scaleY: flipVertically ? -1 : 1\n        }, {\n          scaleX: flipHorizontally ? -1 : 1\n        }]\n      };\n      return _jsx(Image, {\n        tintColor: color,\n        source: source,\n        style: [styles.hintTip, this.getTipPosition(), flipStyle]\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props6 = this.props,\n        message = _this$props6.message,\n        messageStyle = _this$props6.messageStyle,\n        icon = _this$props6.icon,\n        iconStyle = _this$props6.iconStyle,\n        borderRadius = _this$props6.borderRadius,\n        _this$props6$color = _this$props6.color,\n        color = _this$props6$color === void 0 ? DEFAULT_COLOR : _this$props6$color,\n        customContent = _this$props6.customContent,\n        removePaddings = _this$props6.removePaddings,\n        enableShadow = _this$props6.enableShadow,\n        visible = _this$props6.visible,\n        testID = _this$props6.testID;\n      return _jsxs(View, {\n        testID: testID + \".message\",\n        row: true,\n        centerV: true,\n        style: [styles.hint, !removePaddings && styles.hintPaddings, visible && enableShadow && styles.containerShadow, {\n          backgroundColor: color\n        }, !_isUndefined(borderRadius) && {\n          borderRadius: borderRadius\n        }],\n        ref: this.hintRef,\n        children: [customContent, !customContent && icon && _jsx(Image, {\n          source: icon,\n          style: [styles.icon, iconStyle]\n        }), !customContent && _jsx(Text, {\n          style: [styles.hintMessage, messageStyle],\n          children: message\n        })]\n      });\n    }\n  }, {\n    key: \"renderHint\",\n    value: function renderHint() {\n      var _this$props7 = this.props,\n        onPress = _this$props7.onPress,\n        testID = _this$props7.testID;\n      var opacity = onPress ? 0.9 : 1.0;\n      if (this.showHint) {\n        return _jsxs(View, {\n          animated: true,\n          style: [{\n            width: this.containerWidth\n          }, styles.animatedContainer, this.getHintPosition(), this.getHintPadding(), this.getHintAnimatedStyle()],\n          pointerEvents: \"box-none\",\n          testID: testID,\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: opacity,\n            onPress: onPress,\n            children: this.renderContent()\n          }), this.renderHintTip()]\n        });\n      }\n    }\n  }, {\n    key: \"renderHintContainer\",\n    value: function renderHintContainer() {\n      var _this$props8 = this.props,\n        style = _this$props8.style,\n        others = _objectWithoutProperties(_this$props8, _excluded);\n      return _jsx(View, _objectSpread(_objectSpread({}, others), {}, {\n        collapsable: true,\n        testID: undefined,\n        style: [styles.container, style, this.getContainerPosition(), !this.isUsingModal() && styles.overlayContainer],\n        children: this.renderHint()\n      }));\n    }\n  }, {\n    key: \"renderMockChildren\",\n    value: function renderMockChildren() {\n      var children = this.props.children;\n      if (children && React.isValidElement(children)) {\n        var _this$targetLayout9, _this$targetLayout10;\n        var layout = _objectSpread(_objectSpread({}, this.getContainerPosition()), {}, {\n          width: (_this$targetLayout9 = this.targetLayout) == null ? void 0 : _this$targetLayout9.width,\n          height: (_this$targetLayout10 = this.targetLayout) == null ? void 0 : _this$targetLayout10.height\n        });\n        return _jsx(View, {\n          style: [styles.mockChildrenContainer, layout],\n          children: React.cloneElement(children, {\n            collapsable: false,\n            key: 'mock',\n            style: [children.props.style, styles.mockChildren]\n          })\n        });\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var targetFrame = this.props.targetFrame;\n      if (!targetFrame && isValidElement(this.props.children)) {\n        return React.cloneElement(this.props.children, _objectSpread({\n          key: 'clone',\n          collapsable: false,\n          onLayout: this.onTargetLayout,\n          ref: this.setTargetRef\n        }, this.getAccessibilityInfo()));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props9 = this.props,\n        onBackgroundPress = _this$props9.onBackgroundPress,\n        backdropColor = _this$props9.backdropColor,\n        testID = _this$props9.testID;\n      if (!this.props.visible && this.state.hintUnmounted) {\n        return this.props.children || null;\n      }\n      return _jsxs(_Fragment, {\n        children: [this.renderChildren(), this.isUsingModal() ? _jsxs(Modal, {\n          visible: this.showHint,\n          animationType: backdropColor ? 'fade' : 'none',\n          overlayBackgroundColor: backdropColor,\n          transparent: true,\n          onBackgroundPress: onBackgroundPress,\n          onRequestClose: onBackgroundPress,\n          testID: testID + \".modal\",\n          children: [this.renderMockChildren(), this.renderHintContainer()]\n        }) : _jsxs(_Fragment, {\n          children: [this.renderOverlay(), this.renderMockChildren(), this.renderHintContainer()]\n        })]\n      });\n    }\n  }]);\n  return Hint;\n}(Component);\nHint.displayName = 'Hint';\nHint.defaultProps = {\n  position: HintPositions.BOTTOM,\n  useModal: true\n};\nHint.positions = HintPositions;\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute'\n  },\n  overlayContainer: {\n    zIndex: 10,\n    elevation: 10\n  },\n  mockChildrenContainer: {\n    position: 'absolute'\n  },\n  mockChildren: {\n    margin: undefined,\n    marginVertical: undefined,\n    marginHorizontal: undefined,\n    marginTop: undefined,\n    marginRight: undefined,\n    marginBottom: undefined,\n    marginLeft: undefined,\n    top: undefined,\n    left: undefined,\n    right: undefined,\n    bottom: undefined\n  },\n  overlay: {\n    position: 'absolute',\n    width: Constants.screenWidth,\n    height: Constants.screenHeight\n  },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: Math.min(Constants.screenWidth - 2 * Spacings.s4, 400),\n    borderRadius: BorderRadiuses.br60,\n    backgroundColor: DEFAULT_COLOR\n  },\n  hintPaddings: {\n    paddingHorizontal: Spacings.s5,\n    paddingTop: Spacings.s3,\n    paddingBottom: Spacings.s4\n  },\n  containerShadow: _objectSpread({}, Shadows.sh30.bottom),\n  hintMessage: _objectSpread(_objectSpread({}, Typography.text70), {}, {\n    color: Colors.white,\n    flexShrink: 1\n  }),\n  icon: {\n    marginRight: Spacings.s4,\n    tintColor: Colors.white\n  }\n});\nexport default asBaseComponent(Hint);","map":{"version":3,"names":["_isUndefined","_isEqual","_isString","React","Component","isValidElement","Typography","Spacings","Colors","BorderRadiuses","Shadows","Constants","asBaseComponent","View","Text","Image","Modal","TouchableOpacity","sideTip","require","middleTip","DEFAULT_COLOR","$backgroundPrimaryHeavy","DEFAULT_HINT_OFFSET","s4","DEFAULT_EDGE_MARGINS","s5","TARGET_POSITIONS","HintPositions","Hint","targetRef","hintRef","createRef","animationDuration","state","targetLayoutInWindow","undefined","targetLayout","props","targetFrame","hintUnmounted","visible","visibleAnimated","Animated","Value","Number","animateHint","timing","toValue","duration","useNativeDriver","start","toggleAnimationEndedToRemoveHint","setState","focusAccessibilityOnHint","message","targetRefTag","findNodeHandle","hintRefTag","current","AccessibilityInfo","setAccessibilityFocus","setTargetRef","ref","onTargetLayout","layout","nativeEvent","onBackgroundPress","setTimeout","measureInWindow","x","y","width","height","getHintAnimatedStyle","position","translateY","TOP","opacity","transform","interpolate","inputRange","outputRange","isUsingModal","useModal","prevProps","accessible","accessibilityLabel","containerWidth","screenWidth","useSideTip","offset","edgeMargins","getTargetPositionOnScreen","CENTER","targetMidPosition","RIGHT","LEFT","top","left","hintPositionStyle","alignItems","bottom","targetPositionOnScreen","isRTL","paddings","paddingVertical","hintOffset","paddingHorizontal","paddingLeft","paddingRight","tipPositionStyle","tipSize","layoutWidth","targetMidWidth","tipMidWidth","leftPosition","rightPosition","right","backdropColor","testID","containerPosition","getContainerPosition","styles","overlay","backgroundColor","StyleSheet","absoluteFillObject","color","source","flipVertically","flipHorizontally","flipStyle","scaleY","scaleX","hintTip","getTipPosition","messageStyle","icon","iconStyle","borderRadius","customContent","removePaddings","enableShadow","hint","hintPaddings","containerShadow","hintMessage","onPress","showHint","animatedContainer","getHintPosition","getHintPadding","renderContent","renderHintTip","style","others","container","overlayContainer","renderHint","children","mockChildrenContainer","cloneElement","collapsable","key","mockChildren","onLayout","getAccessibilityInfo","renderChildren","renderMockChildren","renderHintContainer","renderOverlay","displayName","defaultProps","BOTTOM","positions","create","zIndex","elevation","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","screenHeight","maxWidth","Math","min","br60","paddingTop","s3","paddingBottom","sh30","text70","white","flexShrink","tintColor"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/hint/index.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isString from \"lodash/isString\";\nimport React, { Component, isValidElement } from 'react';\nimport { Animated, StyleSheet, AccessibilityInfo, findNodeHandle, TouchableWithoutFeedback } from 'react-native';\nimport { Typography, Spacings, Colors, BorderRadiuses, Shadows } from \"../../style\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Modal from \"../modal\";\nimport TouchableOpacity from \"../touchableOpacity\";\nconst sideTip = require(\"./assets/hintTipSide.png\");\nconst middleTip = require(\"./assets/hintTipMiddle.png\");\nconst DEFAULT_COLOR = Colors.$backgroundPrimaryHeavy;\nconst DEFAULT_HINT_OFFSET = Spacings.s4;\nconst DEFAULT_EDGE_MARGINS = Spacings.s5;\nvar TARGET_POSITIONS;\n(function (TARGET_POSITIONS) {\n  TARGET_POSITIONS[\"LEFT\"] = \"left\";\n  TARGET_POSITIONS[\"RIGHT\"] = \"right\";\n  TARGET_POSITIONS[\"CENTER\"] = \"center\";\n})(TARGET_POSITIONS || (TARGET_POSITIONS = {}));\nvar HintPositions; // TODO: unify with FeatureHighlightFrame\n(function (HintPositions) {\n  HintPositions[\"TOP\"] = \"top\";\n  HintPositions[\"BOTTOM\"] = \"bottom\";\n})(HintPositions || (HintPositions = {}));\n/**\n * @description: Hint component for displaying a tooltip over wrapped component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/HintsScreen.tsx\n * @notes: You can either wrap a component or pass a specific targetFrame\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Hint/Hint.gif?raw=true\n */\nclass Hint extends Component {\n  static displayName = 'Hint';\n  static defaultProps = {\n    position: HintPositions.BOTTOM,\n    useModal: true\n  };\n  static positions = HintPositions;\n  targetRef = null;\n  hintRef = React.createRef();\n  animationDuration = 170;\n  state = {\n    targetLayoutInWindow: undefined,\n    targetLayout: this.props.targetFrame,\n    hintUnmounted: !this.props.visible\n  };\n  visibleAnimated = new Animated.Value(Number(!!this.props.visible));\n  componentDidMount() {\n    this.focusAccessibilityOnHint();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.visible !== this.props.visible) {\n      this.animateHint();\n    }\n  }\n  animateHint = () => {\n    Animated.timing(this.visibleAnimated, {\n      toValue: Number(!!this.props.visible),\n      duration: this.animationDuration,\n      useNativeDriver: true\n    }).start(this.toggleAnimationEndedToRemoveHint);\n  };\n  toggleAnimationEndedToRemoveHint = () => {\n    this.setState({\n      hintUnmounted: !this.props.visible\n    });\n  };\n  focusAccessibilityOnHint = () => {\n    const {\n      message\n    } = this.props;\n    const targetRefTag = findNodeHandle(this.targetRef);\n    const hintRefTag = findNodeHandle(this.hintRef.current);\n    if (targetRefTag && _isString(message)) {\n      AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n    } else if (hintRefTag) {\n      AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n    }\n  };\n  setTargetRef = ref => {\n    this.targetRef = ref;\n    this.focusAccessibilityOnHint();\n  };\n  onTargetLayout = ({\n    nativeEvent: {\n      layout\n    }\n  }) => {\n    if (!_isEqual(this.state.targetLayout, layout)) {\n      this.setState({\n        targetLayout: layout\n      });\n    }\n    if (!this.state.targetLayoutInWindow || this.props.onBackgroundPress) {\n      setTimeout(() => {\n        this.targetRef?.measureInWindow((x, y, width, height) => {\n          const targetLayoutInWindow = {\n            x,\n            y,\n            width,\n            height\n          };\n          this.setState({\n            targetLayoutInWindow\n          });\n        });\n      });\n    }\n  };\n  getAccessibilityInfo() {\n    const {\n      visible,\n      message\n    } = this.props;\n    if (visible && _isString(message)) {\n      return {\n        accessible: true,\n        accessibilityLabel: `hint: ${message}`\n      };\n    }\n  }\n  get containerWidth() {\n    const {\n      containerWidth = Constants.screenWidth\n    } = this.props;\n    return containerWidth;\n  }\n  get targetLayout() {\n    const {\n      onBackgroundPress,\n      useModal,\n      targetFrame\n    } = this.props;\n    const {\n      targetLayout,\n      targetLayoutInWindow\n    } = this.state;\n    if (targetFrame) {\n      return targetFrame;\n    }\n    return onBackgroundPress && useModal ? targetLayoutInWindow : targetLayout;\n  }\n  get showHint() {\n    return !!this.targetLayout;\n  }\n  get tipSize() {\n    return this.useSideTip ? {\n      width: 14,\n      height: 7\n    } : {\n      width: 20,\n      height: 7\n    };\n  }\n  get hintOffset() {\n    const {\n      offset = DEFAULT_HINT_OFFSET\n    } = this.props;\n    return offset;\n  }\n  get edgeMargins() {\n    const {\n      edgeMargins = DEFAULT_EDGE_MARGINS\n    } = this.props;\n    return edgeMargins;\n  }\n  get useSideTip() {\n    const {\n      useSideTip\n    } = this.props;\n    if (!_isUndefined(useSideTip)) {\n      return useSideTip;\n    }\n    return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n  }\n  getTargetPositionOnScreen() {\n    if (this.targetLayout?.x && this.targetLayout?.width) {\n      const targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n      if (targetMidPosition > this.containerWidth * (2 / 3)) {\n        return TARGET_POSITIONS.RIGHT;\n      } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n        return TARGET_POSITIONS.LEFT;\n      }\n    }\n    return TARGET_POSITIONS.CENTER;\n  }\n  getContainerPosition() {\n    if (this.targetLayout) {\n      return {\n        top: this.targetLayout.y,\n        left: this.targetLayout.x\n      };\n    }\n  }\n  getHintPosition() {\n    const {\n      position\n    } = this.props;\n    const hintPositionStyle = {\n      alignItems: 'center'\n    };\n    if (this.targetLayout?.x) {\n      hintPositionStyle.left = -this.targetLayout.x;\n    }\n    if (position === HintPositions.TOP) {\n      hintPositionStyle.bottom = 0;\n    } else if (this.targetLayout?.height) {\n      hintPositionStyle.top = this.targetLayout.height;\n    }\n    const targetPositionOnScreen = this.getTargetPositionOnScreen();\n    if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-start' : 'flex-end';\n    } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-end' : 'flex-start';\n    }\n    return hintPositionStyle;\n  }\n  getHintPadding() {\n    const paddings = {\n      paddingVertical: this.hintOffset,\n      paddingHorizontal: this.edgeMargins\n    };\n    if (this.useSideTip && this.targetLayout?.x) {\n      const targetPositionOnScreen = this.getTargetPositionOnScreen();\n      if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        paddings.paddingLeft = this.targetLayout.x;\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT && this.targetLayout?.width) {\n        paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n      }\n    }\n    return paddings;\n  }\n  getHintAnimatedStyle = () => {\n    const {\n      position\n    } = this.props;\n    const translateY = position === HintPositions.TOP ? -10 : 10;\n    return {\n      opacity: this.visibleAnimated,\n      transform: [{\n        translateY: this.visibleAnimated.interpolate({\n          inputRange: [0, 1],\n          outputRange: [translateY, 0]\n        })\n      }]\n    };\n  };\n  getTipPosition() {\n    const {\n      position\n    } = this.props;\n    const tipPositionStyle = {};\n    if (position === HintPositions.TOP) {\n      tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n      !this.useSideTip ? tipPositionStyle.bottom += 1 : undefined;\n    } else {\n      tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n    }\n    const layoutWidth = this.targetLayout?.width || 0;\n    if (this.targetLayout?.x) {\n      const targetMidWidth = layoutWidth / 2;\n      const tipMidWidth = this.tipSize.width / 2;\n      const leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n      const rightPosition = this.useSideTip ? this.containerWidth - this.targetLayout.x - layoutWidth : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n      const targetPositionOnScreen = this.getTargetPositionOnScreen();\n      switch (targetPositionOnScreen) {\n        case TARGET_POSITIONS.LEFT:\n          tipPositionStyle.left = Constants.isRTL ? rightPosition : leftPosition;\n          break;\n        case TARGET_POSITIONS.RIGHT:\n          tipPositionStyle.right = Constants.isRTL ? leftPosition : rightPosition;\n          break;\n        case TARGET_POSITIONS.CENTER:\n        default:\n          tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n          break;\n      }\n    }\n    return tipPositionStyle;\n  }\n  isUsingModal = () => {\n    const {\n      onBackgroundPress,\n      useModal\n    } = this.props;\n    return onBackgroundPress && useModal;\n  };\n  renderOverlay() {\n    const {\n      targetLayoutInWindow\n    } = this.state;\n    const {\n      onBackgroundPress,\n      backdropColor,\n      testID\n    } = this.props;\n    if (targetLayoutInWindow) {\n      const containerPosition = this.getContainerPosition();\n      return <Animated.View style={[styles.overlay, {\n        top: containerPosition.top - targetLayoutInWindow.y,\n        left: containerPosition.left - targetLayoutInWindow.x,\n        backgroundColor: backdropColor,\n        opacity: this.visibleAnimated\n      }]} pointerEvents=\"box-none\" testID={`${testID}.overlay`}>\n          {onBackgroundPress && <TouchableWithoutFeedback style={StyleSheet.absoluteFillObject} onPress={onBackgroundPress}>\n              <View flex />\n            </TouchableWithoutFeedback>}\n        </Animated.View>;\n    }\n  }\n  renderHintTip() {\n    const {\n      position,\n      color = DEFAULT_COLOR\n    } = this.props;\n    const source = this.useSideTip ? sideTip : middleTip;\n    const flipVertically = position === HintPositions.TOP;\n    const flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n    const flipStyle = {\n      transform: [{\n        scaleY: flipVertically ? -1 : 1\n      }, {\n        scaleX: flipHorizontally ? -1 : 1\n      }]\n    };\n    return <Image tintColor={color} source={source} style={[styles.hintTip, this.getTipPosition(), flipStyle]} />;\n  }\n  renderContent() {\n    const {\n      message,\n      messageStyle,\n      icon,\n      iconStyle,\n      borderRadius,\n      color = DEFAULT_COLOR,\n      customContent,\n      removePaddings,\n      enableShadow,\n      visible,\n      testID\n    } = this.props;\n    return <View testID={`${testID}.message`} row centerV style={[styles.hint, !removePaddings && styles.hintPaddings, visible && enableShadow && styles.containerShadow, {\n      backgroundColor: color\n    }, !_isUndefined(borderRadius) && {\n      borderRadius\n    }]} ref={this.hintRef}>\n        {customContent}\n        {!customContent && icon && <Image source={icon} style={[styles.icon, iconStyle]} />}\n        {!customContent && <Text style={[styles.hintMessage, messageStyle]}>{message}</Text>}\n      </View>;\n  }\n  renderHint() {\n    const {\n      onPress,\n      testID\n    } = this.props;\n    const opacity = onPress ? 0.9 : 1.0;\n    if (this.showHint) {\n      return <View animated style={[{\n        width: this.containerWidth\n      }, styles.animatedContainer, this.getHintPosition(), this.getHintPadding(), this.getHintAnimatedStyle()]} pointerEvents=\"box-none\" testID={testID}>\n          <TouchableOpacity activeOpacity={opacity} onPress={onPress}>\n            {this.renderContent()}\n          </TouchableOpacity>\n          {this.renderHintTip()}\n        </View>;\n    }\n  }\n  renderHintContainer() {\n    const {\n      style,\n      ...others\n    } = this.props;\n    return <View {...others}\n    // this view must be collapsable, don't pass testID or backgroundColor etc'.\n    collapsable testID={undefined} style={[styles.container, style, this.getContainerPosition(), !this.isUsingModal() && styles.overlayContainer]}>\n        {this.renderHint()}\n      </View>;\n  }\n  renderMockChildren() {\n    const {\n      children\n    } = this.props;\n    if (children && React.isValidElement(children)) {\n      const layout = {\n        ...this.getContainerPosition(),\n        width: this.targetLayout?.width,\n        height: this.targetLayout?.height\n      };\n      return <View style={[styles.mockChildrenContainer, layout]}>\n          {React.cloneElement(children, {\n          collapsable: false,\n          key: 'mock',\n          style: [children.props.style, styles.mockChildren]\n        })}\n        </View>;\n    }\n  }\n  renderChildren() {\n    const {\n      targetFrame\n    } = this.props;\n    if (!targetFrame && isValidElement(this.props.children)) {\n      return React.cloneElement(this.props.children, {\n        key: 'clone',\n        collapsable: false,\n        onLayout: this.onTargetLayout,\n        ref: this.setTargetRef,\n        ...this.getAccessibilityInfo()\n      });\n    }\n  }\n  render() {\n    const {\n      onBackgroundPress,\n      backdropColor,\n      testID\n    } = this.props;\n    if (!this.props.visible && this.state.hintUnmounted) {\n      return this.props.children || null;\n    }\n    return <>\n        {this.renderChildren()}\n        {this.isUsingModal() ? <Modal visible={this.showHint} animationType={backdropColor ? 'fade' : 'none'} overlayBackgroundColor={backdropColor} transparent onBackgroundPress={onBackgroundPress} onRequestClose={onBackgroundPress} testID={`${testID}.modal`}>\n            {this.renderMockChildren()}\n            {this.renderHintContainer()}\n          </Modal> : <>\n            {this.renderOverlay()}\n            {this.renderMockChildren()}\n            {this.renderHintContainer()}\n          </>}\n      </>;\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute'\n  },\n  overlayContainer: {\n    zIndex: 10,\n    elevation: 10\n  },\n  mockChildrenContainer: {\n    position: 'absolute'\n  },\n  mockChildren: {\n    margin: undefined,\n    marginVertical: undefined,\n    marginHorizontal: undefined,\n    marginTop: undefined,\n    marginRight: undefined,\n    marginBottom: undefined,\n    marginLeft: undefined,\n    top: undefined,\n    left: undefined,\n    right: undefined,\n    bottom: undefined\n  },\n  overlay: {\n    position: 'absolute',\n    width: Constants.screenWidth,\n    height: Constants.screenHeight\n  },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: Math.min(Constants.screenWidth - 2 * Spacings.s4, 400),\n    borderRadius: BorderRadiuses.br60,\n    backgroundColor: DEFAULT_COLOR\n  },\n  hintPaddings: {\n    paddingHorizontal: Spacings.s5,\n    paddingTop: Spacings.s3,\n    paddingBottom: Spacings.s4\n  },\n  containerShadow: {\n    ...Shadows.sh30.bottom\n  },\n  hintMessage: {\n    ...Typography.text70,\n    color: Colors.white,\n    flexShrink: 1\n  },\n  icon: {\n    marginRight: Spacings.s4,\n    tintColor: Colors.white\n  }\n});\nexport default asBaseComponent(Hint);"],"mappings":"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"},"metadata":{},"sourceType":"module"}