{"ast":null,"code":"import React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { createGroupChannelListFragment, GroupChannelProps } from '@sendbird/uikit-react-native';\nimport { Text, View, Button } from 'react-native-ui-lib';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GroupChannelListFragment = createGroupChannelListFragment({\n  Header: function Header() {\n    _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Messages\"\n      }), _jsx(Button, {\n        onPressChannel: true,\n        children: \"+\"\n      })]\n    });\n  }\n});\nvar ChannelList = function ChannelList() {\n  var navigation = useNavigation();\n  return _jsx(GroupChannelListFragment, {\n    onPressCreateChannel: function onPressCreateChannel(channelType) {\n      navigation.navigate(\"CreateChannel\", {\n        channelType: channelType\n      });\n    },\n    onPressChannel: function onPressChannel(channel) {\n      navigation.navigate(\"Channel\", {\n        channelUrl: channel.url\n      });\n    }\n  });\n};\nexport default ChannelList;","map":{"version":3,"names":["React","useNavigation","createGroupChannelListFragment","GroupChannelProps","Text","View","Button","GroupChannelListFragment","Header","ChannelList","navigation","channelType","navigate","channel","channelUrl","url"],"sources":["C:/Users/Alex/Documents/development/Rabbit/src/screens/Message/ChannelList.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createGroupChannelListFragment, GroupChannelProps } from '@sendbird/uikit-react-native';\r\nimport { Text, View, Button } from 'react-native-ui-lib';\r\n\r\nconst GroupChannelListFragment = createGroupChannelListFragment({\r\n  Header: () => {\r\n    <View>\r\n      <Text>Messages</Text>\r\n      <Button onPressChannel>+</Button>\r\n    </View>\r\n  }\r\n});\r\n\r\nconst ChannelList = () => {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <GroupChannelListFragment\r\n      onPressCreateChannel={(channelType) => {\r\n        // Navigate to GroupChannelCreate key function.\r\n        navigation.navigate(\"CreateChannel\", { channelType });\r\n      }}\r\n      onPressChannel={(channel) => {\r\n        // Navigate to GroupChannel key function.\r\n        navigation.navigate(\"Channel\", {\r\n          channelUrl: channel.url,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChannelList;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,8BAA8B,EAAEC,iBAAiB,QAAQ,8BAA8B;AAChG,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAM,QAAQ,qBAAqB;AAAC;AAAA;AAEzD,IAAMC,wBAAwB,GAAGL,8BAA8B,CAAC;EAC9DM,MAAM,EAAE,kBAAM;IACZ,MAAC,IAAI;MAAA,WACH,KAAC,IAAI;QAAA,UAAC;MAAQ,EAAO,EACrB,KAAC,MAAM;QAAC,cAAc;QAAA,UAAC;MAAC,EAAS;IAAA,EAC5B;EACT;AACF,CAAC,CAAC;AAEF,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EACxB,IAAMC,UAAU,GAAGT,aAAa,EAAE;EAClC,OACE,KAAC,wBAAwB;IACvB,oBAAoB,EAAE,8BAACU,WAAW,EAAK;MAErCD,UAAU,CAACE,QAAQ,CAAC,eAAe,EAAE;QAAED,WAAW,EAAXA;MAAY,CAAC,CAAC;IACvD,CAAE;IACF,cAAc,EAAE,wBAACE,OAAO,EAAK;MAE3BH,UAAU,CAACE,QAAQ,CAAC,SAAS,EAAE;QAC7BE,UAAU,EAAED,OAAO,CAACE;MACtB,CAAC,CAAC;IACJ;EAAE,EACF;AAEN,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module"}