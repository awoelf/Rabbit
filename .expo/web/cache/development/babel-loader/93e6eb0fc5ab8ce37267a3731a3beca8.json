{"ast":null,"code":"import { Easing, useSharedValue } from 'react-native-reanimated';\nimport Constants from \"../../commons/Constants\";\nexport var WINDOW_WIDTH = Constants.windowWidth;\nexport var DEFAULT_NO_OF_COLUMNS = 3;\nexport var getItemSize = function getItemSize(numOfColumns, viewWidth) {\n  return viewWidth / numOfColumns;\n};\nexport var animationConfig = {\n  easing: Easing.inOut(Easing.ease),\n  duration: 350\n};\nvar usePresenter = function usePresenter(numOfColumns, itemSpacing) {\n  var itemLayout = useSharedValue(undefined);\n  var itemSize = getItemSize(numOfColumns, Constants.screenWidth);\n  return {\n    updateItemLayout: function () {\n      var _f = function _f(layout) {\n        if (itemLayout.value === undefined) {\n          itemLayout.value = layout;\n        }\n      };\n      _f._closure = {\n        itemLayout: itemLayout\n      };\n      _f.asString = \"function _f(layout){const{itemLayout}=jsThis._closure;{if(itemLayout.value===undefined){itemLayout.value=layout;}}}\";\n      _f.__workletHash = 11323392450753;\n      _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\usePresenter.js (14:22)\";\n      return _f;\n    }(),\n    getTranslationByOrderChange: function () {\n      var _f = function _f(newOrder, oldOrder) {\n        var _itemLayout$value$wid, _itemLayout$value, _itemLayout$value$hei, _itemLayout$value2;\n        var oldRow = Math.floor(oldOrder / numOfColumns);\n        var oldColumn = oldOrder % numOfColumns;\n        var newRow = Math.floor(newOrder / numOfColumns);\n        var newColumn = newOrder % numOfColumns;\n        var translation = {\n          x: (Constants.isRTL ? -1 : 1) * (newColumn - oldColumn) * (((_itemLayout$value$wid = (_itemLayout$value = itemLayout.value) == null ? void 0 : _itemLayout$value.width) != null ? _itemLayout$value$wid : 0) + itemSpacing),\n          y: (newRow - oldRow) * (((_itemLayout$value$hei = (_itemLayout$value2 = itemLayout.value) == null ? void 0 : _itemLayout$value2.height) != null ? _itemLayout$value$hei : 0) + itemSpacing)\n        };\n        return translation;\n      };\n      _f._closure = {\n        numOfColumns: numOfColumns,\n        Constants: {\n          isRTL: Constants.isRTL\n        },\n        itemLayout: itemLayout,\n        itemSpacing: itemSpacing\n      };\n      _f.asString = \"function _f(newOrder,oldOrder){const{numOfColumns,Constants,itemLayout,itemSpacing}=jsThis._closure;{var _itemLayout$value$wid,_itemLayout$value,_itemLayout$value$hei,_itemLayout$value2;const oldRow=Math.floor(oldOrder/numOfColumns);const oldColumn=oldOrder%numOfColumns;const newRow=Math.floor(newOrder/numOfColumns);const newColumn=newOrder%numOfColumns;const translation={x:(Constants.isRTL?-1:1)*(newColumn-oldColumn)*(((_itemLayout$value$wid=(_itemLayout$value=itemLayout.value)===null||_itemLayout$value===void 0?void 0:_itemLayout$value.width)!==null&&_itemLayout$value$wid!==void 0?_itemLayout$value$wid:0)+itemSpacing),y:(newRow-oldRow)*(((_itemLayout$value$hei=(_itemLayout$value2=itemLayout.value)===null||_itemLayout$value2===void 0?void 0:_itemLayout$value2.height)!==null&&_itemLayout$value$hei!==void 0?_itemLayout$value$hei:0)+itemSpacing)};return translation;}}\";\n      _f.__workletHash = 7165077873490;\n      _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\usePresenter.js (21:33)\";\n      return _f;\n    }(),\n    getOrderByPosition: function () {\n      var _f = function _f(positionX, positionY) {\n        var col = (Constants.isRTL ? -1 : 1) * Math.round(positionX / itemSize);\n        var row = Math.round(positionY / itemSize);\n        return row * numOfColumns + col;\n      };\n      _f._closure = {\n        Constants: {\n          isRTL: Constants.isRTL\n        },\n        itemSize: itemSize,\n        numOfColumns: numOfColumns\n      };\n      _f.asString = \"function _f(positionX,positionY){const{Constants,itemSize,numOfColumns}=jsThis._closure;{const col=(Constants.isRTL?-1:1)*Math.round(positionX/itemSize);const row=Math.round(positionY/itemSize);return row*numOfColumns+col;}}\";\n      _f.__workletHash = 6303553462454;\n      _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\usePresenter.js (34:24)\";\n      return _f;\n    }(),\n    getItemOrderById: function () {\n      var _f = function _f(itemsOrder, itemId) {\n        return itemsOrder.indexOf(itemId);\n      };\n      _f._closure = {};\n      _f.asString = \"function _f(itemsOrder,itemId){return itemsOrder.indexOf(itemId);}\";\n      _f.__workletHash = 12991594053374;\n      _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\usePresenter.js (41:22)\";\n      return _f;\n    }(),\n    getIdByItemOrder: function () {\n      var _f = function _f(itemsOrder, orderIndex) {\n        return itemsOrder[orderIndex];\n      };\n      _f._closure = {};\n      _f.asString = \"function _f(itemsOrder,orderIndex){return itemsOrder[orderIndex];}\";\n      _f.__workletHash = 4077274101856;\n      _f.__location = \"C:\\\\Users\\\\Alex\\\\Documents\\\\development\\\\Rabbit\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\sortableGridList\\\\usePresenter.js (46:22)\";\n      return _f;\n    }()\n  };\n};\nexport default usePresenter;","map":{"version":3,"names":["Easing","useSharedValue","Constants","WINDOW_WIDTH","windowWidth","DEFAULT_NO_OF_COLUMNS","getItemSize","numOfColumns","viewWidth","animationConfig","easing","inOut","ease","duration","usePresenter","itemSpacing","itemLayout","undefined","itemSize","screenWidth","updateItemLayout","layout","value","getTranslationByOrderChange","newOrder","oldOrder","oldRow","Math","floor","oldColumn","newRow","newColumn","translation","x","isRTL","width","y","height","getOrderByPosition","positionX","positionY","col","round","row","getItemOrderById","itemsOrder","itemId","indexOf","getIdByItemOrder","orderIndex"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/sortableGridList/usePresenter.js"],"sourcesContent":["import { Easing, useSharedValue } from 'react-native-reanimated';\nimport Constants from \"../../commons/Constants\";\nexport const WINDOW_WIDTH = Constants.windowWidth;\nexport const DEFAULT_NO_OF_COLUMNS = 3;\nexport const getItemSize = (numOfColumns, viewWidth) => viewWidth / numOfColumns;\nexport const animationConfig = {\n  easing: Easing.inOut(Easing.ease),\n  duration: 350\n};\nconst usePresenter = (numOfColumns, itemSpacing) => {\n  const itemLayout = useSharedValue(undefined);\n  const itemSize = getItemSize(numOfColumns, Constants.screenWidth);\n  return {\n    updateItemLayout: layout => {\n      'worklet';\n\n      if (itemLayout.value === undefined) {\n        itemLayout.value = layout;\n      }\n    },\n    getTranslationByOrderChange: (newOrder, oldOrder) => {\n      'worklet';\n\n      const oldRow = Math.floor(oldOrder / numOfColumns);\n      const oldColumn = oldOrder % numOfColumns;\n      const newRow = Math.floor(newOrder / numOfColumns);\n      const newColumn = newOrder % numOfColumns;\n      const translation = {\n        x: (Constants.isRTL ? -1 : 1) * (newColumn - oldColumn) * ((itemLayout.value?.width ?? 0) + itemSpacing),\n        y: (newRow - oldRow) * ((itemLayout.value?.height ?? 0) + itemSpacing)\n      };\n      return translation;\n    },\n    getOrderByPosition: (positionX, positionY) => {\n      'worklet';\n\n      const col = (Constants.isRTL ? -1 : 1) * Math.round(positionX / itemSize);\n      const row = Math.round(positionY / itemSize);\n      return row * numOfColumns + col;\n    },\n    getItemOrderById: (itemsOrder, itemId) => {\n      'worklet';\n\n      return itemsOrder.indexOf(itemId);\n    },\n    getIdByItemOrder: (itemsOrder, orderIndex) => {\n      'worklet';\n\n      return itemsOrder[orderIndex];\n    }\n  };\n};\nexport default usePresenter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}