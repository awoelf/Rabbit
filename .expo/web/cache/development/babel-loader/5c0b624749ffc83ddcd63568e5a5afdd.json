{"ast":null,"code":"import _isUndefined from \"lodash/isUndefined\";\nimport React, { useEffect, useRef, useCallback, useContext } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport PanningContext from \"../panningViews/panningContext\";\nimport PanningProvider from \"../panningViews/panningProvider\";\nimport PanResponderView from \"../panningViews/panResponderView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MAXIMUM_DRAGS_AFTER_SWIPE = 2;\nvar DEFAULT_DIRECTION = PanningProvider.Directions.DOWN;\nvar DialogDismissibleView = function DialogDismissibleView(props) {\n  var _props$direction = props.direction,\n    direction = _props$direction === void 0 ? DEFAULT_DIRECTION : _props$direction,\n    propsVisible = props.visible,\n    containerStyle = props.containerStyle,\n    style = props.style,\n    children = props.children,\n    onDismiss = props.onDismiss;\n  var _useContext = useContext(PanningContext),\n    isPanning = _useContext.isPanning,\n    dragDeltas = _useContext.dragDeltas,\n    swipeDirections = _useContext.swipeDirections;\n  var width = useRef(Constants.screenWidth);\n  var height = useRef(Constants.screenHeight);\n  var TOP_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().top : Constants.isIOS ? 20 : 0);\n  var BOTTOM_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().bottom : Constants.isIOS ? 20 : 0);\n  var thresholdX = useRef(0);\n  var thresholdY = useRef(0);\n  var dragsCounter = useRef(0);\n  var containerRef = useRef();\n  var animatedValue = useRef(new Animated.Value(0));\n  var mutableSwipeDirections = useRef({});\n  var prevDragDeltas = useRef();\n  var prevSwipeDirections = useRef();\n  var visible = useRef(Boolean(propsVisible));\n  var getHiddenLocation = useCallback(function (left, top) {\n    var result = {\n      left: 0,\n      top: 0\n    };\n    switch (direction) {\n      case PanningProvider.Directions.LEFT:\n        result.left = -left - width.current;\n        break;\n      case PanningProvider.Directions.RIGHT:\n        result.left = Constants.screenWidth - left;\n        break;\n      case PanningProvider.Directions.UP:\n        result.top = -top - height.current - TOP_INSET.current;\n        break;\n      case PanningProvider.Directions.DOWN:\n      default:\n        result.top = Constants.screenHeight - top + BOTTOM_INSET.current;\n        break;\n    }\n    return result;\n  }, [direction]);\n  var hiddenLocation = useRef(getHiddenLocation(0, 0));\n  var animateTo = useCallback(function (toValue, animationEndCallback) {\n    Animated.timing(animatedValue.current, {\n      toValue: toValue,\n      duration: 300,\n      easing: Easing.bezier(0.2, 0, 0.35, 1),\n      useNativeDriver: true\n    }).start(animationEndCallback);\n  }, []);\n  var isSwiping = useCallback(function () {\n    return !_isUndefined(mutableSwipeDirections.current.x) || !_isUndefined(mutableSwipeDirections.current.y);\n  }, []);\n  var resetSwipe = useCallback(function () {\n    dragsCounter.current = 0;\n    mutableSwipeDirections.current = {};\n  }, []);\n  var onDrag = useCallback(function () {\n    if (isSwiping()) {\n      if (dragsCounter.current < MAXIMUM_DRAGS_AFTER_SWIPE) {\n        dragsCounter.current += 1;\n      } else {\n        resetSwipe();\n      }\n    }\n  }, [isSwiping, resetSwipe]);\n  var hide = useCallback(function () {\n    animateTo(0, function () {\n      visible.current = false;\n      onDismiss == null ? void 0 : onDismiss();\n    });\n  }, [animateTo, onDismiss]);\n  useEffect(function () {\n    var _prevDragDeltas$curre, _prevDragDeltas$curre2;\n    if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== ((_prevDragDeltas$curre = prevDragDeltas.current) == null ? void 0 : _prevDragDeltas$curre.x) || dragDeltas.y !== ((_prevDragDeltas$curre2 = prevDragDeltas.current) == null ? void 0 : _prevDragDeltas$curre2.y))) {\n      onDrag();\n      prevDragDeltas.current = dragDeltas;\n    }\n  }, [isPanning, dragDeltas, onDrag, hide]);\n  useEffect(function () {\n    var _prevSwipeDirections$, _prevSwipeDirections$2;\n    if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== ((_prevSwipeDirections$ = prevSwipeDirections.current) == null ? void 0 : _prevSwipeDirections$.x) || swipeDirections.y !== ((_prevSwipeDirections$2 = prevSwipeDirections.current) == null ? void 0 : _prevSwipeDirections$2.y))) {\n      mutableSwipeDirections.current = swipeDirections;\n    }\n  }, [isPanning, swipeDirections, hide]);\n  useEffect(function () {\n    if (visible.current && !propsVisible) {\n      hide();\n    }\n  }, [propsVisible, hide]);\n  var onLayout = useCallback(function (event) {\n    var layout = event.nativeEvent.layout;\n    width.current = layout.width;\n    height.current = layout.height;\n    thresholdX.current = width.current / 2;\n    thresholdY.current = height.current / 2;\n    if (containerRef.current) {\n      containerRef.current.measureInWindow(function (x, y) {\n        hiddenLocation.current = getHiddenLocation(x, y);\n        animateTo(1);\n      });\n    }\n  }, [getHiddenLocation, animateTo]);\n  var getAnimationStyle = useCallback(function () {\n    return {\n      transform: [{\n        translateX: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.left, 0]\n        })\n      }, {\n        translateY: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.top, 0]\n        })\n      }]\n    };\n  }, []);\n  var resetToShown = useCallback(function (left, top, direction) {\n    var toValue = [PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT].includes(direction) ? 1 + left / hiddenLocation.current.left : 1 + top / hiddenLocation.current.top;\n    animateTo(toValue);\n  }, [animateTo]);\n  var onPanLocationChanged = useCallback(function (_ref) {\n    var _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top;\n    var endValue = {\n      x: Math.round(left),\n      y: Math.round(top)\n    };\n    if (isSwiping()) {\n      hide();\n    } else {\n      resetSwipe();\n      if (direction === PanningProvider.Directions.LEFT && endValue.x <= -thresholdX.current || direction === PanningProvider.Directions.RIGHT && endValue.x >= thresholdX.current || direction === PanningProvider.Directions.UP && endValue.y <= -thresholdY.current || direction === PanningProvider.Directions.DOWN && endValue.y >= thresholdY.current) {\n        hide();\n      } else {\n        resetToShown(left, top, direction);\n      }\n    }\n  }, [isSwiping, hide, resetSwipe, direction, resetToShown]);\n  return _jsx(View, {\n    ref: containerRef,\n    style: containerStyle,\n    onLayout: onLayout,\n    children: _jsx(PanResponderView, {\n      style: [style, getAnimationStyle(), !visible.current && styles.hidden],\n      isAnimated: true,\n      onPanLocationChanged: onPanLocationChanged,\n      children: children\n    })\n  });\n};\nDialogDismissibleView.displayName = 'IGNORE';\nDialogDismissibleView.defaultProps = {\n  direction: DEFAULT_DIRECTION,\n  onDismiss: function onDismiss() {}\n};\nexport default DialogDismissibleView;\nvar styles = StyleSheet.create({\n  hidden: {\n    opacity: 0\n  }\n});","map":{"version":3,"names":["_isUndefined","React","useEffect","useRef","useCallback","useContext","Constants","View","PanningContext","PanningProvider","PanResponderView","MAXIMUM_DRAGS_AFTER_SWIPE","DEFAULT_DIRECTION","Directions","DOWN","DialogDismissibleView","props","direction","propsVisible","visible","containerStyle","style","children","onDismiss","isPanning","dragDeltas","swipeDirections","width","screenWidth","height","screenHeight","TOP_INSET","isIphoneX","getSafeAreaInsets","top","isIOS","BOTTOM_INSET","bottom","thresholdX","thresholdY","dragsCounter","containerRef","animatedValue","Animated","Value","mutableSwipeDirections","prevDragDeltas","prevSwipeDirections","Boolean","getHiddenLocation","left","result","LEFT","current","RIGHT","UP","hiddenLocation","animateTo","toValue","animationEndCallback","timing","duration","easing","Easing","bezier","useNativeDriver","start","isSwiping","x","y","resetSwipe","onDrag","hide","onLayout","event","layout","nativeEvent","measureInWindow","getAnimationStyle","transform","translateX","interpolate","inputRange","outputRange","translateY","resetToShown","includes","onPanLocationChanged","endValue","Math","round","styles","hidden","displayName","defaultProps","StyleSheet","create","opacity"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/dialog/DialogDismissibleView.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport React, { useEffect, useRef, useCallback, useContext } from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport PanningContext from \"../panningViews/panningContext\";\nimport PanningProvider from \"../panningViews/panningProvider\";\nimport PanResponderView from \"../panningViews/panResponderView\";\nconst MAXIMUM_DRAGS_AFTER_SWIPE = 2;\n\n// TODO: move this to panningContext\n\nconst DEFAULT_DIRECTION = PanningProvider.Directions.DOWN;\nconst DialogDismissibleView = props => {\n  const {\n    direction = DEFAULT_DIRECTION,\n    visible: propsVisible,\n    containerStyle,\n    style,\n    children,\n    onDismiss\n  } = props;\n  // @ts-expect-error\n  const {\n    isPanning,\n    dragDeltas,\n    swipeDirections\n  } = useContext(PanningContext);\n  const width = useRef(Constants.screenWidth);\n  const height = useRef(Constants.screenHeight);\n  const TOP_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().top : Constants.isIOS ? 20 : 0);\n  const BOTTOM_INSET = useRef(Constants.isIphoneX ? Constants.getSafeAreaInsets().bottom : Constants.isIOS ? 20 : 0);\n  const thresholdX = useRef(0);\n  const thresholdY = useRef(0);\n  const dragsCounter = useRef(0);\n  const containerRef = useRef();\n  const animatedValue = useRef(new Animated.Value(0));\n  const mutableSwipeDirections = useRef({});\n  const prevDragDeltas = useRef();\n  const prevSwipeDirections = useRef();\n  const visible = useRef(Boolean(propsVisible));\n  const getHiddenLocation = useCallback((left, top) => {\n    const result = {\n      left: 0,\n      top: 0\n    };\n    switch (direction) {\n      case PanningProvider.Directions.LEFT:\n        result.left = -left - width.current;\n        break;\n      case PanningProvider.Directions.RIGHT:\n        result.left = Constants.screenWidth - left;\n        break;\n      case PanningProvider.Directions.UP:\n        result.top = -top - height.current - TOP_INSET.current;\n        break;\n      case PanningProvider.Directions.DOWN:\n      default:\n        result.top = Constants.screenHeight - top + BOTTOM_INSET.current;\n        break;\n    }\n    return result;\n  }, [direction]);\n  const hiddenLocation = useRef(getHiddenLocation(0, 0));\n  const animateTo = useCallback((toValue, animationEndCallback) => {\n    Animated.timing(animatedValue.current, {\n      toValue,\n      duration: 300,\n      easing: Easing.bezier(0.2, 0, 0.35, 1),\n      useNativeDriver: true\n    }).start(animationEndCallback);\n  }, []);\n  const isSwiping = useCallback(() => {\n    return !_isUndefined(mutableSwipeDirections.current.x) || !_isUndefined(mutableSwipeDirections.current.y);\n  }, []);\n  const resetSwipe = useCallback(() => {\n    dragsCounter.current = 0;\n    mutableSwipeDirections.current = {};\n  }, []);\n  const onDrag = useCallback(() => {\n    if (isSwiping()) {\n      if (dragsCounter.current < MAXIMUM_DRAGS_AFTER_SWIPE) {\n        dragsCounter.current += 1;\n      } else {\n        resetSwipe();\n      }\n    }\n  }, [isSwiping, resetSwipe]);\n  const hide = useCallback(() => {\n    // TODO: test we're not animating?\n    animateTo(0, () => {\n      visible.current = false;\n      onDismiss?.();\n    });\n  }, [animateTo, onDismiss]);\n  useEffect(() => {\n    if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.current?.x || dragDeltas.y !== prevDragDeltas.current?.y)) {\n      onDrag();\n      prevDragDeltas.current = dragDeltas;\n    }\n  }, [isPanning, dragDeltas, onDrag, hide]);\n  useEffect(() => {\n    if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== prevSwipeDirections.current?.x || swipeDirections.y !== prevSwipeDirections.current?.y)) {\n      mutableSwipeDirections.current = swipeDirections;\n    }\n  }, [isPanning, swipeDirections, hide]);\n  useEffect(() => {\n    if (visible.current && !propsVisible) {\n      hide();\n    }\n  }, [propsVisible, hide]);\n  const onLayout = useCallback(event => {\n    // DO NOT move the width\\height into the measureInWindow - it causes errors with orientation change\n    const layout = event.nativeEvent.layout;\n    width.current = layout.width;\n    height.current = layout.height;\n    thresholdX.current = width.current / 2;\n    thresholdY.current = height.current / 2;\n    if (containerRef.current) {\n      // @ts-ignore TODO: can we fix this on ViewProps \\ View?\n      containerRef.current.measureInWindow((x, y) => {\n        hiddenLocation.current = getHiddenLocation(x, y);\n        animateTo(1);\n      });\n    }\n  }, [getHiddenLocation, animateTo]);\n  const getAnimationStyle = useCallback(() => {\n    return {\n      transform: [{\n        translateX: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.left, 0]\n        })\n      }, {\n        translateY: animatedValue.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [hiddenLocation.current.top, 0]\n        })\n      }]\n    };\n  }, []);\n  const resetToShown = useCallback((left, top, direction) => {\n    const toValue =\n    //@ts-expect-error\n    [PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT].includes(direction) ? 1 + left / hiddenLocation.current.left : 1 + top / hiddenLocation.current.top;\n    animateTo(toValue);\n  }, [animateTo]);\n  const onPanLocationChanged = useCallback(({\n    left = 0,\n    top = 0\n  }) => {\n    const endValue = {\n      x: Math.round(left),\n      y: Math.round(top)\n    };\n    if (isSwiping()) {\n      hide();\n    } else {\n      resetSwipe();\n      if (direction === PanningProvider.Directions.LEFT && endValue.x <= -thresholdX.current || direction === PanningProvider.Directions.RIGHT && endValue.x >= thresholdX.current || direction === PanningProvider.Directions.UP && endValue.y <= -thresholdY.current || direction === PanningProvider.Directions.DOWN && endValue.y >= thresholdY.current) {\n        hide();\n      } else {\n        resetToShown(left, top, direction);\n      }\n    }\n  }, [isSwiping, hide, resetSwipe, direction, resetToShown]);\n  return (\n    // @ts-ignore\n    <View ref={containerRef} style={containerStyle} onLayout={onLayout}>\n      <PanResponderView\n      // !visible.current && styles.hidden is done to fix a bug is iOS\n      style={[style, getAnimationStyle(), !visible.current && styles.hidden]} isAnimated onPanLocationChanged={onPanLocationChanged}>\n        {children}\n      </PanResponderView>\n    </View>\n  );\n};\nDialogDismissibleView.displayName = 'IGNORE';\nDialogDismissibleView.defaultProps = {\n  direction: DEFAULT_DIRECTION,\n  onDismiss: () => {}\n};\nexport default DialogDismissibleView;\nconst styles = StyleSheet.create({\n  hidden: {\n    opacity: 0\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}