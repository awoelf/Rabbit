{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"tintColor\", \"style\", \"supportRTL\", \"source\", \"assetGroup\", \"assetName\", \"modifiers\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport isUndefined from 'lodash/isUndefined';\nimport React, { useMemo } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport { getAsset, isSvg } from \"../../utils/imageUtils\";\nimport SvgImage from \"../svgImage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Icon = function Icon(props) {\n  var size = props.size,\n    tintColor = props.tintColor,\n    style = props.style,\n    supportRTL = props.supportRTL,\n    source = props.source,\n    assetGroup = props.assetGroup,\n    assetName = props.assetName,\n    modifiers = props.modifiers,\n    others = _objectWithoutProperties(props, _excluded);\n  var margins = modifiers.margins;\n  var iconSize = size ? {\n    width: size,\n    height: size\n  } : undefined;\n  var shouldFlipRTL = supportRTL && Constants.isRTL;\n  var iconSource = useMemo(function () {\n    if (!isUndefined(assetName)) {\n      return getAsset(assetName, assetGroup);\n    }\n    return source;\n  }, [source, assetGroup, assetName]);\n  return isSvg(source) ? _jsx(SvgImage, _objectSpread({\n    data: source\n  }, props)) : _jsx(Image, _objectSpread(_objectSpread({}, others), {}, {\n    source: iconSource,\n    style: [style, margins, iconSize, shouldFlipRTL && styles.rtlFlipped, !!tintColor && {\n      tintColor: tintColor\n    }]\n  }));\n};\nIcon.displayName = 'Icon';\nIcon.defaultProps = {\n  assetGroup: 'icons'\n};\nexport default asBaseComponent(Icon, {\n  modifiersOptions: {\n    margins: true\n  }\n});\nvar styles = StyleSheet.create({\n  rtlFlipped: {\n    transform: [{\n      scaleX: -1\n    }]\n  }\n});","map":{"version":3,"names":["isUndefined","React","useMemo","asBaseComponent","Constants","getAsset","isSvg","SvgImage","Icon","props","size","tintColor","style","supportRTL","source","assetGroup","assetName","modifiers","others","margins","iconSize","width","height","undefined","shouldFlipRTL","isRTL","iconSource","styles","rtlFlipped","displayName","defaultProps","modifiersOptions","StyleSheet","create","transform","scaleX"],"sources":["C:/Users/Alex/Documents/development/Rabbit/node_modules/react-native-ui-lib/src/components/icon/index.js"],"sourcesContent":["import isUndefined from 'lodash/isUndefined';\nimport React, { useMemo } from 'react';\nimport { Image, StyleSheet } from 'react-native';\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport { getAsset, isSvg } from \"../../utils/imageUtils\";\nimport SvgImage from \"../svgImage\";\nconst Icon = props => {\n  const {\n    size,\n    tintColor,\n    style,\n    supportRTL,\n    source,\n    assetGroup,\n    assetName,\n    modifiers,\n    ...others\n  } = props;\n  const {\n    margins\n  } = modifiers;\n  const iconSize = size ? {\n    width: size,\n    height: size\n  } : undefined;\n  const shouldFlipRTL = supportRTL && Constants.isRTL;\n  const iconSource = useMemo(() => {\n    if (!isUndefined(assetName)) {\n      return getAsset(assetName, assetGroup);\n    }\n    return source;\n  }, [source, assetGroup, assetName]);\n  return isSvg(source) ? <SvgImage data={source} {...props} /> : <Image {...others} source={iconSource} style={[style, margins, iconSize, shouldFlipRTL && styles.rtlFlipped, !!tintColor && {\n    tintColor\n  }]} />;\n};\nIcon.displayName = 'Icon';\nIcon.defaultProps = {\n  assetGroup: 'icons'\n};\nexport default asBaseComponent(Icon, {\n  modifiersOptions: {\n    margins: true\n  }\n});\nconst styles = StyleSheet.create({\n  rtlFlipped: {\n    transform: [{\n      scaleX: -1\n    }]\n  }\n});"],"mappings":";;;;;AAAA,OAAOA,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC;AAAA;AAEvC,SAASC,eAAe,EAAEC,SAAS;AACnC,SAASC,QAAQ,EAAEC,KAAK;AACxB,OAAOC,QAAQ;AAAoB;AACnC,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAGC,KAAK,EAAI;EACpB,IACEC,IAAI,GASFD,KAAK,CATPC,IAAI;IACJC,SAAS,GAQPF,KAAK,CARPE,SAAS;IACTC,KAAK,GAOHH,KAAK,CAPPG,KAAK;IACLC,UAAU,GAMRJ,KAAK,CANPI,UAAU;IACVC,MAAM,GAKJL,KAAK,CALPK,MAAM;IACNC,UAAU,GAIRN,KAAK,CAJPM,UAAU;IACVC,SAAS,GAGPP,KAAK,CAHPO,SAAS;IACTC,SAAS,GAEPR,KAAK,CAFPQ,SAAS;IACNC,MAAM,4BACPT,KAAK;EACT,IACEU,OAAO,GACLF,SAAS,CADXE,OAAO;EAET,IAAMC,QAAQ,GAAGV,IAAI,GAAG;IACtBW,KAAK,EAAEX,IAAI;IACXY,MAAM,EAAEZ;EACV,CAAC,GAAGa,SAAS;EACb,IAAMC,aAAa,GAAGX,UAAU,IAAIT,SAAS,CAACqB,KAAK;EACnD,IAAMC,UAAU,GAAGxB,OAAO,CAAC,YAAM;IAC/B,IAAI,CAACF,WAAW,CAACgB,SAAS,CAAC,EAAE;MAC3B,OAAOX,QAAQ,CAACW,SAAS,EAAED,UAAU,CAAC;IACxC;IACA,OAAOD,MAAM;EACf,CAAC,EAAE,CAACA,MAAM,EAAEC,UAAU,EAAEC,SAAS,CAAC,CAAC;EACnC,OAAOV,KAAK,CAACQ,MAAM,CAAC,GAAG,KAAC,QAAQ;IAAC,IAAI,EAAEA;EAAO,GAAKL,KAAK,EAAI,GAAG,KAAC,KAAK,kCAAKS,MAAM;IAAE,MAAM,EAAEQ,UAAW;IAAC,KAAK,EAAE,CAACd,KAAK,EAAEO,OAAO,EAAEC,QAAQ,EAAEI,aAAa,IAAIG,MAAM,CAACC,UAAU,EAAE,CAAC,CAACjB,SAAS,IAAI;MACzLA,SAAS,EAATA;IACF,CAAC;EAAE,GAAG;AACR,CAAC;AACDH,IAAI,CAACqB,WAAW,GAAG,MAAM;AACzBrB,IAAI,CAACsB,YAAY,GAAG;EAClBf,UAAU,EAAE;AACd,CAAC;AACD,eAAeZ,eAAe,CAACK,IAAI,EAAE;EACnCuB,gBAAgB,EAAE;IAChBZ,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AACF,IAAMQ,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC/BL,UAAU,EAAE;IACVM,SAAS,EAAE,CAAC;MACVC,MAAM,EAAE,CAAC;IACX,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}